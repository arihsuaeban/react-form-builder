{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Component2 = _interopRequireDefault(require(\"../_classes/component/Component\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar HTMLComponent = /*#__PURE__*/function (_Component) {\n  _inherits(HTMLComponent, _Component);\n\n  var _super = _createSuper(HTMLComponent);\n\n  function HTMLComponent() {\n    _classCallCheck(this, HTMLComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTMLComponent, [{\n    key: \"defaultSchema\",\n    get: function get() {\n      return HTMLComponent.schema();\n    }\n  }, {\n    key: \"content\",\n    get: function get() {\n      if (this.builderMode) {\n        return this.component.content;\n      } // i18n returns error exactly with word 'select', spaces will be trimmed\n\n\n      if (this.component.content.replace(/(<(\\/?[^>]+)>)/g, '').trim() === 'select') {\n        return \" \".concat(this.component.content, \" \");\n      }\n\n      var submission = _lodash.default.get(this.root, 'submission', {});\n\n      var content = this.component.content ? this.interpolate(this.component.content, {\n        metadata: submission.metadata || {},\n        submission: submission,\n        data: this.rootValue,\n        row: this.data\n      }) : '';\n      return this.sanitize(content, this.shouldSanitizeValue);\n    }\n  }, {\n    key: \"singleTags\",\n    get: function get() {\n      return ['br', 'img', 'hr'];\n    }\n  }, {\n    key: \"checkRefreshOn\",\n    value: function checkRefreshOn(changed) {\n      _get(_getPrototypeOf(HTMLComponent.prototype), \"checkRefreshOn\", this).call(this, changed);\n\n      if (!this.builderMode && this.component.refreshOnChange && this.element && this.conditionallyVisible(this.data, this.row)) {\n        this.setContent(this.element, this.renderContent());\n      }\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this = this;\n\n      var submission = _lodash.default.get(this.root, 'submission', {});\n\n      return this.renderTemplate('html', {\n        component: this.component,\n        tag: this.component.tag,\n        attrs: (this.component.attrs || []).map(function (attr) {\n          return {\n            attr: attr.attr,\n            value: _this.interpolate(attr.value, {\n              metadata: submission.metadata || {},\n              submission: submission,\n              data: _this.rootValue,\n              row: _this.data\n            })\n          };\n        }),\n        content: this.content,\n        singleTags: this.singleTags\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _get(_getPrototypeOf(HTMLComponent.prototype), \"render\", this).call(this, this.renderContent());\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(element) {\n      this.loadRefs(element, {\n        html: 'single'\n      });\n      return _get(_getPrototypeOf(HTMLComponent.prototype), \"attach\", this).call(this, element);\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _Component2.default.schema.apply(_Component2.default, [{\n        label: 'HTML',\n        type: 'htmlelement',\n        tag: 'p',\n        attrs: [],\n        content: '',\n        input: false,\n        persistent: false\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'HTML Element',\n        group: 'layout',\n        icon: 'code',\n        weight: 0,\n        documentation: '/userguide/#html-element-component',\n        schema: HTMLComponent.schema()\n      };\n    }\n  }]);\n\n  return HTMLComponent;\n}(_Component2.default);\n\nexports.default = HTMLComponent;","map":null,"metadata":{},"sourceType":"script"}