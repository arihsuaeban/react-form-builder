{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.reflect.set\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _Field2 = _interopRequireDefault(require(\"../_classes/field/Field\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = _superPropBase(target, property);\n\n      var desc;\n\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        _defineProperty(receiver, property, value);\n      }\n\n      return true;\n    };\n  }\n\n  return set(target, property, value, receiver);\n}\n\nfunction _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n\n  if (!s && isStrict) {\n    throw new Error('failed to set property');\n  }\n\n  return value;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar SurveyComponent = /*#__PURE__*/function (_Field) {\n  _inherits(SurveyComponent, _Field);\n\n  var _super = _createSuper(SurveyComponent);\n\n  function SurveyComponent() {\n    _classCallCheck(this, SurveyComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SurveyComponent, [{\n    key: \"defaultSchema\",\n    get: function get() {\n      return SurveyComponent.schema();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _get(_getPrototypeOf(SurveyComponent.prototype), \"render\", this).call(this, this.renderTemplate('survey'));\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(element) {\n      var _this = this;\n\n      this.loadRefs(element, {\n        input: 'multiple'\n      });\n\n      var superAttach = _get(_getPrototypeOf(SurveyComponent.prototype), \"attach\", this).call(this, element);\n\n      this.refs.input.forEach(function (input) {\n        if (_this.disabled) {\n          input.setAttribute('disabled', 'disabled');\n        } else {\n          _this.addEventListener(input, 'change', function () {\n            return _this.updateValue(null, {\n              modified: true\n            });\n          });\n        }\n      });\n      this.setValue(this.dataValue);\n      return superAttach;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _this2 = this;\n\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!value) {\n        return false;\n      }\n\n      _lodash.default.each(this.component.questions, function (question) {\n        _lodash.default.each(_this2.refs.input, function (input) {\n          if (input.name === _this2.getInputName(question)) {\n            input.checked = input.value === value[question.value];\n          }\n        });\n      });\n\n      var changed = this.updateValue(value, flags);\n\n      if (changed && this.isHtmlRenderMode()) {\n        this.redraw();\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"emptyValue\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var defaultValue = _get(_getPrototypeOf(SurveyComponent.prototype), \"defaultValue\", this); //support for default values created in old formio.js versions\n\n\n      if (defaultValue && !_lodash.default.isObject(defaultValue) && this.component.values.some(function (value) {\n        return value.value === defaultValue;\n      })) {\n        var adoptedDefaultValue = {};\n        this.component.questions.forEach(function (question) {\n          adoptedDefaultValue[question.value] = defaultValue;\n        });\n        return adoptedDefaultValue;\n      }\n\n      return defaultValue;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var _this3 = this;\n\n      if (this.viewOnly || !this.refs.input || !this.refs.input.length) {\n        return this.dataValue;\n      }\n\n      var value = {};\n\n      _lodash.default.each(this.component.questions, function (question) {\n        _lodash.default.each(_this3.refs.input, function (input) {\n          if (input.checked && input.name === _this3.getInputName(question)) {\n            value[question.value] = input.value;\n            return false;\n          }\n        });\n      });\n\n      return value;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return _get(_getPrototypeOf(SurveyComponent.prototype), \"disabled\", this);\n    },\n    set: function set(disabled) {\n      _set(_getPrototypeOf(SurveyComponent.prototype), \"disabled\", disabled, this, true);\n\n      _lodash.default.each(this.refs.input, function (input) {\n        input.disabled = true;\n      });\n    }\n  }, {\n    key: \"validateRequired\",\n    value: function validateRequired(setting, value) {\n      if (!(0, _utils.boolValue)(setting)) {\n        return true;\n      }\n\n      return this.component.questions.reduce(function (result, question) {\n        return result && Boolean(value[question.value]);\n      }, true);\n    }\n  }, {\n    key: \"getInputName\",\n    value: function getInputName(question) {\n      return \"\".concat(this.options.name, \"[\").concat(question.value, \"]\");\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value, options) {\n      var _this4 = this;\n\n      if (options !== null && options !== void 0 && options.email) {\n        var result = \"\\n        <table border=\\\"1\\\" style=\\\"width:100%\\\">\\n          <thead>\\n            <tr>\\n              <th>Question</th>\\n              <th>Value</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n      \";\n\n        _lodash.default.forIn(value, function (value, key) {\n          var question = _lodash.default.find(_this4.component.questions, ['value', key]);\n\n          var answer = _lodash.default.find(_this4.component.values, ['value', value]);\n\n          if (!question || !answer) {\n            return;\n          }\n\n          result += \"\\n            <tr>\\n              <td style=\\\"text-align:center;padding: 5px 10px;\\\">\".concat(question.label, \"</td>\\n              <td style=\\\"text-align:center;padding: 5px 10px;\\\">\").concat(answer.label, \"</td>\\n            </tr>\\n          \");\n        });\n\n        result += '</tbody></table>';\n        return result;\n      }\n\n      return _get(_getPrototypeOf(SurveyComponent.prototype), \"getValueAsString\", this).call(this, value, options);\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _Field2.default.schema.apply(_Field2.default, [{\n        type: 'survey',\n        label: 'Survey',\n        key: 'survey',\n        questions: [],\n        values: []\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Survey',\n        group: 'advanced',\n        icon: 'list',\n        weight: 110,\n        documentation: '/userguide/#survey',\n        schema: SurveyComponent.schema()\n      };\n    }\n  }]);\n\n  return SurveyComponent;\n}(_Field2.default);\n\nexports.default = SurveyComponent;","map":null,"metadata":{},"sourceType":"script"}