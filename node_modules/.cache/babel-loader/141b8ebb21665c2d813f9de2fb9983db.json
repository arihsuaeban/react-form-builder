{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  type: 'checkbox',\n  input: true,\n  key: 'enableMinDateInput',\n  label: 'Use Input to add moment.js for minDate',\n  persistent: false,\n  weight: 10,\n  tooltip: 'Enables to use input for moment functions instead of calendar.'\n}, {\n  type: 'datetime',\n  input: true,\n  key: 'datePicker.minDate',\n  label: 'Use calendar to set minDate',\n  skipMerge: true,\n  weight: 10,\n  tooltip: 'Enables to use calendar to set date.',\n  customConditional: function customConditional(_ref) {\n    var data = _ref.data,\n        component = _ref.component;\n\n    if (component.datePicker && component.datePicker.minDate && component.datePicker.minDate.indexOf('moment') !== -1) {\n      return false;\n    }\n\n    return !data.enableMinDateInput;\n  }\n}, {\n  type: 'textfield',\n  input: true,\n  enableTime: false,\n  key: 'datePicker.minDate',\n  skipMerge: true,\n  label: 'Minimum Date',\n  weight: 10,\n  tooltip: 'The minimum date that can be picked. You can also use Moment.js functions. For example: \\n \\n moment().subtract(10, \\'days\\')',\n  customConditional: function customConditional(_ref2) {\n    var data = _ref2.data,\n        component = _ref2.component;\n\n    if (component.datePicker && component.datePicker.minDate && component.datePicker.minDate.indexOf('moment') !== -1) {\n      return true;\n    }\n\n    return data.enableMinDateInput;\n  }\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'enableMaxDateInput',\n  label: 'Use Input to add moment.js for maxDate',\n  persistent: false,\n  weight: 20,\n  tooltip: 'Enables to use input for moment functions instead of calendar.'\n}, {\n  type: 'datetime',\n  input: true,\n  key: 'datePicker.maxDate',\n  skipMerge: true,\n  label: 'Use calendar to set maxDate',\n  weight: 20,\n  tooltip: 'Enables to use calendar to set date.',\n  customConditional: function customConditional(_ref3) {\n    var data = _ref3.data,\n        component = _ref3.component;\n\n    if (component.datePicker && component.datePicker.maxDate && component.datePicker.maxDate.indexOf('moment') !== -1) {\n      return false;\n    }\n\n    return !data.enableMaxDateInput;\n  }\n}, {\n  type: 'textfield',\n  input: true,\n  enableTime: false,\n  key: 'datePicker.maxDate',\n  skipMerge: true,\n  label: 'Maximum Date',\n  tooltip: 'The maximum date that can be picked. You can also use Moment.js functions. For example: \\n \\n moment().add(10, \\'days\\')',\n  weight: 20,\n  customConditional: function customConditional(_ref4) {\n    var data = _ref4.data,\n        component = _ref4.component;\n\n    if (component.datePicker && component.datePicker.maxDate && component.datePicker.maxDate.indexOf('moment') !== -1) {\n      return true;\n    }\n\n    return data.enableMaxDateInput;\n  }\n}];\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}