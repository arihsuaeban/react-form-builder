{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _Formio = require(\"./Formio\");\n\nvar _Webform2 = _interopRequireDefault(require(\"./Webform\"));\n\nvar _utils = require(\"./utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar PDF = /*#__PURE__*/function (_Webform) {\n  _inherits(PDF, _Webform);\n\n  var _super = _createSuper(PDF);\n\n  function PDF(element, options) {\n    var _this;\n\n    _classCallCheck(this, PDF);\n\n    options.display = 'pdf';\n    _this = _super.call(this, element, options);\n    _this.components = [];\n    return _this;\n  }\n\n  _createClass(PDF, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(PDF.prototype), \"init\", this).call(this); // Handle an iframe submission.\n\n\n      this.on('iframe-submission', function (submission) {\n        return _this2.setValue(submission, {\n          fromIframe: true\n        });\n      }, true);\n      this.on('iframe-change', function (submission) {\n        return _this2.setValue(submission, {\n          fromIframe: true\n        });\n      }, true);\n      this.on('iframe-getIframePositions', function (query) {\n        var iframe = document.getElementById(\"iframe-\".concat(query.formId));\n\n        if (iframe) {\n          var iframeBoundingClientRect = iframe.getBoundingClientRect();\n\n          _this2.postMessage({\n            name: 'iframePositions',\n            data: {\n              formId: query.formId,\n              iframe: {\n                top: iframeBoundingClientRect.top\n              },\n              scrollY: window.scrollY || window.pageYOffset\n            }\n          });\n        }\n      }); // Trigger when this form is ready.\n\n      this.on('iframe-ready', function () {\n        return _this2.iframeReadyResolve();\n      }, true);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.submitButton = this.addComponent({\n        input: true,\n        type: 'button',\n        action: 'submit',\n        internal: true,\n        label: 'Submit',\n        key: 'submit',\n        ref: 'button',\n        hidden: this.isSubmitButtonHidden()\n      });\n      return this.renderTemplate('pdf', {\n        submitButton: this.submitButton.render(),\n        classes: 'formio-form-pdf',\n        children: this.renderComponents()\n      });\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.postMessage({\n        name: 'redraw'\n      });\n      return this.builderMode ? _nativePromiseOnly.default.resolve() : _get(_getPrototypeOf(PDF.prototype), \"redraw\", this).call(this);\n    }\n  }, {\n    key: \"rebuild\",\n    value: function rebuild() {\n      if (this.builderMode && this.component.components) {\n        this.destroyComponents();\n        this.addComponents();\n        return _nativePromiseOnly.default.resolve();\n      }\n\n      this.postMessage({\n        name: 'redraw'\n      });\n      return _get(_getPrototypeOf(PDF.prototype), \"rebuild\", this).call(this);\n    } // Do not attach nested components for pdf.\n\n  }, {\n    key: \"attachComponents\",\n    value: function attachComponents(element, components, container) {\n      components = components || this.components;\n      container = container || this.component.components;\n      element = this.hook('attachComponents', element, components, container, this);\n      return Promise.resolve();\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(element) {\n      var _this3 = this;\n\n      return _get(_getPrototypeOf(PDF.prototype), \"attach\", this).call(this, element).then(function () {\n        _this3.loadRefs(element, {\n          button: 'single',\n          buttonMessageContainer: 'single',\n          buttonMessage: 'single',\n          zoomIn: 'single',\n          zoomOut: 'single',\n          iframeContainer: 'single'\n        });\n\n        _this3.submitButton.refs = _objectSpread({}, _this3.refs);\n\n        _this3.submitButton.attachButton(); // Reset the iframeReady promise.\n\n\n        _this3.iframeReady = new _nativePromiseOnly.default(function (resolve, reject) {\n          _this3.iframeReadyResolve = resolve;\n          _this3.iframeReadyReject = reject;\n        }); // iframes cannot be in the template so manually create it\n\n        _this3.iframeElement = _this3.ce('iframe', {\n          src: _this3.getSrc(),\n          id: \"iframe-\".concat(_this3.id),\n          seamless: true,\n          class: 'formio-iframe'\n        });\n        _this3.iframeElement.formioContainer = _this3.component.components;\n        _this3.iframeElement.formioComponent = _this3; // Append the iframe to the iframeContainer in the template\n\n        _this3.empty(_this3.refs.iframeContainer);\n\n        _this3.appendChild(_this3.refs.iframeContainer, _this3.iframeElement); // Post the form to the iframe\n\n\n        _this3.form.base = _Formio.GlobalFormio.getBaseUrl();\n        _this3.form.projectUrl = _Formio.GlobalFormio.getProjectUrl();\n\n        _this3.postMessage({\n          name: 'form',\n          data: _this3.form\n        }); // Hide the submit button if the associated component is hidden\n\n\n        var submitButton = _this3.components.find(function (c) {\n          return c.element === _this3.refs.button;\n        });\n\n        if (submitButton) {\n          _this3.refs.button.classList.toggle('hidden', !submitButton.visible);\n        }\n\n        _this3.addEventListener(_this3.refs.zoomIn, 'click', function (event) {\n          event.preventDefault();\n\n          _this3.postMessage({\n            name: 'zoomIn'\n          });\n        });\n\n        _this3.addEventListener(_this3.refs.zoomOut, 'click', function (event) {\n          event.preventDefault();\n\n          _this3.postMessage({\n            name: 'zoomOut'\n          });\n        });\n\n        var form = (0, _utils.fastCloneDeep)(_this3.form);\n\n        if (_this3.formio) {\n          form.projectUrl = _this3.formio.projectUrl;\n          form.url = _this3.formio.formUrl;\n          form.base = _this3.formio.base;\n\n          _this3.postMessage({\n            name: 'token',\n            data: _this3.formio.getToken()\n          });\n        }\n\n        _this3.emit('attach');\n      });\n    }\n    /**\n     * Get the submission from the iframe.\n     *\n     * @return {Promise<any>}\n     */\n\n  }, {\n    key: \"getSubmission\",\n    value: function getSubmission() {\n      var _this4 = this;\n\n      return new _nativePromiseOnly.default(function (resolve) {\n        _this4.once('iframe-submission', resolve);\n\n        _this4.postMessage({\n          name: 'getSubmission'\n        });\n      });\n    }\n    /**\n     * Ensure we have the submission from the iframe before we submit the form.\n     *\n     * @param options\n     * @return {*}\n     */\n\n  }, {\n    key: \"submitForm\",\n    value: function submitForm() {\n      var _this5 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.postMessage({\n        name: 'getErrors'\n      });\n      return this.getSubmission().then(function () {\n        return _get(_getPrototypeOf(PDF.prototype), \"submitForm\", _this5).call(_this5, options);\n      });\n    }\n  }, {\n    key: \"getSrc\",\n    value: function getSrc() {\n      if (!this._form || !this._form.settings || !this._form.settings.pdf) {\n        return '';\n      }\n\n      var iframeSrc = \"\".concat(this._form.settings.pdf.src, \".html\");\n      var params = [\"id=\".concat(this.id)];\n\n      if (this.options.showCheckboxBackground || this._form.settings.showCheckboxBackground) {\n        params.push('checkboxbackground=1');\n      }\n\n      if (this.options.readOnly) {\n        params.push('readonly=1');\n      }\n\n      if (this.options.zoom) {\n        params.push(\"zoom=\".concat(this.options.zoom));\n      }\n\n      if (this.builderMode) {\n        params.push('builder=1');\n      }\n\n      if (params.length) {\n        iframeSrc += \"?\".concat(params.join('&'));\n      }\n\n      return iframeSrc;\n    }\n  }, {\n    key: \"setForm\",\n    value: function setForm(form) {\n      var _this6 = this;\n\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _get(_getPrototypeOf(PDF.prototype), \"setForm\", this).call(this, form, flags).then(function () {\n        if (_this6.formio) {\n          form.projectUrl = _this6.formio.projectUrl;\n          form.url = _this6.formio.formUrl;\n          form.base = _this6.formio.base;\n\n          _this6.postMessage({\n            name: 'token',\n            data: _this6.formio.getToken()\n          });\n        }\n\n        _this6.postMessage({\n          name: 'form',\n          data: _this6.form\n        });\n      });\n    }\n    /**\n     * Set's the value of this form component.\n     *\n     * @param submission\n     * @param flags\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(submission) {\n      var _this7 = this;\n\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var changed = _get(_getPrototypeOf(PDF.prototype), \"setValue\", this).call(this, submission, flags);\n\n      if (!flags || !flags.fromIframe) {\n        this.once('iframe-ready', function () {\n          if (changed) {\n            _this7.postMessage({\n              name: 'submission',\n              data: submission\n            });\n          }\n        });\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"postMessage\",\n    value: function postMessage(message) {\n      var _this8 = this; // If we get here before the iframeReady promise is set up, it's via the superclass constructor\n\n\n      if (!this.iframeReady) {\n        return;\n      }\n\n      if (!message.type) {\n        message.type = 'iframe-data';\n      }\n\n      this.iframeReady.then(function () {\n        if (_this8.iframeElement && _this8.iframeElement.contentWindow && !(message.name === 'form' && _this8.iframeFormSetUp)) {\n          _this8.iframeElement.contentWindow.postMessage(JSON.stringify(message), '*');\n\n          _this8.iframeFormSetUp = message.name === 'form';\n        }\n      });\n    }\n  }, {\n    key: \"focusOnComponent\",\n    value: function focusOnComponent(key) {\n      this.postMessage({\n        name: 'focusErroredField',\n        data: key\n      });\n    } // Do not clear the iframe.\n\n  }, {\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"showErrors\",\n    value: function showErrors(error, triggerEvent) {\n      var _this$refs$buttonMess;\n\n      var helpBlock = document.getElementById('submit-error');\n      var submitError = this.t('submitError');\n      var isSubmitErrorShown = ((_this$refs$buttonMess = this.refs.buttonMessage) === null || _this$refs$buttonMess === void 0 ? void 0 : _this$refs$buttonMess.textContent.trim()) === submitError;\n\n      if (!helpBlock && this.errors.length && !isSubmitErrorShown) {\n        var p = this.ce('p', {\n          class: 'help-block'\n        });\n        this.setContent(p, submitError);\n        p.addEventListener('click', function () {\n          window.scrollTo(0, 0);\n        });\n        var div = this.ce('div', {\n          id: 'submit-error',\n          class: 'has-error'\n        });\n        this.appendTo(p, div);\n        this.appendTo(div, this.element);\n      }\n\n      if (!this.errors.length && helpBlock) {\n        helpBlock.remove();\n      }\n\n      _get(_getPrototypeOf(PDF.prototype), \"showErrors\", this).call(this, error, triggerEvent);\n    }\n  }, {\n    key: \"isSubmitButtonHidden\",\n    value: function isSubmitButtonHidden() {\n      var hidden = false;\n      (0, _utils.eachComponent)(this.component.components, function (component) {\n        if (component.type === 'button' && (component.action === 'submit' || !component.action)) {\n          hidden = component.hidden || false;\n        }\n      });\n      return hidden;\n    }\n  }]);\n\n  return PDF;\n}(_Webform2.default);\n/**\n * Listen for window messages.\n */\n\n\nexports.default = PDF;\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('message', function (event) {\n    var eventData = null;\n\n    try {\n      eventData = JSON.parse(event.data);\n    } catch (err) {\n      eventData = null;\n    } // If this form exists, then emit the event within this form.\n\n\n    if (eventData && eventData.name && eventData.formId && _Formio.GlobalFormio.forms.hasOwnProperty(eventData.formId)) {\n      _Formio.GlobalFormio.forms[eventData.formId].emit(\"iframe-\".concat(eventData.name), eventData.data);\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}