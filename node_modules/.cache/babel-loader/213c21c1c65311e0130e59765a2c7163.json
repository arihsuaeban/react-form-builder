{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.constructor\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _TextField = _interopRequireDefault(require(\"../textfield/TextField\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar TextAreaComponent = /*#__PURE__*/function (_TextFieldComponent) {\n  _inherits(TextAreaComponent, _TextFieldComponent);\n\n  var _super = _createSuper(TextAreaComponent);\n\n  function TextAreaComponent() {\n    _classCallCheck(this, TextAreaComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextAreaComponent, [{\n    key: \"init\",\n    value: function init() {\n      _get(_getPrototypeOf(TextAreaComponent.prototype), \"init\", this).call(this);\n\n      this.editors = [];\n      this.editorsReady = [];\n      this.updateSizes = []; // Never submit on enter for text areas.\n\n      this.options.submitOnEnter = false;\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return TextAreaComponent.schema();\n    }\n  }, {\n    key: \"inputInfo\",\n    get: function get() {\n      var info = _get(_getPrototypeOf(TextAreaComponent.prototype), \"inputInfo\", this);\n\n      info.type = this.component.wysiwyg ? 'div' : 'textarea';\n\n      if (this.component.rows) {\n        info.attr.rows = this.component.rows;\n      }\n\n      return info;\n    }\n  }, {\n    key: \"validateMultiple\",\n    value: function validateMultiple() {\n      return !this.isJsonValue;\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(value, index) {\n      var info = this.inputInfo;\n      info.attr = info.attr || {};\n      info.content = value;\n\n      if ((this.options.readOnly || this.disabled) && !this.isHtmlRenderMode()) {\n        var elementStyle = this.info.attr.style || '';\n        var children = \"<div ref=\\\"input\\\" class=\\\"formio-editor-read-only-content\\\" \".concat(elementStyle ? \"style='\".concat(elementStyle, \"'\") : '', \"></div>\");\n        return this.renderTemplate('well', {\n          children: children,\n          nestedKey: this.key,\n          value: value\n        });\n      }\n\n      return this.renderTemplate('input', {\n        prefix: this.prefix,\n        suffix: this.suffix,\n        input: info,\n        value: value,\n        index: index\n      });\n    }\n  }, {\n    key: \"autoExpand\",\n    get: function get() {\n      return this.component.autoExpand;\n    }\n    /**\n     * Updates the editor value.\n     *\n     * @param newValue\n     */\n\n  }, {\n    key: \"updateEditorValue\",\n    value: function updateEditorValue(index, newValue) {\n      newValue = this.getConvertedValue(this.trimBlanks(newValue));\n      var dataValue = this.dataValue;\n\n      if (this.component.multiple && Array.isArray(dataValue)) {\n        var newArray = _lodash.default.clone(dataValue);\n\n        newArray[index] = newValue;\n        newValue = newArray;\n      }\n\n      if (!_lodash.default.isEqual(newValue, dataValue) && (!_lodash.default.isEmpty(newValue) || !_lodash.default.isEmpty(dataValue))) {\n        this.updateValue(newValue, {\n          modified: !this.autoModified\n        }, index);\n      }\n\n      this.autoModified = false;\n    }\n  }, {\n    key: \"attachElement\",\n    value: function attachElement(element, index) {\n      var _this2 = this;\n\n      if (this.autoExpand && (this.isPlain || this.options.readOnly || this.options.htmlView)) {\n        if (element.nodeName === 'TEXTAREA') {\n          this.addAutoExpanding(element, index);\n        }\n      }\n\n      if (this.options.readOnly) {\n        return element;\n      }\n\n      if (this.component.wysiwyg && !this.component.editor) {\n        this.component.editor = 'ckeditor';\n      }\n\n      var settings = _lodash.default.isEmpty(this.component.wysiwyg) ? this.wysiwygDefault[this.component.editor] || this.wysiwygDefault.default : this.component.wysiwyg; // Keep track of when this editor is ready.\n\n      this.editorsReady[index] = new _nativePromiseOnly.default(function (editorReady) {\n        // Attempt to add a wysiwyg editor. In order to add one, it must be included on the global scope.\n        switch (_this2.component.editor) {\n          case 'ace':\n            if (!settings) {\n              settings = {};\n            }\n\n            settings.mode = _this2.component.as ? \"ace/mode/\".concat(_this2.component.as) : 'ace/mode/javascript';\n\n            _this2.addAce(element, settings, function (newValue) {\n              return _this2.updateEditorValue(index, newValue);\n            }).then(function (ace) {\n              _this2.editors[index] = ace;\n              var dataValue = _this2.dataValue;\n              dataValue = _this2.component.multiple && Array.isArray(dataValue) ? dataValue[index] : dataValue;\n              ace.setValue(_this2.setConvertedValue(dataValue, index));\n              editorReady(ace);\n              return ace;\n            }).catch(function (err) {\n              return console.warn(err);\n            });\n\n            break;\n\n          case 'quill':\n            // Normalize the configurations for quill.\n            if (settings.hasOwnProperty('toolbarGroups') || settings.hasOwnProperty('toolbar')) {\n              console.warn('The WYSIWYG settings are configured for CKEditor. For this renderer, you will need to use configurations for the Quill Editor. See https://quilljs.com/docs/configuration for more information.');\n              settings = _this2.wysiwygDefault.quill;\n            } // Add the quill editor.\n\n\n            _this2.addQuill(element, settings, function () {\n              return _this2.updateEditorValue(index, _this2.editors[index].root.innerHTML);\n            }).then(function (quill) {\n              _this2.editors[index] = quill;\n\n              if (_this2.component.isUploadEnabled) {\n                var _this = _this2;\n\n                quill.getModule('uploader').options.handler = function () {\n                  var _this$imageHandler;\n\n                  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                  } //we need initial 'this' because quill calls this method with its own context and we need some inner quill methods exposed in it\n                  //we also need current component instance as we use some fields and methods from it as well\n\n\n                  (_this$imageHandler = _this.imageHandler).call.apply(_this$imageHandler, [_this, this].concat(args));\n                };\n              }\n\n              quill.root.spellcheck = _this2.component.spellcheck;\n\n              if (_this2.options.readOnly || _this2.disabled) {\n                quill.disable();\n              }\n\n              var dataValue = _this2.dataValue;\n              dataValue = _this2.component.multiple && Array.isArray(dataValue) ? dataValue[index] : dataValue;\n              quill.setContents(quill.clipboard.convert({\n                html: _this2.setConvertedValue(dataValue, index)\n              }));\n              editorReady(quill);\n              return quill;\n            }).catch(function (err) {\n              return console.warn(err);\n            });\n\n            break;\n\n          case 'ckeditor':\n            settings = settings || {};\n            settings.rows = _this2.component.rows;\n\n            _this2.addCKE(element, settings, function (newValue) {\n              return _this2.updateEditorValue(index, newValue);\n            }).then(function (editor) {\n              _this2.editors[index] = editor;\n              var dataValue = _this2.dataValue;\n              dataValue = _this2.component.multiple && Array.isArray(dataValue) ? dataValue[index] : dataValue;\n\n              var value = _this2.setConvertedValue(dataValue, index);\n\n              var isReadOnly = _this2.options.readOnly || _this2.disabled; // Use ckeditor 4 in IE browser\n\n              if ((0, _utils.getBrowserInfo)().ie) {\n                editor.on('instanceReady', function () {\n                  editor.setReadOnly(isReadOnly);\n                  editor.setData(value);\n                });\n              } else {\n                var numRows = parseInt(_this2.component.rows, 10);\n\n                if (_lodash.default.isFinite(numRows) && _lodash.default.has(editor, 'ui.view.editable.editableElement')) {\n                  // Default height is 21px with 10px margin + a 14px top margin.\n                  var editorHeight = numRows * 31 + 14;\n                  editor.ui.view.editable.editableElement.style.height = \"\".concat(editorHeight, \"px\");\n                }\n\n                editor.isReadOnly = isReadOnly;\n                editor.data.set(value);\n              }\n\n              editorReady(editor);\n              return editor;\n            });\n\n            break;\n\n          default:\n            _get(_getPrototypeOf(TextAreaComponent.prototype), \"attachElement\", _this2).call(_this2, element, index);\n\n            break;\n        }\n      });\n      return element;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(element) {\n      var attached = _get(_getPrototypeOf(TextAreaComponent.prototype), \"attach\", this).call(this, element); // Make sure we restore the value after attaching since wysiwygs and readonly texts need an additional set.\n\n\n      this.restoreValue();\n      return attached;\n    }\n  }, {\n    key: \"imageHandler\",\n    value: function imageHandler(moduleInstance, range, files) {\n      var _this3 = this;\n\n      var quillInstance = moduleInstance.quill;\n\n      if (!files || !files.length) {\n        console.warn('No files selected');\n        return;\n      }\n\n      quillInstance.enable(false);\n      var _this$component = this.component,\n          uploadStorage = _this$component.uploadStorage,\n          uploadUrl = _this$component.uploadUrl,\n          uploadOptions = _this$component.uploadOptions,\n          uploadDir = _this$component.uploadDir,\n          fileKey = _this$component.fileKey;\n      var requestData;\n      this.fileService.uploadFile(uploadStorage, files[0], (0, _utils.uniqueName)(files[0].name), uploadDir || '', //should pass empty string if undefined\n      null, uploadUrl, uploadOptions, fileKey).then(function (result) {\n        requestData = result;\n        return _this3.fileService.downloadFile(result);\n      }).then(function (result) {\n        quillInstance.enable(true);\n        var Delta = Quill.import('delta');\n        quillInstance.updateContents(new Delta().retain(range.index).delete(range.length).insert({\n          image: result.url\n        }, {\n          alt: JSON.stringify(requestData)\n        }), Quill.sources.USER);\n      }).catch(function (error) {\n        console.warn('Quill image upload failed');\n        console.warn(error);\n        quillInstance.enable(true);\n      });\n    }\n  }, {\n    key: \"isPlain\",\n    get: function get() {\n      return !this.component.wysiwyg && !this.component.editor;\n    }\n  }, {\n    key: \"htmlView\",\n    get: function get() {\n      return this.options.readOnly && (this.component.editor || this.component.wysiwyg);\n    }\n  }, {\n    key: \"setValueAt\",\n    value: function setValueAt(index, value) {\n      var _this4 = this;\n\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      _get(_getPrototypeOf(TextAreaComponent.prototype), \"setValueAt\", this).call(this, index, value, flags);\n\n      if (this.editorsReady[index]) {\n        var setEditorsValue = function setEditorsValue(flags) {\n          return function (editor) {\n            if (!flags.skipWysiwyg) {\n              _this4.autoModified = true;\n\n              switch (_this4.component.editor) {\n                case 'ace':\n                  editor.setValue(_this4.setConvertedValue(value, index));\n                  break;\n\n                case 'quill':\n                  if (_this4.component.isUploadEnabled) {\n                    _this4.setAsyncConvertedValue(value).then(function (result) {\n                      var content = editor.clipboard.convert({\n                        html: result\n                      });\n                      editor.setContents(content);\n                    });\n                  } else {\n                    var convertedValue = _this4.setConvertedValue(value, index);\n\n                    var content = editor.clipboard.convert({\n                      html: convertedValue\n                    });\n                    editor.setContents(content);\n                  }\n\n                  break;\n\n                case 'ckeditor':\n                  editor.data.set(_this4.setConvertedValue(value, index));\n                  break;\n              }\n            }\n          };\n        };\n\n        this.editorsReady[index].then(setEditorsValue(_lodash.default.clone(flags)));\n      }\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _this5 = this;\n\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this.isPlain || this.options.readOnly || this.disabled) {\n        value = this.component.multiple && Array.isArray(value) ? value.map(function (val, index) {\n          return _this5.setConvertedValue(val, index);\n        }) : this.setConvertedValue(value);\n        return _get(_getPrototypeOf(TextAreaComponent.prototype), \"setValue\", this).call(this, value, flags);\n      }\n\n      flags.skipWysiwyg = _lodash.default.isEqual(value, this.getValue());\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"setValue\", this).call(this, value, flags);\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent(element, content, forceSanitize) {\n      _get(_getPrototypeOf(TextAreaComponent.prototype), \"setContent\", this).call(this, element, content, forceSanitize, {\n        addAttr: ['allow', 'allowfullscreen', 'frameborder', 'scrolling'],\n        addTags: ['iframe']\n      });\n    }\n  }, {\n    key: \"setReadOnlyValue\",\n    value: function setReadOnlyValue(value, index) {\n      index = index || 0;\n\n      if (this.options.readOnly || this.disabled) {\n        if (this.refs.input && this.refs.input[index]) {\n          if (this.component.inputFormat === 'plain') {\n            this.refs.input[index].innerText = this.interpolate(value, {}, {\n              noeval: true\n            });\n          } else {\n            this.setContent(this.refs.input[index], this.interpolate(value, {}, {\n              noeval: true\n            }), this.shouldSanitizeValue);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isJsonValue\",\n    get: function get() {\n      return this.component.as && this.component.as === 'json';\n    }\n  }, {\n    key: \"setConvertedValue\",\n    value: function setConvertedValue(value, index) {\n      if (this.isJsonValue && !_lodash.default.isNil(value)) {\n        try {\n          value = JSON.stringify(value, null, 2);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      if (!_lodash.default.isString(value)) {\n        value = '';\n      }\n\n      this.setReadOnlyValue(value, index);\n      return value;\n    }\n  }, {\n    key: \"setAsyncConvertedValue\",\n    value: function setAsyncConvertedValue(value) {\n      if (this.isJsonValue && value) {\n        try {\n          value = JSON.stringify(value, null, 2);\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n\n      if (!_lodash.default.isString(value)) {\n        value = '';\n      }\n\n      var htmlDoc = new DOMParser().parseFromString(value, 'text/html');\n      var images = htmlDoc.getElementsByTagName('img');\n\n      if (images.length) {\n        return this.setImagesUrl(images).then(function () {\n          value = htmlDoc.getElementsByTagName('body')[0].innerHTML;\n          return value;\n        });\n      } else {\n        return _nativePromiseOnly.default.resolve(value);\n      }\n    }\n  }, {\n    key: \"setImagesUrl\",\n    value: function setImagesUrl(images) {\n      var _this6 = this;\n\n      return _nativePromiseOnly.default.all(_lodash.default.map(images, function (image) {\n        var requestData;\n\n        try {\n          requestData = JSON.parse(image.getAttribute('alt'));\n        } catch (error) {\n          console.warn(error);\n        }\n\n        return _this6.fileService.downloadFile(requestData).then(function (result) {\n          image.setAttribute('src', result.url);\n        });\n      }));\n    }\n  }, {\n    key: \"addAutoExpanding\",\n    value: function addAutoExpanding(textarea, index) {\n      var heightOffset = null;\n      var previousHeight = null;\n\n      var changeOverflow = function changeOverflow(value) {\n        var width = textarea.style.width;\n        textarea.style.width = '0px';\n        textarea.offsetWidth;\n        textarea.style.width = width;\n        textarea.style.overflowY = value;\n      };\n\n      var preventParentScroll = function preventParentScroll(element, changeSize) {\n        var nodeScrolls = [];\n\n        while (element && element.parentNode && element.parentNode instanceof Element) {\n          if (element.parentNode.scrollTop) {\n            nodeScrolls.push({\n              node: element.parentNode,\n              scrollTop: element.parentNode.scrollTop\n            });\n          }\n\n          element = element.parentNode;\n        }\n\n        changeSize();\n        nodeScrolls.forEach(function (nodeScroll) {\n          nodeScroll.node.scrollTop = nodeScroll.scrollTop;\n        });\n      };\n\n      var resize = function resize() {\n        if (textarea.scrollHeight === 0) {\n          return;\n        }\n\n        preventParentScroll(textarea, function () {\n          textarea.style.height = '';\n          textarea.style.height = \"\".concat(textarea.scrollHeight + heightOffset, \"px\");\n        });\n      };\n\n      var update = _lodash.default.debounce(function () {\n        resize();\n        var styleHeight = Math.round(parseFloat(textarea.style.height));\n        var computed = window.getComputedStyle(textarea, null);\n        var currentHeight = textarea.offsetHeight;\n\n        if (currentHeight < styleHeight && computed.overflowY === 'hidden') {\n          changeOverflow('scroll');\n        } else if (computed.overflowY !== 'hidden') {\n          changeOverflow('hidden');\n        }\n\n        resize();\n        currentHeight = textarea.offsetHeight;\n\n        if (previousHeight !== currentHeight) {\n          previousHeight = currentHeight;\n          update();\n        }\n      }, 200);\n\n      var computedStyle = window.getComputedStyle(textarea, null);\n      textarea.style.resize = 'none';\n      heightOffset = parseFloat(computedStyle.borderTopWidth) + parseFloat(computedStyle.borderBottomWidth) || 0;\n\n      if (window) {\n        this.addEventListener(window, 'resize', update);\n      }\n\n      this.addEventListener(textarea, 'input', update);\n      this.on('initialized', update);\n      this.updateSizes[index] = update;\n      update();\n    }\n  }, {\n    key: \"trimBlanks\",\n    value: function trimBlanks(value) {\n      if (!value || this.isPlain) {\n        return value;\n      }\n\n      var trimBlanks = function trimBlanks(value) {\n        var nbsp = '<p>&nbsp;</p>';\n        var br = '<p><br></p>';\n        var brNbsp = '<p><br>&nbsp;</p>';\n        var regExp = new RegExp(\"^\".concat(nbsp, \"|\").concat(nbsp, \"$|^\").concat(br, \"|\").concat(br, \"$|^\").concat(brNbsp, \"|\").concat(brNbsp, \"$\"), 'g');\n        return typeof value === 'string' ? value.replace(regExp, '') : value;\n      };\n\n      if (Array.isArray(value)) {\n        value.forEach(function (input, index) {\n          value[index] = trimBlanks(input);\n        });\n      } else {\n        value = trimBlanks(value);\n      }\n\n      return value;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(flags, fromRoot) {\n      var changed = _get(_getPrototypeOf(TextAreaComponent.prototype), \"onChange\", this).call(this, flags, fromRoot);\n\n      this.updateSizes.forEach(function (updateSize) {\n        return updateSize();\n      });\n      return changed;\n    }\n  }, {\n    key: \"hasChanged\",\n    value: function hasChanged(newValue, oldValue) {\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"hasChanged\", this).call(this, this.trimBlanks(newValue), this.trimBlanks(oldValue));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.dataValue;\n      return _get(_getPrototypeOf(TextAreaComponent.prototype), \"isEmpty\", this).call(this, this.trimBlanks(value));\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var defaultValue = _get(_getPrototypeOf(TextAreaComponent.prototype), \"defaultValue\", this);\n\n      if (this.component.editor === 'quill' && !defaultValue) {\n        defaultValue = '<p><br></p>';\n      }\n\n      return defaultValue;\n    }\n  }, {\n    key: \"getConvertedValue\",\n    value: function getConvertedValue(value) {\n      if (this.isJsonValue && value) {\n        try {\n          value = JSON.parse(value);\n        } catch (err) {// console.warn(err);\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      var _this7 = this; // Destroy all editors.\n\n\n      this.editors.forEach(function (editor) {\n        if (editor.destroy) {\n          editor.destroy();\n        }\n      });\n      this.editors = [];\n      this.editorsReady = [];\n      this.updateSizes.forEach(function (updateSize) {\n        return _this7.removeEventListener(window, 'resize', updateSize);\n      });\n      this.updateSizes = [];\n\n      _get(_getPrototypeOf(TextAreaComponent.prototype), \"detach\", this).call(this);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      if (this.isPlain) {\n        return this.getConvertedValue(_get(_getPrototypeOf(TextAreaComponent.prototype), \"getValue\", this).call(this));\n      }\n\n      return this.dataValue;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      _get(_getPrototypeOf(TextAreaComponent.prototype), \"focus\", this).call(this);\n\n      switch (this.component.editor) {\n        case 'ckeditor':\n          {\n            var _this$editors$0$editi, _this$editors$0$editi2;\n\n            if ((_this$editors$0$editi = this.editors[0].editing) !== null && _this$editors$0$editi !== void 0 && (_this$editors$0$editi2 = _this$editors$0$editi.view) !== null && _this$editors$0$editi2 !== void 0 && _this$editors$0$editi2.focus) {\n              this.editors[0].editing.view.focus();\n            }\n\n            this.element.scrollIntoView();\n            break;\n          }\n\n        case 'ace':\n          {\n            this.editors[0].focus();\n            this.element.scrollIntoView();\n            break;\n          }\n\n        case 'quill':\n          {\n            this.editors[0].focus();\n            break;\n          }\n      }\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len2 = arguments.length, extend = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        extend[_key2] = arguments[_key2];\n      }\n\n      return _TextField.default.schema.apply(_TextField.default, [{\n        type: 'textarea',\n        label: 'Text Area',\n        key: 'textArea',\n        rows: 3,\n        wysiwyg: false,\n        editor: '',\n        fixedSize: true,\n        inputFormat: 'html',\n        validate: {\n          minWords: '',\n          maxWords: ''\n        }\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Text Area',\n        group: 'basic',\n        icon: 'font',\n        documentation: '/userguide/#textarea',\n        weight: 20,\n        schema: TextAreaComponent.schema()\n      };\n    }\n  }]);\n\n  return TextAreaComponent;\n}(_TextField.default);\n\nexports.default = TextAreaComponent;","map":null,"metadata":{},"sourceType":"script"}