{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logout = exports.setUser = exports.initAuth = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _Formio = require('formiojs/Formio');\n\nvar _Formio2 = _interopRequireDefault(_Formio);\n\nvar _constants = require('./constants');\n\nvar type = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar requestUser = function requestUser() {\n  return {\n    type: type.USER_REQUEST\n  };\n};\n\nvar receiveUser = function receiveUser(user) {\n  return {\n    type: type.USER_REQUEST_SUCCESS,\n    user: user\n  };\n};\n\nvar failUser = function failUser(error) {\n  return {\n    type: type.USER_REQUEST_FAILURE,\n    error: error\n  };\n};\n\nvar logoutUser = function logoutUser() {\n  return {\n    type: type.USER_LOGOUT\n  };\n};\n\nvar submissionAccessUser = function submissionAccessUser(submissionAccess) {\n  return {\n    type: type.USER_SUBMISSION_ACCESS,\n    submissionAccess: submissionAccess\n  };\n};\n\nvar formAccessUser = function formAccessUser(formAccess) {\n  return {\n    type: type.USER_FORM_ACCESS,\n    formAccess: formAccess\n  };\n};\n\nvar projectAccessUser = function projectAccessUser(projectAccess) {\n  return {\n    type: type.USER_PROJECT_ACCESS,\n    projectAccess: projectAccess\n  };\n};\n\nvar rolesUser = function rolesUser(roles) {\n  return {\n    type: type.USER_ROLES,\n    roles: roles\n  };\n};\n\nfunction transformSubmissionAccess(forms) {\n  return Object.values(forms).reduce(function (result, form) {\n    return _extends({}, result, _defineProperty({}, form.name, form.submissionAccess.reduce(function (formSubmissionAccess, access) {\n      return _extends({}, formSubmissionAccess, _defineProperty({}, access.type, access.roles));\n    }, {})));\n  }, {});\n}\n\nfunction transformFormAccess(forms) {\n  return Object.values(forms).reduce(function (result, form) {\n    return _extends({}, result, _defineProperty({}, form.name, form.access.reduce(function (formAccess, access) {\n      return _extends({}, formAccess, _defineProperty({}, access.type, access.roles));\n    }, {})));\n  }, {});\n}\n\nfunction transformProjectAccess(projectAccess) {\n  return projectAccess.reduce(function (result, access) {\n    return _extends({}, result, _defineProperty({}, access.type, access.roles));\n  }, {});\n}\n\nvar initAuth = exports.initAuth = function initAuth() {\n  return function (dispatch) {\n    var projectUrl = _Formio2.default.getProjectUrl();\n\n    dispatch(requestUser());\n    Promise.all([_Formio2.default.currentUser(), _Formio2.default.makeStaticRequest(projectUrl + '/access').then(function (result) {\n      var submissionAccess = transformSubmissionAccess(result.forms);\n      var formAccess = transformFormAccess(result.forms);\n      dispatch(submissionAccessUser(submissionAccess));\n      dispatch(formAccessUser(formAccess));\n      dispatch(rolesUser(result.roles));\n    }).catch(function () {}), _Formio2.default.makeStaticRequest(projectUrl).then(function (project) {\n      var projectAccess = transformProjectAccess(project.access);\n      dispatch(projectAccessUser(projectAccess));\n    }).catch(function () {})]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          user = _ref2[0];\n\n      if (user) {\n        dispatch(receiveUser(user));\n      } else {\n        dispatch(logoutUser());\n      }\n    }).catch(function (result) {\n      dispatch(failUser(result));\n    });\n  };\n};\n\nvar setUser = exports.setUser = function setUser(user) {\n  return function (dispatch) {\n    _Formio2.default.setUser(user);\n\n    dispatch(receiveUser(user));\n  };\n};\n\nvar logout = exports.logout = function logout() {\n  return function (dispatch) {\n    _Formio2.default.logout();\n\n    dispatch(logoutUser());\n  };\n};","map":null,"metadata":{},"sourceType":"script"}