{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('formiojs/utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _isObject2 = require('lodash/isObject');\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _constants = require('../constants');\n\nvar _types = require('../types');\n\nvar _utils3 = require('../utils');\n\nvar _Grid = require('./Grid');\n\nvar _Grid2 = _interopRequireDefault(_Grid);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SubmissionGrid = function (_React$Component) {\n  _inherits(SubmissionGrid, _React$Component);\n\n  function SubmissionGrid() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SubmissionGrid);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SubmissionGrid.__proto__ || Object.getPrototypeOf(SubmissionGrid)).call.apply(_ref, [this].concat(args))), _this), _this.onSort = function (_ref2) {\n      var key = _ref2.key,\n          sort = _ref2.sort;\n\n      if ((0, _isFunction3.default)(sort)) {\n        return sort();\n      }\n\n      var _this$props = _this.props,\n          getSubmissions = _this$props.getSubmissions,\n          currentSort = _this$props.submissions.sort;\n      var sortKey = (0, _isString3.default)(sort) ? sort : key;\n      var ascSort = sortKey;\n      var descSort = '-' + sortKey;\n      var noSort = '';\n      var nextSort = noSort;\n\n      if (currentSort === ascSort) {\n        nextSort = descSort;\n      } else if (currentSort === descSort) {\n        nextSort = noSort;\n      } else {\n        nextSort = ascSort;\n      }\n\n      getSubmissions(1, {\n        sort: nextSort\n      });\n    }, _this.getColumns = function (form) {\n      var columns = [];\n\n      _utils2.default.eachComponent(form.components, function (component) {\n        if (component.input && component.tableView && component.key) {\n          columns.push((0, _utils3.getComponentDefaultColumn)(component));\n        }\n      });\n\n      columns.push({\n        key: 'operations',\n        title: 'Operations'\n      });\n      (0, _utils3.setColumnsWidth)(columns);\n      return columns;\n    }, _this.Cell = function (_ref3) {\n      var submission = _ref3.row,\n          column = _ref3.column;\n      var _this$props2 = _this.props,\n          form = _this$props2.form,\n          onAction = _this$props2.onAction,\n          operations = _this$props2.operations;\n\n      if (column.key === 'operations') {\n        return _react2.default.createElement('div', null, operations.map(function (_ref4) {\n          var action = _ref4.action,\n              _ref4$buttonType = _ref4.buttonType,\n              buttonType = _ref4$buttonType === undefined ? 'primary' : _ref4$buttonType,\n              _ref4$icon = _ref4.icon,\n              icon = _ref4$icon === undefined ? '' : _ref4$icon,\n              _ref4$permissionsReso = _ref4.permissionsResolver,\n              permissionsResolver = _ref4$permissionsReso === undefined ? function () {\n            return true;\n          } : _ref4$permissionsReso,\n              _ref4$title = _ref4.title,\n              title = _ref4$title === undefined ? '' : _ref4$title;\n          return permissionsResolver(form, submission) ? _react2.default.createElement('span', {\n            className: 'btn btn-' + buttonType + ' btn-sm form-btn',\n            onClick: (0, _utils3.stopPropagationWrapper)(function () {\n              return onAction(submission, action);\n            }),\n            key: action\n          }, icon ? _react2.default.createElement('span', null, _react2.default.createElement('i', {\n            className: 'fa fa-' + icon\n          }), '\\xA0') : null, title) : null;\n        }));\n      }\n\n      var value = (0, _isFunction3.default)(column.value) ? column.value(submission) : (0, _get3.default)(submission, column.key, '');\n      return (0, _isObject3.default)(value) && value.content ? value.isHtml ? _react2.default.createElement('div', {\n        dangerouslySetInnerHTML: {\n          __html: value.content\n        }\n      }) : _react2.default.createElement('span', null, String(value.content)) : _react2.default.createElement('span', null, String(value));\n    }, _this.render = function () {\n      var _this$props3 = _this.props,\n          propColumns = _this$props3.columns,\n          form = _this$props3.form,\n          getSubmissions = _this$props3.getSubmissions,\n          onAction = _this$props3.onAction,\n          onPageSizeChanged = _this$props3.onPageSizeChanged,\n          pageSizes = _this$props3.pageSizes,\n          _this$props3$submissi = _this$props3.submissions,\n          limit = _this$props3$submissi.limit,\n          _this$props3$submissi2 = _this$props3$submissi.pagination,\n          page = _this$props3$submissi2.page,\n          numPages = _this$props3$submissi2.numPages,\n          total = _this$props3$submissi2.total,\n          sort = _this$props3$submissi.sort,\n          submissions = _this$props3$submissi.submissions;\n      var columns = propColumns.length ? propColumns : _this.getColumns(form);\n      var skip = (page - 1) * limit;\n      var last = Math.min(skip + limit, total);\n      return _react2.default.createElement(_Grid2.default, {\n        Cell: _this.Cell,\n        activePage: page,\n        columns: columns,\n        emptyText: 'No data found',\n        firstItem: skip + 1,\n        items: submissions,\n        lastItem: last,\n        onAction: onAction,\n        onPage: getSubmissions,\n        onPageSizeChanged: onPageSizeChanged,\n        onSort: _this.onSort,\n        pageSize: limit,\n        pageSizes: pageSizes,\n        pages: numPages,\n        sortOrder: sort,\n        total: total\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return SubmissionGrid;\n}(_react2.default.Component);\n\nSubmissionGrid.propTypes = {\n  columns: _types.Columns,\n  form: _propTypes2.default.object.isRequired,\n  getSubmissions: _propTypes2.default.func,\n  onAction: _propTypes2.default.func,\n  onPageSizeChanged: _propTypes2.default.func,\n  operations: _types.Operations,\n  pageSizes: _types.PageSizes,\n  submissions: _propTypes2.default.object.isRequired\n};\nSubmissionGrid.defaultProps = {\n  columns: [],\n  getSubmissions: function getSubmissions() {},\n  onAction: function onAction() {},\n  onPageSizeChanged: function onPageSizeChanged() {},\n  operations: [{\n    action: 'view',\n    buttonType: 'warning',\n    icon: 'list-alt',\n    permissionsResolver: function permissionsResolver() {\n      return true;\n    },\n    title: 'View'\n  }, {\n    action: 'edit',\n    buttonType: 'secondary',\n    icon: 'edit',\n    permissionsResolver: function permissionsResolver() {\n      return true;\n    },\n    title: 'Edit'\n  }, {\n    action: 'delete',\n    buttonType: 'danger',\n    icon: 'trash',\n    permissionsResolver: function permissionsResolver() {\n      return true;\n    }\n  }],\n  pageSizes: _constants.defaultPageSizes\n};\nexports.default = SubmissionGrid;","map":null,"metadata":{},"sourceType":"script"}