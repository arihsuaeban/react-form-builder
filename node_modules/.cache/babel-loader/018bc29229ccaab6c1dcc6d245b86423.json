{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.find-index\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.splice\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.constructor\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.search\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/es.string.starts-with\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/es.typed-array.uint8-array\");\n\nrequire(\"core-js/modules/es.typed-array.copy-within\");\n\nrequire(\"core-js/modules/es.typed-array.every\");\n\nrequire(\"core-js/modules/es.typed-array.fill\");\n\nrequire(\"core-js/modules/es.typed-array.filter\");\n\nrequire(\"core-js/modules/es.typed-array.find\");\n\nrequire(\"core-js/modules/es.typed-array.find-index\");\n\nrequire(\"core-js/modules/es.typed-array.for-each\");\n\nrequire(\"core-js/modules/es.typed-array.includes\");\n\nrequire(\"core-js/modules/es.typed-array.index-of\");\n\nrequire(\"core-js/modules/es.typed-array.iterator\");\n\nrequire(\"core-js/modules/es.typed-array.join\");\n\nrequire(\"core-js/modules/es.typed-array.last-index-of\");\n\nrequire(\"core-js/modules/es.typed-array.map\");\n\nrequire(\"core-js/modules/es.typed-array.reduce\");\n\nrequire(\"core-js/modules/es.typed-array.reduce-right\");\n\nrequire(\"core-js/modules/es.typed-array.reverse\");\n\nrequire(\"core-js/modules/es.typed-array.set\");\n\nrequire(\"core-js/modules/es.typed-array.slice\");\n\nrequire(\"core-js/modules/es.typed-array.some\");\n\nrequire(\"core-js/modules/es.typed-array.sort\");\n\nrequire(\"core-js/modules/es.typed-array.to-locale-string\");\n\nrequire(\"core-js/modules/es.typed-array.to-string\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nvar _Field2 = _interopRequireDefault(require(\"../_classes/field/Field\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nvar _downloadjs = _interopRequireDefault(require(\"downloadjs\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _fileProcessor = _interopRequireDefault(require(\"../../providers/processor/fileProcessor\"));\n\nvar _browserMd5File = _interopRequireDefault(require(\"browser-md5-file\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar Camera;\nvar webViewCamera = navigator.camera || Camera; // canvas.toBlob polyfill.\n\nvar htmlCanvasElement;\n\nif (typeof window !== 'undefined') {\n  htmlCanvasElement = window.HTMLCanvasElement;\n} else if (typeof global !== 'undefined') {\n  htmlCanvasElement = global.HTMLCanvasElement;\n}\n\nif (htmlCanvasElement && !htmlCanvasElement.prototype.toBlob) {\n  Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n    value: function value(callback, type, quality) {\n      var canvas = this;\n      setTimeout(function () {\n        var binStr = atob(canvas.toDataURL(type, quality).split(',')[1]),\n            len = binStr.length,\n            arr = new Uint8Array(len);\n\n        for (var i = 0; i < len; i++) {\n          arr[i] = binStr.charCodeAt(i);\n        }\n\n        callback(new Blob([arr], {\n          type: type || 'image/png'\n        }));\n      });\n    }\n  });\n}\n\nvar FileComponent = /*#__PURE__*/function (_Field) {\n  _inherits(FileComponent, _Field);\n\n  var _super = _createSuper(FileComponent);\n\n  function FileComponent() {\n    _classCallCheck(this, FileComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileComponent, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      _get(_getPrototypeOf(FileComponent.prototype), \"init\", this).call(this);\n\n      webViewCamera = navigator.camera || Camera;\n      var fileReaderSupported = typeof FileReader !== 'undefined';\n      var formDataSupported = typeof window !== 'undefined' ? Boolean(window.FormData) : false;\n      var progressSupported = typeof window !== 'undefined' && window.XMLHttpRequest ? 'upload' in new XMLHttpRequest() : false;\n      this.support = {\n        filereader: fileReaderSupported,\n        formdata: formDataSupported,\n        hasWarning: !fileReaderSupported || !formDataSupported || !progressSupported,\n        progress: progressSupported\n      }; // Called when our files are ready.\n\n      this.filesReady = new _nativePromiseOnly.default(function (resolve, reject) {\n        _this.filesReadyResolve = resolve;\n        _this.filesReadyReject = reject;\n      });\n      this.cameraMode = false;\n      this.statuses = [];\n      this.fileDropHidden = false;\n    }\n  }, {\n    key: \"dataReady\",\n    get: function get() {\n      return this.filesReady;\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return FileComponent.schema();\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(fileInfo) {\n      if (this.component.privateDownload) {\n        fileInfo.private = true;\n      }\n\n      return this.fileService.downloadFile(fileInfo).then(function (result) {\n        return result.url;\n      });\n    }\n  }, {\n    key: \"emptyValue\",\n    get: function get() {\n      return [];\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value) {\n      if (_lodash.default.isArray(value)) {\n        return _lodash.default.map(value, 'originalName').join(', ');\n      }\n\n      return _lodash.default.get(value, 'originalName', '');\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.dataValue;\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var value = _get(_getPrototypeOf(FileComponent.prototype), \"defaultValue\", this);\n\n      return Array.isArray(value) ? value : [];\n    }\n  }, {\n    key: \"hasTypes\",\n    get: function get() {\n      return this.component.fileTypes && Array.isArray(this.component.fileTypes) && this.component.fileTypes.length !== 0 && (this.component.fileTypes[0].label !== '' || this.component.fileTypes[0].value !== '');\n    }\n  }, {\n    key: \"fileDropHidden\",\n    get: function get() {\n      return this._fileBrowseHidden;\n    },\n    set: function set(value) {\n      if (typeof value !== 'boolean' || this.component.multiple) {\n        return;\n      }\n\n      this._fileBrowseHidden = value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _get(_getPrototypeOf(FileComponent.prototype), \"render\", this).call(this, this.renderTemplate('file', {\n        fileSize: this.fileSize,\n        files: this.dataValue || [],\n        statuses: this.statuses,\n        disabled: this.disabled,\n        support: this.support,\n        fileDropHidden: this.fileDropHidden\n      }));\n    }\n  }, {\n    key: \"getVideoStream\",\n    value: function getVideoStream(constraints) {\n      return navigator.mediaDevices.getUserMedia({\n        video: _objectSpread({\n          width: {\n            min: 640,\n            ideal: 1920\n          },\n          height: {\n            min: 360,\n            ideal: 1080\n          },\n          aspectRatio: {\n            ideal: 16 / 9\n          }\n        }, constraints),\n        audio: false\n      });\n    }\n  }, {\n    key: \"stopVideoStream\",\n    value: function stopVideoStream(videoStream) {\n      videoStream.getVideoTracks().forEach(function (track) {\n        return track.stop();\n      });\n    }\n  }, {\n    key: \"getFrame\",\n    value: function getFrame(videoPlayer) {\n      return new _nativePromiseOnly.default(function (resolve) {\n        var canvas = document.createElement('canvas');\n        canvas.height = videoPlayer.videoHeight;\n        canvas.width = videoPlayer.videoWidth;\n        var context = canvas.getContext('2d');\n        context.drawImage(videoPlayer, 0, 0);\n        canvas.toBlob(resolve);\n      });\n    }\n  }, {\n    key: \"startVideo\",\n    value: function startVideo() {\n      var _this2 = this;\n\n      this.getVideoStream().then(function (stream) {\n        _this2.videoStream = stream;\n        var videoPlayer = _this2.refs.videoPlayer;\n\n        if (!videoPlayer) {\n          console.warn('Video player not found in template.');\n          _this2.cameraMode = false;\n\n          _this2.redraw();\n\n          return;\n        }\n\n        videoPlayer.srcObject = stream;\n        var width = parseInt(_this2.component.webcamSize) || 320;\n        videoPlayer.setAttribute('width', width);\n        videoPlayer.play();\n      }).catch(function (err) {\n        console.error(err);\n        _this2.cameraMode = false;\n\n        _this2.redraw();\n      });\n    }\n  }, {\n    key: \"stopVideo\",\n    value: function stopVideo() {\n      if (this.videoStream) {\n        this.stopVideoStream(this.videoStream);\n        this.videoStream = null;\n      }\n    }\n  }, {\n    key: \"takePicture\",\n    value: function takePicture() {\n      var _this3 = this;\n\n      var videoPlayer = this.refs.videoPlayer;\n\n      if (!videoPlayer) {\n        console.warn('Video player not found in template.');\n        this.cameraMode = false;\n        this.redraw();\n        return;\n      }\n\n      this.getFrame(videoPlayer).then(function (frame) {\n        frame.name = \"photo-\".concat(Date.now(), \".png\");\n\n        _this3.upload([frame]);\n\n        _this3.cameraMode = false;\n\n        _this3.redraw();\n      });\n    }\n  }, {\n    key: \"browseFiles\",\n    value: function browseFiles() {\n      var _this4 = this;\n\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new _nativePromiseOnly.default(function (resolve) {\n        var fileInput = _this4.ce('input', _objectSpread({\n          type: 'file',\n          style: 'height: 0; width: 0; visibility: hidden;',\n          tabindex: '-1'\n        }, attrs));\n\n        document.body.appendChild(fileInput);\n        fileInput.addEventListener('change', function () {\n          resolve(fileInput.files);\n          document.body.removeChild(fileInput);\n        }, true); // There is no direct way to trigger a file dialog. To work around this, create an input of type file and trigger\n        // a click event on it.\n\n        if (typeof fileInput.trigger === 'function') {\n          fileInput.trigger('click');\n        } else {\n          fileInput.click();\n        }\n      });\n    }\n  }, {\n    key: \"cameraMode\",\n    get: function get() {\n      return this._cameraMode;\n    },\n    set: function set(value) {\n      this._cameraMode = value;\n\n      if (value) {\n        this.startVideo();\n      } else {\n        this.stopVideo();\n      }\n    }\n  }, {\n    key: \"useWebViewCamera\",\n    get: function get() {\n      return this.imageUpload && webViewCamera;\n    }\n  }, {\n    key: \"imageUpload\",\n    get: function get() {\n      return Boolean(this.component.image);\n    }\n  }, {\n    key: \"browseOptions\",\n    get: function get() {\n      var options = {};\n\n      if (this.component.multiple) {\n        options.multiple = true;\n      } //use \"accept\" attribute only for desktop devices because of its limited support by mobile browsers\n\n\n      if (!this.isMobile.any) {\n        var filePattern = this.component.filePattern.trim() || '';\n        var imagesPattern = 'image/*';\n\n        if (this.imageUpload && (!filePattern || filePattern === '*')) {\n          options.accept = imagesPattern;\n        } else if (this.imageUpload && !filePattern.includes(imagesPattern)) {\n          options.accept = \"\".concat(imagesPattern, \",\").concat(filePattern);\n        } else {\n          options.accept = filePattern;\n        }\n      }\n\n      return options;\n    }\n  }, {\n    key: \"deleteFile\",\n    value: function deleteFile(fileInfo) {\n      var _this$component$optio = this.component.options,\n          options = _this$component$optio === void 0 ? {} : _this$component$optio;\n\n      if (fileInfo && ['url', 'indexeddb'].includes(this.component.storage)) {\n        var fileService = this.fileService;\n\n        if (fileService && typeof fileService.deleteFile === 'function') {\n          fileService.deleteFile(fileInfo, options);\n        } else {\n          var formio = this.options.formio || this.root && this.root.formio;\n\n          if (formio) {\n            formio.makeRequest('', fileInfo.url, 'delete');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(element) {\n      var _this5 = this;\n\n      this.loadRefs(element, {\n        fileDrop: 'single',\n        fileBrowse: 'single',\n        galleryButton: 'single',\n        cameraButton: 'single',\n        takePictureButton: 'single',\n        toggleCameraMode: 'single',\n        videoPlayer: 'single',\n        fileLink: 'multiple',\n        removeLink: 'multiple',\n        fileStatusRemove: 'multiple',\n        fileImage: 'multiple',\n        fileType: 'multiple',\n        fileProcessingLoader: 'single'\n      }); // Ensure we have an empty input refs. We need this for the setValue method to redraw the control when it is set.\n\n      this.refs.input = [];\n\n      var superAttach = _get(_getPrototypeOf(FileComponent.prototype), \"attach\", this).call(this, element);\n\n      if (this.refs.fileDrop) {\n        var _element = this;\n\n        this.addEventListener(this.refs.fileDrop, 'dragover', function (event) {\n          this.className = 'fileSelector fileDragOver';\n          event.preventDefault();\n        });\n        this.addEventListener(this.refs.fileDrop, 'dragleave', function (event) {\n          this.className = 'fileSelector';\n          event.preventDefault();\n        });\n        this.addEventListener(this.refs.fileDrop, 'drop', function (event) {\n          this.className = 'fileSelector';\n          event.preventDefault();\n\n          _element.upload(event.dataTransfer.files);\n        });\n      }\n\n      if (this.refs.fileBrowse) {\n        this.addEventListener(this.refs.fileBrowse, 'click', function (event) {\n          event.preventDefault();\n\n          _this5.browseFiles(_this5.browseOptions).then(function (files) {\n            _this5.upload(files);\n          });\n        });\n      }\n\n      this.refs.fileLink.forEach(function (fileLink, index) {\n        _this5.addEventListener(fileLink, 'click', function (event) {\n          event.preventDefault();\n\n          _this5.getFile(_this5.dataValue[index]);\n        });\n      });\n      this.refs.removeLink.forEach(function (removeLink, index) {\n        _this5.addEventListener(removeLink, 'click', function (event) {\n          var fileInfo = _this5.dataValue[index];\n\n          _this5.deleteFile(fileInfo);\n\n          event.preventDefault();\n\n          _this5.splice(index);\n\n          _this5.redraw();\n        });\n      });\n      this.refs.fileStatusRemove.forEach(function (fileStatusRemove, index) {\n        _this5.addEventListener(fileStatusRemove, 'click', function (event) {\n          event.preventDefault();\n\n          if (_this5.abortUpload) {\n            _this5.abortUpload();\n          }\n\n          _this5.statuses.splice(index, 1);\n\n          _this5.redraw();\n        });\n      });\n\n      if (this.refs.galleryButton && webViewCamera) {\n        this.addEventListener(this.refs.galleryButton, 'click', function (event) {\n          event.preventDefault();\n          webViewCamera.getPicture(function (success) {\n            window.resolveLocalFileSystemURL(success, function (fileEntry) {\n              fileEntry.file(function (file) {\n                var reader = new FileReader();\n\n                reader.onloadend = function (evt) {\n                  var blob = new Blob([new Uint8Array(evt.target.result)], {\n                    type: file.type\n                  });\n                  blob.name = file.name;\n\n                  _this5.upload([blob]);\n                };\n\n                reader.readAsArrayBuffer(file);\n              });\n            });\n          }, function (err) {\n            console.error(err);\n          }, {\n            sourceType: webViewCamera.PictureSourceType.PHOTOLIBRARY\n          });\n        });\n      }\n\n      if (this.refs.cameraButton && webViewCamera) {\n        this.addEventListener(this.refs.cameraButton, 'click', function (event) {\n          event.preventDefault();\n          webViewCamera.getPicture(function (success) {\n            window.resolveLocalFileSystemURL(success, function (fileEntry) {\n              fileEntry.file(function (file) {\n                var reader = new FileReader();\n\n                reader.onloadend = function (evt) {\n                  var blob = new Blob([new Uint8Array(evt.target.result)], {\n                    type: file.type\n                  });\n                  blob.name = file.name;\n\n                  _this5.upload([blob]);\n                };\n\n                reader.readAsArrayBuffer(file);\n              });\n            });\n          }, function (err) {\n            console.error(err);\n          }, {\n            sourceType: webViewCamera.PictureSourceType.CAMERA,\n            encodingType: webViewCamera.EncodingType.PNG,\n            mediaType: webViewCamera.MediaType.PICTURE,\n            saveToPhotoAlbum: true,\n            correctOrientation: false\n          });\n        });\n      }\n\n      if (this.refs.takePictureButton) {\n        this.addEventListener(this.refs.takePictureButton, 'click', function (event) {\n          event.preventDefault();\n\n          _this5.takePicture();\n        });\n      }\n\n      if (this.refs.toggleCameraMode) {\n        this.addEventListener(this.refs.toggleCameraMode, 'click', function (event) {\n          event.preventDefault();\n          _this5.cameraMode = !_this5.cameraMode;\n\n          _this5.redraw();\n        });\n      }\n\n      this.refs.fileType.forEach(function (fileType, index) {\n        _this5.dataValue[index].fileType = _this5.dataValue[index].fileType || _this5.component.fileTypes[0].label;\n\n        _this5.addEventListener(fileType, 'change', function (event) {\n          event.preventDefault();\n\n          var fileType = _this5.component.fileTypes.find(function (typeObj) {\n            return typeObj.value === event.target.value;\n          });\n\n          _this5.dataValue[index].fileType = fileType.label;\n        });\n      });\n      var fileService = this.fileService;\n\n      if (fileService) {\n        var loadingImages = [];\n        this.refs.fileImage.forEach(function (image, index) {\n          loadingImages.push(_this5.loadImage(_this5.dataValue[index]).then(function (url) {\n            return image.src = url;\n          }));\n        });\n\n        if (loadingImages.length) {\n          _nativePromiseOnly.default.all(loadingImages).then(function () {\n            _this5.filesReadyResolve();\n          }).catch(function () {\n            return _this5.filesReadyReject();\n          });\n        } else {\n          this.filesReadyResolve();\n        }\n      }\n\n      return superAttach;\n    }\n    /* eslint-disable max-len */\n\n  }, {\n    key: \"fileSize\",\n    value: function fileSize(a, b, c, d, e) {\n      return \"\".concat((b = Math, c = b.log, d = 1024, e = c(a) / c(d) | 0, a / b.pow(d, e)).toFixed(2), \" \").concat(e ? \"\".concat('kMGTPEZY'[--e], \"B\") : 'Bytes');\n    }\n    /* eslint-enable max-len */\n\n    /* eslint-disable max-depth */\n\n  }, {\n    key: \"globStringToRegex\",\n    value: function globStringToRegex(str) {\n      str = str.replace(/\\s/g, '');\n      var regexp = '',\n          excludes = [];\n\n      if (str.length > 2 && str[0] === '/' && str[str.length - 1] === '/') {\n        regexp = str.substring(1, str.length - 1);\n      } else {\n        var split = str.split(',');\n\n        if (split.length > 1) {\n          for (var i = 0; i < split.length; i++) {\n            var r = this.globStringToRegex(split[i]);\n\n            if (r.regexp) {\n              regexp += \"(\".concat(r.regexp, \")\");\n\n              if (i < split.length - 1) {\n                regexp += '|';\n              }\n            } else {\n              excludes = excludes.concat(r.excludes);\n            }\n          }\n        } else {\n          if (str.startsWith('!')) {\n            excludes.push(\"^((?!\".concat(this.globStringToRegex(str.substring(1)).regexp, \").)*$\"));\n          } else {\n            if (str.startsWith('.')) {\n              str = \"*\".concat(str);\n            }\n\n            regexp = \"^\".concat(str.replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\-]', 'g'), '\\\\$&'), \"$\");\n            regexp = regexp.replace(/\\\\\\*/g, '.*').replace(/\\\\\\?/g, '.');\n          }\n        }\n      }\n\n      return {\n        regexp: regexp,\n        excludes: excludes\n      };\n    }\n    /* eslint-enable max-depth */\n\n  }, {\n    key: \"translateScalars\",\n    value: function translateScalars(str) {\n      if (typeof str === 'string') {\n        if (str.search(/kb/i) === str.length - 2) {\n          return parseFloat(str.substring(0, str.length - 2) * 1024);\n        }\n\n        if (str.search(/mb/i) === str.length - 2) {\n          return parseFloat(str.substring(0, str.length - 2) * 1024 * 1024);\n        }\n\n        if (str.search(/gb/i) === str.length - 2) {\n          return parseFloat(str.substring(0, str.length - 2) * 1024 * 1024 * 1024);\n        }\n\n        if (str.search(/b/i) === str.length - 1) {\n          return parseFloat(str.substring(0, str.length - 1));\n        }\n\n        if (str.search(/s/i) === str.length - 1) {\n          return parseFloat(str.substring(0, str.length - 1));\n        }\n\n        if (str.search(/m/i) === str.length - 1) {\n          return parseFloat(str.substring(0, str.length - 1) * 60);\n        }\n\n        if (str.search(/h/i) === str.length - 1) {\n          return parseFloat(str.substring(0, str.length - 1) * 3600);\n        }\n      }\n\n      return str;\n    }\n  }, {\n    key: \"validatePattern\",\n    value: function validatePattern(file, val) {\n      if (!val) {\n        return true;\n      }\n\n      var pattern = this.globStringToRegex(val);\n      var valid = true;\n\n      if (pattern.regexp && pattern.regexp.length) {\n        var regexp = new RegExp(pattern.regexp, 'i');\n        valid = !_lodash.default.isNil(file.type) && regexp.test(file.type) || !_lodash.default.isNil(file.name) && regexp.test(file.name);\n      }\n\n      valid = pattern.excludes.reduce(function (result, excludePattern) {\n        var exclude = new RegExp(excludePattern, 'i');\n        return result && (_lodash.default.isNil(file.type) || !exclude.test(file.type)) && (_lodash.default.isNil(file.name) || !exclude.test(file.name));\n      }, valid);\n      return valid;\n    }\n  }, {\n    key: \"validateMinSize\",\n    value: function validateMinSize(file, val) {\n      return file.size + 0.1 >= this.translateScalars(val);\n    }\n  }, {\n    key: \"validateMaxSize\",\n    value: function validateMaxSize(file, val) {\n      return file.size - 0.1 <= this.translateScalars(val);\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(files) {\n      var _this6 = this; // Only allow one upload if not multiple.\n\n\n      if (!this.component.multiple) {\n        if (this.statuses.length) {\n          this.statuses = [];\n        }\n\n        files = Array.prototype.slice.call(files, 0, 1);\n      }\n\n      if (this.component.storage && files && files.length) {\n        this.fileDropHidden = true; // files is not really an array and does not have a forEach method, so fake it.\n\n        /* eslint-disable max-statements */\n\n        Array.prototype.forEach.call(files, /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(file) {\n            var bmf, hash, fileName, fileUpload, fileWithSameNameUploaded, fileWithSameNameUploadedWithError, dir, fileService, _this6$component, storage, _this6$component$opti, options, url, groupKey, groupPermissions, fileKey, groupResourceId, processedFile, fileProcessorHandler, filePromise;\n\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    bmf = new _browserMd5File.default();\n                    _context.next = 3;\n                    return new Promise(function (resolve, reject) {\n                      bmf.md5(file, function (err, md5) {\n                        if (err) {\n                          return reject(err);\n                        }\n\n                        return resolve(md5);\n                      });\n                    });\n\n                  case 3:\n                    hash = _context.sent;\n                    fileName = (0, _utils.uniqueName)(file.name, _this6.component.fileNameTemplate, _this6.evalContext());\n                    fileUpload = {\n                      originalName: file.name,\n                      name: fileName,\n                      size: file.size,\n                      status: 'info',\n                      message: _this6.t('Processing file. Please wait...'),\n                      hash: hash\n                    }; // Check if file with the same name is being uploaded\n\n                    fileWithSameNameUploaded = _this6.dataValue.some(function (fileStatus) {\n                      return fileStatus.originalName === file.name;\n                    });\n                    fileWithSameNameUploadedWithError = _this6.statuses.findIndex(function (fileStatus) {\n                      return fileStatus.originalName === file.name && fileStatus.status === 'error';\n                    });\n\n                    if (fileWithSameNameUploaded) {\n                      fileUpload.status = 'error';\n                      fileUpload.message = _this6.t('File with the same name is already uploaded');\n                    }\n\n                    if (fileWithSameNameUploadedWithError !== -1) {\n                      _this6.statuses.splice(fileWithSameNameUploadedWithError, 1);\n\n                      _this6.redraw();\n                    } // Check file pattern\n\n\n                    if (_this6.component.filePattern && !_this6.validatePattern(file, _this6.component.filePattern)) {\n                      fileUpload.status = 'error';\n                      fileUpload.message = _this6.t('File is the wrong type; it must be {{ pattern }}', {\n                        pattern: _this6.component.filePattern\n                      });\n                    } // Check file minimum size\n\n\n                    if (_this6.component.fileMinSize && !_this6.validateMinSize(file, _this6.component.fileMinSize)) {\n                      fileUpload.status = 'error';\n                      fileUpload.message = _this6.t('File is too small; it must be at least {{ size }}', {\n                        size: _this6.component.fileMinSize\n                      });\n                    } // Check file maximum size\n\n\n                    if (_this6.component.fileMaxSize && !_this6.validateMaxSize(file, _this6.component.fileMaxSize)) {\n                      fileUpload.status = 'error';\n                      fileUpload.message = _this6.t('File is too big; it must be at most {{ size }}', {\n                        size: _this6.component.fileMaxSize\n                      });\n                    } // Get a unique name for this file to keep file collisions from occurring.\n\n\n                    dir = _this6.interpolate(_this6.component.dir || '');\n                    fileService = _this6.fileService;\n\n                    if (!fileService) {\n                      fileUpload.status = 'error';\n                      fileUpload.message = _this6.t('File Service not provided.');\n                    }\n\n                    _this6.statuses.push(fileUpload);\n\n                    _this6.redraw();\n\n                    if (!(fileUpload.status !== 'error')) {\n                      _context.next = 50;\n                      break;\n                    }\n\n                    if (_this6.component.privateDownload) {\n                      file.private = true;\n                    }\n\n                    _this6$component = _this6.component, storage = _this6$component.storage, _this6$component$opti = _this6$component.options, options = _this6$component$opti === void 0 ? {} : _this6$component$opti;\n                    url = _this6.interpolate(_this6.component.url, {\n                      file: fileUpload\n                    });\n                    groupKey = null;\n                    groupPermissions = null; //Iterate through form components to find group resource if one exists\n\n                    _this6.root.everyComponent(function (element) {\n                      var _element$component, _element$component2;\n\n                      if ((_element$component = element.component) !== null && _element$component !== void 0 && _element$component.submissionAccess || (_element$component2 = element.component) !== null && _element$component2 !== void 0 && _element$component2.defaultPermission) {\n                        groupPermissions = !element.component.submissionAccess ? [{\n                          type: element.component.defaultPermission,\n                          roles: []\n                        }] : element.component.submissionAccess;\n                        groupPermissions.forEach(function (permission) {\n                          groupKey = ['admin', 'write', 'create'].includes(permission.type) ? element.component.key : null;\n                        });\n                      }\n                    });\n\n                    fileKey = _this6.component.fileKey || 'file';\n                    groupResourceId = groupKey ? _this6.currentForm.submission.data[groupKey]._id : null;\n                    processedFile = null;\n\n                    if (!_this6.root.options.fileProcessor) {\n                      _context.next = 47;\n                      break;\n                    }\n\n                    _context.prev = 29;\n\n                    if (_this6.refs.fileProcessingLoader) {\n                      _this6.refs.fileProcessingLoader.style.display = 'block';\n                    }\n\n                    fileProcessorHandler = (0, _fileProcessor.default)(_this6.fileService, _this6.root.options.fileProcessor);\n                    _context.next = 34;\n                    return fileProcessorHandler(file, _this6.component.properties);\n\n                  case 34:\n                    processedFile = _context.sent;\n                    _context.next = 44;\n                    break;\n\n                  case 37:\n                    _context.prev = 37;\n                    _context.t0 = _context[\"catch\"](29);\n                    fileUpload.status = 'error';\n                    fileUpload.message = _this6.t('File processing has been failed.');\n                    _this6.fileDropHidden = false;\n\n                    _this6.redraw();\n\n                    return _context.abrupt(\"return\");\n\n                  case 44:\n                    _context.prev = 44;\n\n                    if (_this6.refs.fileProcessingLoader) {\n                      _this6.refs.fileProcessingLoader.style.display = 'none';\n                    }\n\n                    return _context.finish(44);\n\n                  case 47:\n                    fileUpload.message = _this6.t('Starting upload.');\n\n                    _this6.redraw();\n\n                    filePromise = fileService.uploadFile(storage, processedFile || file, fileName, dir, // Progress callback\n                    function (evt) {\n                      fileUpload.status = 'progress';\n                      fileUpload.progress = parseInt(100.0 * evt.loaded / evt.total);\n                      delete fileUpload.message;\n\n                      _this6.redraw();\n                    }, url, options, fileKey, groupPermissions, groupResourceId, // Upload start callback\n                    function () {\n                      _this6.emit('fileUploadingStart', filePromise);\n                    }, // Abort upload callback\n                    function (abort) {\n                      return _this6.abortUpload = abort;\n                    }).then(function (fileInfo) {\n                      var index = _this6.statuses.indexOf(fileUpload);\n\n                      if (index !== -1) {\n                        _this6.statuses.splice(index, 1);\n                      }\n\n                      fileInfo.originalName = file.name;\n                      fileInfo.hash = fileUpload.hash;\n\n                      if (!_this6.hasValue()) {\n                        _this6.dataValue = [];\n                      }\n\n                      _this6.dataValue.push(fileInfo);\n\n                      _this6.fileDropHidden = false;\n\n                      _this6.redraw();\n\n                      _this6.triggerChange();\n\n                      _this6.emit('fileUploadingEnd', filePromise);\n                    }).catch(function (response) {\n                      fileUpload.status = 'error';\n                      fileUpload.message = typeof response === 'string' ? response : response.toString();\n                      delete fileUpload.progress;\n                      _this6.fileDropHidden = false;\n\n                      _this6.redraw();\n\n                      _this6.emit('fileUploadingEnd', filePromise);\n                    });\n\n                  case 50:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[29, 37, 44, 47]]);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    }\n  }, {\n    key: \"getFile\",\n    value: function getFile(fileInfo) {\n      var _this$component$optio2 = this.component.options,\n          options = _this$component$optio2 === void 0 ? {} : _this$component$optio2;\n      var fileService = this.fileService;\n\n      if (!fileService) {\n        return alert('File Service not provided');\n      }\n\n      if (this.component.privateDownload) {\n        fileInfo.private = true;\n      }\n\n      fileService.downloadFile(fileInfo, options).then(function (file) {\n        if (file) {\n          if (['base64', 'indexeddb'].includes(file.storage)) {\n            (0, _downloadjs.default)(file.url, file.originalName || file.name, file.type);\n          } else {\n            window.open(file.url, '_blank');\n          }\n        }\n      }).catch(function (response) {\n        // Is alert the best way to do this?\n        // User is expecting an immediate notification due to attempting to download a file.\n        alert(response);\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if ('beforeFocus' in this.parent) {\n        this.parent.beforeFocus(this);\n      }\n\n      if (this.refs.fileBrowse) {\n        this.refs.fileBrowse.focus();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopVideo();\n\n      _get(_getPrototypeOf(FileComponent.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _Field2.default.schema.apply(_Field2.default, [{\n        type: 'file',\n        label: 'Upload',\n        key: 'file',\n        image: false,\n        privateDownload: false,\n        imageSize: '200',\n        filePattern: '*',\n        fileMinSize: '0KB',\n        fileMaxSize: '1GB',\n        uploadOnly: false\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'File',\n        group: 'premium',\n        icon: 'file',\n        documentation: '/userguide/#file',\n        weight: 100,\n        schema: FileComponent.schema()\n      };\n    }\n  }]);\n\n  return FileComponent;\n}(_Field2.default);\n\nexports.default = FileComponent;","map":null,"metadata":{},"sourceType":"script"}