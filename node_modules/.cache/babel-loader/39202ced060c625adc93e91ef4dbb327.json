{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteForm = exports.saveForm = exports.getForm = exports.resetForm = exports.clearFormError = undefined;\n\nvar _Formio = require('formiojs/Formio');\n\nvar _Formio2 = _interopRequireDefault(_Formio);\n\nvar _constants = require('./constants');\n\nvar types = _interopRequireWildcard(_constants);\n\nvar _selectors = require('./selectors');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar clearFormError = exports.clearFormError = function clearFormError(name) {\n  return {\n    type: types.FORM_CLEAR_ERROR,\n    name: name\n  };\n};\n\nvar requestForm = function requestForm(name, id, url) {\n  return {\n    type: types.FORM_REQUEST,\n    name: name,\n    id: id,\n    url: url\n  };\n};\n\nvar receiveForm = function receiveForm(name, form, url) {\n  return {\n    type: types.FORM_SUCCESS,\n    form: form,\n    name: name,\n    url: url\n  };\n};\n\nvar failForm = function failForm(name, err) {\n  return {\n    type: types.FORM_FAILURE,\n    error: err,\n    name: name\n  };\n};\n\nvar resetForm = exports.resetForm = function resetForm(name) {\n  return {\n    type: types.FORM_RESET,\n    name: name\n  };\n};\n\nvar sendForm = function sendForm(name, form) {\n  return {\n    type: types.FORM_SAVE,\n    form: form,\n    name: name\n  };\n};\n\nvar getForm = exports.getForm = function getForm(name) {\n  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  return function (dispatch, getState) {\n    // Check to see if the form is already loaded.\n    var form = (0, _selectors.selectForm)(name, getState());\n\n    if (form.components && Array.isArray(form.components) && form.components.length && form._id === id) {\n      return;\n    }\n\n    var path = _Formio2.default.getProjectUrl() + '/' + (id ? 'form/' + id : name);\n    var formio = new _Formio2.default(path);\n    dispatch(requestForm(name, id, path));\n    return formio.loadForm().then(function (result) {\n      dispatch(receiveForm(name, result));\n      done(null, result);\n    }).catch(function (result) {\n      dispatch(failForm(name, result));\n      done(result);\n    });\n  };\n};\n\nvar saveForm = exports.saveForm = function saveForm(name, form) {\n  var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  return function (dispatch) {\n    dispatch(sendForm(name, form));\n    var id = form._id;\n    var path = _Formio2.default.getProjectUrl() + '/form' + (id ? '/' + id : '');\n    var formio = new _Formio2.default(path);\n    formio.saveForm(form).then(function (result) {\n      var url = _Formio2.default.getProjectUrl() + '/form/' + result._id;\n\n      dispatch(receiveForm(name, result, url));\n      done(null, result);\n    }).catch(function (result) {\n      dispatch(failForm(name, result));\n      done(result);\n    });\n  };\n};\n\nvar deleteForm = exports.deleteForm = function deleteForm(name, id) {\n  var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  return function (dispatch) {\n    var path = _Formio2.default.getProjectUrl() + '/form/' + id;\n    var formio = new _Formio2.default(path);\n    return formio.deleteForm().then(function () {\n      dispatch(resetForm(name));\n      done();\n    }).catch(function (result) {\n      dispatch(failForm(name, result));\n      done(result);\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"script"}