{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexForms = exports.resetForms = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _Formio = require('formiojs/Formio');\n\nvar _Formio2 = _interopRequireDefault(_Formio);\n\nvar _root = require('../root');\n\nvar _constants = require('./constants');\n\nvar types = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar resetForms = exports.resetForms = function resetForms(name) {\n  return {\n    type: types.FORMS_RESET,\n    name: name\n  };\n};\n\nvar requestForms = function requestForms(name, page, params) {\n  return {\n    type: types.FORMS_REQUEST,\n    name: name,\n    page: page,\n    params: params\n  };\n};\n\nvar receiveForms = function receiveForms(name, forms) {\n  return {\n    type: types.FORMS_SUCCESS,\n    name: name,\n    forms: forms\n  };\n};\n\nvar failForms = function failForms(name, error) {\n  return {\n    type: types.FORMS_FAILURE,\n    name: name,\n    error: error\n  };\n};\n\nvar indexForms = exports.indexForms = function indexForms(name) {\n  var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n  return function (dispatch, getState) {\n    dispatch(requestForms(name, page, params));\n\n    var _selectRoot = (0, _root.selectRoot)(name, getState()),\n        limit = _selectRoot.limit,\n        query = _selectRoot.query,\n        select = _selectRoot.select,\n        sort = _selectRoot.sort;\n\n    var formio = new _Formio2.default(_Formio2.default.getProjectUrl() + '/form');\n\n    var requestParams = _extends({}, query, params); // Ten is the default so if set to 10, don't send.\n\n\n    if (limit !== 10) {\n      requestParams.limit = limit;\n    } else {\n      delete requestParams.limit;\n    }\n\n    if (page !== 1) {\n      requestParams.skip = (page - 1) * limit;\n    } else {\n      delete requestParams.skip;\n    }\n\n    if (select) {\n      requestParams.select = select;\n    } else {\n      delete requestParams.select;\n    }\n\n    if (sort) {\n      requestParams.sort = sort;\n    } else {\n      delete requestParams.sort;\n    }\n\n    return formio.loadForms({\n      params: requestParams\n    }).then(function (result) {\n      dispatch(receiveForms(name, result));\n      done(null, result);\n    }).catch(function (error) {\n      dispatch(failForms(name, error));\n      done(error);\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"script"}