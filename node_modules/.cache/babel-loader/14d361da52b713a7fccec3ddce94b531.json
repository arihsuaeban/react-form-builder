{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.reflect.set\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Formio = require(\"../Formio\");\n\nvar _InputWidget2 = _interopRequireDefault(require(\"./InputWidget\"));\n\nvar _utils = require(\"../utils/utils\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = _superPropBase(target, property);\n\n      var desc;\n\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        _defineProperty(receiver, property, value);\n      }\n\n      return true;\n    };\n  }\n\n  return set(target, property, value, receiver);\n}\n\nfunction _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n\n  if (!s && isStrict) {\n    throw new Error('failed to set property');\n  }\n\n  return value;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar DEFAULT_FORMAT = 'yyyy-MM-dd hh:mm a';\nvar ISO_8601_FORMAT = 'yyyy-MM-ddTHH:mm:ssZ';\nvar CDN_URL = 'https://cdn.form.io/';\nvar JSDELIVR_CDN_URL = 'https://cdn.jsdelivr.net';\nvar CDN_FLATPICKR_LOCALE_URL = 'https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.9/l10n';\nvar SHORTCUT_BUTTONS_PLUGIN_URL = '/npm/shortcut-buttons-flatpickr@0.1.0/dist/';\nvar SHORTCUT_BUTTONS_CSS = \"\".concat(JSDELIVR_CDN_URL).concat(SHORTCUT_BUTTONS_PLUGIN_URL, \"themes/light.min.css\");\nvar SHORTCUT_BUTTONS_PLUGIN = \"\".concat(JSDELIVR_CDN_URL).concat(SHORTCUT_BUTTONS_PLUGIN_URL, \"shortcut-buttons-flatpickr.min.js\");\nvar isIEBrowser = (0, _utils.getBrowserInfo)().ie;\n\nvar CalendarWidget = /*#__PURE__*/function (_InputWidget) {\n  _inherits(CalendarWidget, _InputWidget);\n\n  var _super = _createSuper(CalendarWidget);\n  /* eslint-enable camelcase */\n\n\n  function CalendarWidget(settings, component, instance, index) {\n    var _this;\n\n    _classCallCheck(this, CalendarWidget);\n\n    _this = _super.call(this, settings, component, instance, index); // Change the format to map to the settings.\n\n    if (_this.settings.noCalendar) {\n      _this.settings.format = _this.settings.format.replace(/yyyy-MM-dd /g, '');\n    }\n\n    if (!_this.settings.enableTime) {\n      _this.settings.format = _this.settings.format.replace(/ hh:mm a$/g, '');\n      _this.settings.dateFormat = _this.settings.format;\n    } else if (_this.settings.time_24hr) {\n      _this.settings.format = _this.settings.format.replace(/hh:mm a$/g, 'HH:mm');\n    }\n\n    return _this;\n  }\n  /**\n   * Load the timezones.\n   *\n   * @return {boolean} TRUE if the zones are loading, FALSE otherwise.\n   */\n\n\n  _createClass(CalendarWidget, [{\n    key: \"loadZones\",\n    value: function loadZones() {\n      var _this2 = this;\n\n      var timezone = this.timezone;\n\n      if (!(0, _utils.zonesLoaded)() && (0, _utils.shouldLoadZones)(timezone)) {\n        (0, _utils.loadZones)(timezone).then(function () {\n          return _this2.emit('redraw');\n        }); // Return zones are loading.\n\n        return true;\n      } // Zones are already loaded.\n\n\n      return false;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(input) {\n      var _this3 = this,\n          _this$component$short;\n\n      var superAttach = _get(_getPrototypeOf(CalendarWidget.prototype), \"attach\", this).call(this, input);\n\n      var dateFormatInfo = (0, _utils.getLocaleDateFormatInfo)(this.settings.language);\n      this.defaultFormat = {\n        date: dateFormatInfo.dayFirst ? 'd/m/Y ' : 'm/d/Y ',\n        time: 'G:i K'\n      };\n      this.closedOn = 0;\n      this.valueFormat = this.settings.saveAs === 'date' ? ISO_8601_FORMAT : this.settings.dateFormat || ISO_8601_FORMAT;\n      this.valueMomentFormat = (0, _utils.convertFormatToMoment)(this.valueFormat);\n      var isReadOnly = this.settings.readOnly;\n      this.settings.minDate = isReadOnly ? null : (0, _utils.getDateSetting)(this.settings.minDate);\n      this.settings.maxDate = isReadOnly ? null : (0, _utils.getDateSetting)(this.settings.maxDate);\n      this.settings.disable = this.disabledDates;\n      this.settings.disableWeekends ? this.settings.disable.push(this.disableWeekends) : '';\n      this.settings.disableWeekdays ? this.settings.disable.push(this.disableWeekdays) : '';\n      this.settings.disableFunction ? this.settings.disable.push(this.disableFunction) : '';\n      this.settings.wasDefaultValueChanged = false;\n      this.settings.defaultValue = '';\n      this.settings.manualInputValue = '';\n      this.settings.isManuallyOverriddenValue = false;\n      this.settings.currentValue = '';\n      this.settings.altFormat = (0, _utils.convertFormatToFlatpickr)(this.settings.format);\n      this.settings.dateFormat = (0, _utils.convertFormatToFlatpickr)(this.settings.dateFormat);\n      this.settings.position = 'auto center';\n\n      this.settings.onChange = function () {\n        if (_this3.settings.allowInput) {\n          if (_this3.settings.isManuallyOverriddenValue && _this3.settings.enableTime) {\n            _this3.calendar._input.value = _this3.settings.manualInputValue;\n          } else {\n            _this3.settings.manualInputValue = '';\n          }\n\n          _this3.settings.isManuallyOverriddenValue = false;\n        }\n\n        _this3.emit('update');\n      };\n\n      this.settings.onOpen = function () {\n        return _this3.hook('onCalendarOpen');\n      };\n\n      this.settings.onClose = function () {\n        _this3.hook('onCalendarClose');\n\n        _this3.closedOn = Date.now();\n\n        if (_this3.settings.allowInput && _this3.settings.enableTime) {\n          _this3.calendar._input.value = _this3.settings.manualInputValue || _this3.calendar._input.value;\n          _this3.settings.isManuallyOverriddenValue = false;\n\n          _this3.emit('update');\n        }\n\n        if (_this3.settings.wasDefaultValueChanged) {\n          _this3.calendar._input.value = _this3.settings.defaultValue;\n          _this3.settings.wasDefaultValueChanged = false;\n        }\n\n        if (_this3.calendar) {\n          _this3.emit('blur');\n        }\n      };\n\n      _Formio.GlobalFormio.requireLibrary('flatpickr-css', 'flatpickr', [{\n        type: 'styles',\n        src: \"\".concat(CDN_URL).concat(this.flatpickrType, \"/flatpickr.min.css\")\n      }], true);\n\n      if (this.component.shortcutButtons) {\n        this.component.shortcutButtons = this.component.shortcutButtons.filter(function (btn) {\n          return btn.label && btn.onClick;\n        });\n      }\n\n      if ((_this$component$short = this.component.shortcutButtons) !== null && _this$component$short !== void 0 && _this$component$short.length) {\n        _Formio.GlobalFormio.requireLibrary('shortcut-buttons-flatpickr-css', 'ShortcutButtonsPlugin', [{\n          type: 'styles',\n          src: SHORTCUT_BUTTONS_CSS\n        }], true);\n      }\n\n      return superAttach.then(function () {\n        var _this3$component$shor;\n\n        if ((_this3$component$shor = _this3.component.shortcutButtons) !== null && _this3$component$shor !== void 0 && _this3$component$shor.length) {\n          return _Formio.GlobalFormio.requireLibrary('shortcut-buttons-flatpickr', 'ShortcutButtonsPlugin', SHORTCUT_BUTTONS_PLUGIN, true);\n        }\n      }).then(function (ShortcutButtonsPlugin) {\n        return _Formio.GlobalFormio.requireLibrary('flatpickr', 'flatpickr', \"\".concat(CDN_URL).concat(_this3.flatpickrType, \"/flatpickr.min.js\"), true).then(function (Flatpickr) {\n          var _this3$component$shor2;\n\n          if ((_this3$component$shor2 = _this3.component.shortcutButtons) !== null && _this3$component$shor2 !== void 0 && _this3$component$shor2.length && ShortcutButtonsPlugin) {\n            _this3.initShortcutButtonsPlugin(ShortcutButtonsPlugin);\n          }\n\n          _this3.settings.formatDate = _this3.getFlatpickrFormatDate(Flatpickr);\n\n          if (_this3._input) {\n            var locale = _this3.settings.locale;\n\n            if (locale && locale.length >= 2 && locale !== 'en') {\n              return _Formio.GlobalFormio.requireLibrary(\"flatpickr-\".concat(locale), \"flatpickr-\".concat(locale), \"\".concat(CDN_FLATPICKR_LOCALE_URL, \"/\").concat(locale, \".min.js\"), false, function () {\n                return _this3.initFlatpickr(Flatpickr);\n              });\n            } else {\n              _this3.initFlatpickr(Flatpickr);\n            }\n          }\n        });\n      }).catch(function (err) {\n        console.warn(err);\n      });\n    }\n  }, {\n    key: \"disableWeekends\",\n    get: function get() {\n      return function (date) {\n        return date.getDay() === 0 || date.getDay() === 6;\n      };\n    }\n  }, {\n    key: \"disableWeekdays\",\n    get: function get() {\n      var _this4 = this;\n\n      return function (date) {\n        return !_this4.disableWeekends(date);\n      };\n    }\n  }, {\n    key: \"disableFunction\",\n    get: function get() {\n      var _this5 = this;\n\n      return function (date) {\n        return _this5.evaluate(\"return \".concat(_this5.settings.disableFunction), {\n          date: date\n        });\n      };\n    }\n  }, {\n    key: \"defineTimezone\",\n    value: function defineTimezone() {\n      if (this.settings.timezone) {\n        return this.settings.timezone;\n      }\n\n      if (this.settings.displayInTimezone === 'submission' && this.settings.submissionTimezone) {\n        return this.settings.submissionTimezone;\n      }\n\n      if (this.settings.displayInTimezone === 'utc') {\n        return 'UTC';\n      } // Return current timezone if none are provided.\n\n\n      return (0, _utils.currentTimezone)();\n    }\n  }, {\n    key: \"timezone\",\n    get: function get() {\n      return this.defineTimezone();\n    }\n  }, {\n    key: \"defaultSettings\",\n    get: function get() {\n      return CalendarWidget.defaultSettings;\n    }\n  }, {\n    key: \"addSuffix\",\n    value: function addSuffix(suffix) {\n      var _this6 = this;\n\n      this.addEventListener(suffix, 'click', function (event) {\n        event.stopPropagation();\n\n        if (_this6.calendar) {\n          if (!_this6.calendar.isOpen && Date.now() - _this6.closedOn > 200) {\n            _this6.calendar.open();\n          } else if (_this6.calendar.isOpen) {\n            _this6.calendar.close();\n          }\n        }\n      });\n      return suffix;\n    }\n  }, {\n    key: \"disabled\",\n    set: function set(disabled) {\n      _set(_getPrototypeOf(CalendarWidget.prototype), \"disabled\", disabled, this, true);\n\n      if (this.calendar) {\n        if (disabled) {\n          this.calendar._input.setAttribute('disabled', 'disabled');\n        } else {\n          this.calendar._input.removeAttribute('disabled');\n        }\n\n        this.calendar.close();\n        this.calendar.redraw();\n      }\n    }\n  }, {\n    key: \"input\",\n    get: function get() {\n      return this.calendar ? this.calendar.altInput : null;\n    }\n  }, {\n    key: \"disabledDates\",\n    get: function get() {\n      if (this.settings.disabledDates) {\n        var disabledDates = this.settings.disabledDates.split(',');\n        return disabledDates.map(function (item) {\n          var dateMask = /\\d{4}-\\d{2}-\\d{2}/g;\n          var dates = item.match(dateMask);\n\n          if (dates && dates.length) {\n            return dates.length === 1 ? item.match(dateMask)[0] : {\n              from: item.match(dateMask)[0],\n              to: item.match(dateMask)[1]\n            };\n          }\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: \"localeFormat\",\n    get: function get() {\n      var format = '';\n\n      if (this.settings.enableDate) {\n        format += this.defaultFormat.date;\n      }\n\n      if (this.settings.enableTime) {\n        format += this.defaultFormat.time;\n      }\n\n      return format;\n    }\n  }, {\n    key: \"dateTimeFormat\",\n    get: function get() {\n      return this.settings.useLocaleSettings ? this.localeFormat : (0, _utils.convertFormatToFlatpickr)(this.dateFormat);\n    }\n  }, {\n    key: \"dateFormat\",\n    get: function get() {\n      return _lodash.default.get(this.settings, 'format', DEFAULT_FORMAT);\n    }\n    /**\n     * Return the date value.\n     *\n     * @param date\n     * @param format\n     * @return {string}\n     */\n\n  }, {\n    key: \"getDateValue\",\n    value: function getDateValue(date, format, useTimezone) {\n      if (useTimezone) {\n        return (0, _utils.momentDate)(date, this.valueFormat, this.timezone).format((0, _utils.convertFormatToMoment)(format));\n      }\n\n      return (0, _moment.default)(date).format((0, _utils.convertFormatToMoment)(format));\n    }\n  }, {\n    key: \"flatpickrType\",\n    get: function get() {\n      return 'flatpickr';\n    }\n    /**\n     * Return the value of the selected date.\n     *\n     * @return {*}\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      // Standard output format.\n      if (!this.calendar) {\n        return _get(_getPrototypeOf(CalendarWidget.prototype), \"getValue\", this).call(this);\n      } // Get the selected dates from the calendar widget.\n\n\n      var dates = this.calendar.selectedDates;\n\n      if (!dates || !dates.length) {\n        return _get(_getPrototypeOf(CalendarWidget.prototype), \"getValue\", this).call(this);\n      }\n\n      if (!(dates[0] instanceof Date)) {\n        return 'Invalid Date';\n      }\n\n      return this.getDateValue(dates[0], this.valueFormat, this.settings.saveAs === 'date');\n    }\n  }, {\n    key: \"isValueISO8601\",\n    value: function isValueISO8601(value) {\n      return value && typeof value === 'string' && value.match(/-[0-9]{2}T[0-9]{2}:/);\n    }\n    /**\n     * Set the selected date value.\n     *\n     * @param value\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var saveAsText = this.settings.saveAs === 'text';\n\n      if (!this.calendar) {\n        value = value ? (0, _utils.formatDate)(value, (0, _utils.convertFormatToMoment)(this.settings.format), this.timezone, (0, _utils.convertFormatToMoment)(this.valueMomentFormat)) : value;\n        return _get(_getPrototypeOf(CalendarWidget.prototype), \"setValue\", this).call(this, value);\n      }\n\n      if (this.isValueISO8601(value)) {\n        this.calendar.setDate((0, _moment.default)(value).toDate(), false);\n      } else if (value) {\n        var zonesLoading = this.loadZones();\n\n        if (!saveAsText && this.settings.readOnly && !zonesLoading) {\n          this.calendar.setDate((0, _utils.momentDate)(value, this.valueFormat, this.timezone).toDate(), false);\n        } else {\n          this.calendar.setDate((0, _moment.default)(value, this.valueMomentFormat).toDate(), false);\n        }\n      } else {\n        this.calendar.clear(false);\n      }\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value, format) {\n      var inputFormat = format || this.dateFormat;\n      var valueFormat = this.calendar ? this.valueFormat : this.settings.dateFormat;\n\n      if (this.settings.saveAs === 'text' && this.componentInstance.parent && !this.settings.readOnly) {\n        return (0, _moment.default)(value, (0, _utils.convertFormatToMoment)(valueFormat)).format((0, _utils.convertFormatToMoment)(valueFormat));\n      }\n\n      return (0, _utils.formatDate)(value, inputFormat, this.timezone, (0, _utils.convertFormatToMoment)(valueFormat));\n    }\n  }, {\n    key: \"setErrorClasses\",\n    value: function setErrorClasses(hasErrors) {\n      if (!this.input) {\n        return;\n      }\n\n      if (hasErrors) {\n        this.addClass(this.input, 'is-invalid');\n        this.input.setAttribute('aria-invalid', 'true');\n      } else {\n        this.removeClass(this.input, 'is-invalid');\n        this.input.setAttribute('aria-invalid', 'false');\n      }\n    }\n  }, {\n    key: \"validationValue\",\n    value: function validationValue(value) {\n      if (typeof value === 'string') {\n        return new Date(value);\n      }\n\n      return value.map(function (val) {\n        return new Date(val);\n      });\n    }\n  }, {\n    key: \"isCalendarElement\",\n    value: function isCalendarElement(element) {\n      var _this$calendar, _this$calendar$config, _this$calendar$config2, _this$calendar2, _this$calendar2$calen;\n\n      if (!element) {\n        return true;\n      }\n\n      if ((_this$calendar = this.calendar) !== null && _this$calendar !== void 0 && (_this$calendar$config = _this$calendar.config) !== null && _this$calendar$config !== void 0 && (_this$calendar$config2 = _this$calendar$config.appendTo) !== null && _this$calendar$config2 !== void 0 && _this$calendar$config2.contains(element)) {\n        return true;\n      }\n\n      return (_this$calendar2 = this.calendar) === null || _this$calendar2 === void 0 ? void 0 : (_this$calendar2$calen = _this$calendar2.calendarContainer) === null || _this$calendar2$calen === void 0 ? void 0 : _this$calendar2$calen.contains(element);\n    }\n  }, {\n    key: \"initFlatpickr\",\n    value: function initFlatpickr(Flatpickr) {\n      var _this7 = this;\n\n      var dateValue = this._input.value; // Create a new flatpickr.\n\n      this.calendar = new Flatpickr(this._input, _objectSpread(_objectSpread({}, this.settings), {}, {\n        disableMobile: true\n      }));\n\n      if (dateValue) {\n        if (this.isValueISO8601(dateValue)) {\n          this.calendar.setDate((0, _moment.default)(dateValue).toDate(), false, this.settings.altFormat);\n        } else {\n          this.calendar.setDate((0, _moment.default)(dateValue, (0, _utils.convertFormatToMoment)(this.dateFormat)).toDate(), false, this.settings.altFormat);\n        }\n      }\n\n      this.calendar.altInput.addEventListener('input', function (event) {\n        if (_this7.settings.allowInput && _this7.settings.currentValue !== event.target.value) {\n          _this7.settings.manualInputValue = event.target.value;\n          _this7.settings.isManuallyOverriddenValue = true;\n          _this7.settings.currentValue = event.target.value;\n        }\n\n        if (event.target.value === '' && _this7.calendar.selectedDates.length > 0) {\n          _this7.settings.wasDefaultValueChanged = true;\n          _this7.settings.defaultValue = event.target.value;\n\n          _this7.calendar.clear();\n        } else {\n          _this7.settings.wasDefaultValueChanged = false;\n        }\n      });\n\n      if (!this.settings.readOnly) {\n        // Enforce the input mask of the format.\n        this.setInputMask(this.calendar._input, (0, _utils.convertFormatToMask)(this.settings.format));\n      } // Fixes an issue with IE11 where value is set only after the second click\n      // TODO: Remove when the issue is solved in the flatpickr library\n\n\n      if (isIEBrowser) {\n        // Remove the original blur listener, because value will be set to empty since relatedTarget is null in IE11\n        var originalBlurListener = this.calendar._handlers.find(function (_ref) {\n          var event = _ref.event,\n              element = _ref.element;\n          return event === 'blur' && element === _this7.calendar._input;\n        });\n\n        this.calendar._input.removeEventListener('blur', originalBlurListener.handler); // Add the same event listener as in the original library, but with workaround for IE11 issue\n\n\n        this.addEventListener(this.calendar._input, 'blur', function (event) {\n          var activeElement = _this7.settings.shadowRoot ? _this7.settings.shadowRoot.activeElement : document.activeElement;\n          var relatedTarget = event.relatedTarget ? event.relatedTarget : activeElement;\n          var isInput = event.target === _this7.calendar._input;\n\n          if (isInput && !_this7.isCalendarElement(relatedTarget)) {\n            _this7.calendar.setDate(_this7.calendar._input.value, true, event.target === _this7.calendar.altInput ? _this7.calendar.config.altFormat : _this7.calendar.config.dateFormat);\n          }\n        });\n      } // Make sure we commit the value after a blur event occurs.\n\n\n      this.addEventListener(this.calendar._input, 'blur', function (event) {\n        var activeElement = _this7.settings.shadowRoot ? _this7.settings.shadowRoot.activeElement : document.activeElement;\n        var relatedTarget = event.relatedTarget ? event.relatedTarget : activeElement;\n\n        if (!(isIEBrowser && !relatedTarget) && !_this7.isCalendarElement(relatedTarget)) {\n          var inputValue = _this7.calendar.input.value;\n\n          var _dateValue = inputValue && _this7.settings.enableTime ? (0, _moment.default)(_this7.calendar.input.value, (0, _utils.convertFormatToMoment)(_this7.valueFormat)).toDate() : inputValue;\n\n          _this7.calendar.setDate(_dateValue, true, _this7.settings.altFormat);\n        } else if (!_this7.calendar.input.value && _this7.calendar.config.noCalendar) {\n          var _this7$calendar, _this7$calendar$confi, _this7$calendar2, _this7$calendar2$conf;\n\n          var value = (0, _moment.default)({\n            hour: (_this7$calendar = _this7.calendar) === null || _this7$calendar === void 0 ? void 0 : (_this7$calendar$confi = _this7$calendar.config) === null || _this7$calendar$confi === void 0 ? void 0 : _this7$calendar$confi.defaultHour,\n            minute: (_this7$calendar2 = _this7.calendar) === null || _this7$calendar2 === void 0 ? void 0 : (_this7$calendar2$conf = _this7$calendar2.config) === null || _this7$calendar2$conf === void 0 ? void 0 : _this7$calendar2$conf.defaultMinute\n          }).toDate();\n\n          _this7.calendar.setDate(value, true, _this7.settings.format);\n        }\n      }); // FJS-1103: When hit the enter button, the field not saving the year correctly\n\n      this.addEventListener(this.calendar.altInput, 'keydown', function (event) {\n        if (event.keyCode === 13) {\n          if (_this7.calendar.isOpen) {\n            _this7.calendar.close();\n\n            event.stopPropagation();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"initShortcutButtonsPlugin\",\n    value: function initShortcutButtonsPlugin(ShortcutButtonsPlugin) {\n      var _this8 = this;\n\n      this.settings.plugins = [// eslint-disable-next-line new-cap\n      ShortcutButtonsPlugin({\n        button: this.component.shortcutButtons.map(function (btn) {\n          return {\n            label: btn.label,\n            attributes: btn.attribute\n          };\n        }),\n        onClick: function onClick(index) {\n          var getValue = _this8.component.shortcutButtons[index].onClick;\n\n          var date = _this8.evaluate(getValue, {\n            date: new Date()\n          }, 'date');\n\n          _this8.calendar.setDate(date, true);\n        }\n      })];\n    }\n  }, {\n    key: \"getFlatpickrFormatDate\",\n    value: function getFlatpickrFormatDate(Flatpickr) {\n      var _this9 = this;\n\n      return function (date, format) {\n        // Only format this if this is the altFormat and the form is readOnly.\n        if (_this9.settings.readOnly && format === _this9.settings.altFormat) {\n          if (!_this9.settings.enableTime || _this9.loadZones()) {\n            return Flatpickr.formatDate(date, format);\n          }\n\n          var currentValue = new Date(_this9.getValue());\n\n          if (currentValue.toString() === date.toString()) {\n            var compValue = _this9.componentInstance.dataValue;\n\n            if (Array.isArray(compValue)) {\n              compValue = compValue[_this9.valueIndex];\n            }\n\n            return (0, _utils.formatOffset)(Flatpickr.formatDate.bind(Flatpickr), new Date(compValue), format, _this9.timezone);\n          }\n\n          return (0, _utils.formatOffset)(Flatpickr.formatDate.bind(Flatpickr), date, format, _this9.timezone);\n        }\n\n        return Flatpickr.formatDate(date, format);\n      };\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CalendarWidget.prototype), \"destroy\", this).call(this);\n\n      if (this.calendar) {\n        this.calendar.destroy();\n      }\n    }\n  }], [{\n    key: \"defaultSettings\",\n    get:\n    /* eslint-disable camelcase */\n    function get() {\n      return {\n        type: 'calendar',\n        altInput: true,\n        allowInput: true,\n        clickOpens: true,\n        enableDate: true,\n        enableTime: true,\n        mode: 'single',\n        noCalendar: false,\n        format: DEFAULT_FORMAT,\n        dateFormat: ISO_8601_FORMAT,\n        useLocaleSettings: false,\n        language: 'us-en',\n        hourIncrement: 1,\n        minuteIncrement: 5,\n        time_24hr: false,\n        saveAs: 'date',\n        displayInTimezone: '',\n        timezone: '',\n        disable: [],\n        minDate: '',\n        maxDate: ''\n      };\n    }\n  }]);\n\n  return CalendarWidget;\n}(_InputWidget2.default);\n\nexports.default = CalendarWidget;","map":null,"metadata":{},"sourceType":"script"}