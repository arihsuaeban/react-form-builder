{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _beedle = _interopRequireDefault(require(\"beedle\"));\n\nvar _requests = require(\"./requests\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _saveUrl;\n\nvar _onPost;\n\nvar _onLoad;\n\nvar store = new _beedle[\"default\"]({\n  actions: {\n    setData: function setData(context, data, saveData) {\n      context.commit('setData', data);\n      if (saveData) this.save(data);\n    },\n    load: function load(context, _ref) {\n      var _this = this;\n\n      var loadUrl = _ref.loadUrl,\n          saveUrl = _ref.saveUrl,\n          data = _ref.data;\n      _saveUrl = saveUrl;\n\n      if (_onLoad) {\n        _onLoad().then(function (x) {\n          return _this.setData(context, x);\n        });\n      } else if (loadUrl) {\n        (0, _requests.get)(loadUrl).then(function (x) {\n          if (data && data.length > 0 && x.length === 0) {\n            data.forEach(function (y) {\n              return x.push(y);\n            });\n          }\n\n          _this.setData(context, x);\n        });\n      } else {\n        this.setData(context, data);\n      }\n    },\n    create: function create(context, element) {\n      var data = context.state.data;\n      data.push(element);\n      this.setData(context, data, true);\n    },\n    \"delete\": function _delete(context, element) {\n      var data = context.state.data;\n      data.splice(data.indexOf(element), 1);\n      this.setData(context, data, true);\n    },\n    updateOrder: function updateOrder(context, elements) {\n      this.setData(context, elements, true);\n    },\n    save: function save(data) {\n      if (_onPost) {\n        _onPost({\n          task_data: data\n        });\n      } else if (_saveUrl) {\n        (0, _requests.post)(_saveUrl, {\n          task_data: data\n        });\n      }\n    }\n  },\n  mutations: {\n    setData: function setData(state, payload) {\n      // eslint-disable-next-line no-param-reassign\n      state.data = payload;\n      return state;\n    }\n  },\n  initialState: {\n    data: []\n  }\n});\n\nstore.setExternalHandler = function (onLoad, onPost) {\n  _onLoad = onLoad;\n  _onPost = onPost;\n};\n\nvar _default = store;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}