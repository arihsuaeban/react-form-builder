{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _signature_pad = _interopRequireDefault(require(\"signature_pad\"));\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar _Input2 = _interopRequireDefault(require(\"../_classes/input/Input\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar SignatureComponent = /*#__PURE__*/function (_Input) {\n  _inherits(SignatureComponent, _Input);\n\n  var _super = _createSuper(SignatureComponent);\n\n  function SignatureComponent() {\n    _classCallCheck(this, SignatureComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignatureComponent, [{\n    key: \"init\",\n    value: function init() {\n      var _this$component$overl, _this$component$overl2;\n\n      _get(_getPrototypeOf(SignatureComponent.prototype), \"init\", this).call(this);\n\n      this.currentWidth = 0;\n      this.scale = 1;\n\n      if (!this.component.width) {\n        this.component.width = '100%';\n      }\n\n      if (!this.component.height) {\n        this.component.height = '200px';\n      }\n\n      if (this.component.keepOverlayRatio && this.options.pdf && (_this$component$overl = this.component.overlay) !== null && _this$component$overl !== void 0 && _this$component$overl.width && (_this$component$overl2 = this.component.overlay) !== null && _this$component$overl2 !== void 0 && _this$component$overl2.height) {\n        var _this$component$overl3, _this$component$overl4;\n\n        this.ratio = ((_this$component$overl3 = this.component.overlay) === null || _this$component$overl3 === void 0 ? void 0 : _this$component$overl3.width) / ((_this$component$overl4 = this.component.overlay) === null || _this$component$overl4 === void 0 ? void 0 : _this$component$overl4.height);\n        this.component.width = '100%';\n        this.component.height = 'auto';\n      }\n    }\n  }, {\n    key: \"emptyValue\",\n    get: function get() {\n      return '';\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return SignatureComponent.schema();\n    }\n  }, {\n    key: \"inputInfo\",\n    get: function get() {\n      var info = _get(_getPrototypeOf(SignatureComponent.prototype), \"inputInfo\", this);\n\n      info.type = 'input';\n      info.attr.type = 'hidden';\n      return info;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return \"\".concat(_get(_getPrototypeOf(SignatureComponent.prototype), \"className\", this), \" signature-pad\");\n    }\n  }, {\n    key: \"labelIsHidden\",\n    value: function labelIsHidden() {\n      return this.component.hideLabel;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var changed = _get(_getPrototypeOf(SignatureComponent.prototype), \"setValue\", this).call(this, value, flags);\n\n      if (this.refs.signatureImage && (this.options.readOnly || this.disabled)) {\n        this.refs.signatureImage.setAttribute('src', value);\n        this.showCanvas(false);\n      }\n\n      if (this.signaturePad) {\n        if (!value) {\n          this.signaturePad.clear();\n        } else if (changed) {\n          this.triggerChange();\n        }\n      }\n\n      if (this.signaturePad && this.dataValue && this.signaturePad.isEmpty()) {\n        this.setDataToSigaturePad();\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"showCanvas\",\n    value: function showCanvas(show) {\n      if (show) {\n        if (this.refs.canvas) {\n          this.refs.canvas.style.display = 'inherit';\n        }\n\n        if (this.refs.signatureImage) {\n          this.refs.signatureImage.style.display = 'none';\n        }\n      } else {\n        if (this.refs.canvas) {\n          this.refs.canvas.style.display = 'none';\n        }\n\n        if (this.refs.signatureImage) {\n          this.refs.signatureImage.style.display = 'inherit';\n        }\n      }\n    }\n  }, {\n    key: \"onDisabled\",\n    value: function onDisabled() {\n      this.showCanvas(!_get(_getPrototypeOf(SignatureComponent.prototype), \"disabled\", this));\n\n      if (this.signaturePad) {\n        if (_get(_getPrototypeOf(SignatureComponent.prototype), \"disabled\", this)) {\n          this.signaturePad.off();\n\n          if (this.refs.refresh) {\n            this.refs.refresh.classList.add('disabled');\n          }\n\n          if (this.refs.signatureImage && this.dataValue) {\n            this.refs.signatureImage.setAttribute('src', this.dataValue);\n          }\n        } else {\n          this.signaturePad.on();\n\n          if (this.refs.refresh) {\n            this.refs.refresh.classList.remove('disabled');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkSize\",\n    value: function checkSize(force, scale) {\n      if (this.refs.padBody && (force || this.refs.padBody && this.refs.padBody.offsetWidth !== this.currentWidth)) {\n        this.scale = force ? scale : this.scale;\n        this.currentWidth = this.refs.padBody.offsetWidth;\n        var width = this.currentWidth * this.scale;\n        this.refs.canvas.width = width;\n        var height = this.ratio ? width / this.ratio : this.refs.padBody.offsetHeight * this.scale;\n        this.refs.canvas.height = height;\n        this.refs.canvas.style.maxWidth = \"\".concat(this.currentWidth * this.scale, \"px\");\n        this.refs.canvas.style.maxHeight = \"\".concat(this.refs.padBody.offsetHeight * this.scale, \"px\");\n        var ctx = this.refs.canvas.getContext('2d');\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.scale(1 / this.scale, 1 / this.scale);\n        ctx.fillStyle = this.signaturePad.backgroundColor;\n        ctx.fillRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n        this.signaturePad.clear();\n\n        if (this.dataValue) {\n          this.setDataToSigaturePad();\n        }\n      }\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(value, index) {\n      return this.renderTemplate('signature', {\n        element: _get(_getPrototypeOf(SignatureComponent.prototype), \"renderElement\", this).call(this, value, index),\n        required: _lodash.default.get(this.component, 'validate.required', false)\n      });\n    }\n  }, {\n    key: \"hasModalSaveButton\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"getModalPreviewTemplate\",\n    value: function getModalPreviewTemplate() {\n      return this.renderTemplate('modalPreview', {\n        previewText: this.dataValue ? \"<img src=\".concat(this.dataValue, \" ref='openModal' style=\\\"width: 100%;height: 100%;\\\" />\") : this.t('Click to Sign')\n      });\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(element) {\n      var _this = this;\n\n      this.loadRefs(element, {\n        canvas: 'single',\n        refresh: 'single',\n        padBody: 'single',\n        signatureImage: 'single'\n      });\n\n      var superAttach = _get(_getPrototypeOf(SignatureComponent.prototype), \"attach\", this).call(this, element);\n\n      if (this.refs.refresh && this.options.readOnly) {\n        this.refs.refresh.classList.add('disabled');\n      } // Create the signature pad.\n\n\n      if (this.refs.canvas) {\n        this.signaturePad = new _signature_pad.default(this.refs.canvas, {\n          minWidth: this.component.minWidth,\n          maxWidth: this.component.maxWidth,\n          penColor: this.component.penColor,\n          backgroundColor: this.component.backgroundColor\n        });\n        this.signaturePad.addEventListener('endStroke', function () {\n          return _this.setValue(_this.signaturePad.toDataURL());\n        });\n        this.refs.signatureImage.setAttribute('src', this.signaturePad.toDataURL());\n        this.onDisabled(); // Ensure the signature is always the size of its container.\n\n        if (this.refs.padBody) {\n          if (!this.refs.padBody.style.maxWidth) {\n            this.refs.padBody.style.maxWidth = '100%';\n          }\n\n          if (!this.builderMode && !this.options.preview) {\n            this.observer = new _resizeObserverPolyfill.default(function () {\n              _this.checkSize();\n            });\n            this.observer.observe(this.refs.padBody);\n          }\n\n          this.addEventListener(window, 'resize', _lodash.default.debounce(function () {\n            return _this.checkSize();\n          }, 10));\n          setTimeout(function checkWidth() {\n            if (this.refs.padBody && this.refs.padBody.offsetWidth) {\n              this.checkSize();\n            } else {\n              setTimeout(checkWidth.bind(this), 20);\n            }\n          }.bind(this), 20);\n        }\n      }\n\n      this.addEventListener(this.refs.refresh, 'click', function (event) {\n        event.preventDefault();\n\n        _this.showCanvas(true);\n\n        _this.signaturePad.clear();\n\n        _this.setValue(_this.defaultValue);\n      });\n      this.setValue(this.dataValue);\n      return superAttach;\n    }\n    /* eslint-enable max-statements */\n\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      }\n\n      if (this.signaturePad) {\n        this.signaturePad.off();\n      }\n\n      this.signaturePad = null;\n      this.currentWidth = 0;\n\n      _get(_getPrototypeOf(SignatureComponent.prototype), \"detach\", this).call(this);\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value) {\n      return value ? 'Yes' : 'No';\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.refs.padBody.focus();\n    }\n  }, {\n    key: \"setDataToSigaturePad\",\n    value: function setDataToSigaturePad() {\n      this.signaturePad.fromDataURL(this.dataValue, {\n        ratio: 1,\n        width: this.refs.canvas.width,\n        height: this.refs.canvas.height\n      });\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _Input2.default.schema.apply(_Input2.default, [{\n        type: 'signature',\n        label: 'Signature',\n        key: 'signature',\n        footer: 'Sign above',\n        width: '100%',\n        height: '150px',\n        penColor: 'black',\n        backgroundColor: 'rgb(245,245,235)',\n        minWidth: '0.5',\n        maxWidth: '2.5',\n        keepOverlayRatio: true\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Signature',\n        group: 'advanced',\n        icon: 'pencil',\n        weight: 120,\n        documentation: '/userguide/#signature',\n        schema: SignatureComponent.schema()\n      };\n    }\n  }]);\n\n  return SignatureComponent;\n}(_Input2.default);\n\nexports.default = SignatureComponent;","map":null,"metadata":{},"sourceType":"script"}