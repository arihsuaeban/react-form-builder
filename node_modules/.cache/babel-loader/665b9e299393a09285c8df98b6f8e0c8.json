{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _Radio = _interopRequireDefault(require(\"../radio/Radio\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar SelectBoxesComponent = /*#__PURE__*/function (_RadioComponent) {\n  _inherits(SelectBoxesComponent, _RadioComponent);\n\n  var _super = _createSuper(SelectBoxesComponent);\n\n  function SelectBoxesComponent() {\n    var _this;\n\n    _classCallCheck(this, SelectBoxesComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.validators = _this.validators.concat('minSelectedCount', 'maxSelectedCount');\n    return _this;\n  }\n\n  _createClass(SelectBoxesComponent, [{\n    key: \"init\",\n    value: function init() {\n      _get(_getPrototypeOf(SelectBoxesComponent.prototype), \"init\", this).call(this);\n\n      this.component.inputType = 'checkbox';\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return SelectBoxesComponent.schema();\n    }\n  }, {\n    key: \"inputInfo\",\n    get: function get() {\n      var info = _get(_getPrototypeOf(SelectBoxesComponent.prototype), \"elementInfo\", this).call(this);\n\n      info.attr.name += '[]';\n      info.attr.type = 'checkbox';\n      info.attr.class = 'form-check-input';\n      return info;\n    }\n  }, {\n    key: \"emptyValue\",\n    get: function get() {\n      return this.component.values.reduce(function (prev, value) {\n        if (value.value) {\n          prev[value.value] = false;\n        }\n\n        return prev;\n      }, {});\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var defaultValue = this.emptyValue;\n\n      if (!_lodash.default.isEmpty(this.component.defaultValue)) {\n        defaultValue = this.component.defaultValue;\n      }\n\n      if (this.component.customDefaultValue && !this.options.preview) {\n        defaultValue = this.evaluate(this.component.customDefaultValue, {\n          value: ''\n        }, 'value');\n      }\n\n      return defaultValue;\n    }\n    /**\n     * Only empty if the values are all false.\n     *\n     * @param value\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.dataValue;\n      var empty = true;\n\n      for (var key in value) {\n        if (value.hasOwnProperty(key) && value[key]) {\n          empty = false;\n          break;\n        }\n      }\n\n      return empty;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      if (this.viewOnly || !this.refs.input || !this.refs.input.length) {\n        return this.dataValue;\n      }\n\n      var value = {};\n\n      _lodash.default.each(this.refs.input, function (input) {\n        value[input.value] = !!input.checked;\n      });\n\n      return value;\n    }\n    /**\n     * Normalize values coming into updateValue.\n     *\n     * @param value\n     * @return {*}\n     */\n\n  }, {\n    key: \"normalizeValue\",\n    value: function normalizeValue(value) {\n      value = value || {};\n\n      if (_typeof(value) !== 'object') {\n        if (typeof value === 'string') {\n          value = _defineProperty({}, value, true);\n        } else {\n          value = {};\n        }\n      }\n\n      if (Array.isArray(value)) {\n        _lodash.default.each(value, function (val) {\n          value[val] = true;\n        });\n      }\n\n      return value;\n    }\n    /**\n     * Set the value of this component.\n     *\n     * @param value\n     * @param flags\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var changed = this.updateValue(value, flags);\n      value = this.dataValue;\n\n      if (this.isHtmlRenderMode()) {\n        if (changed) {\n          this.redraw();\n        }\n      } else {\n        _lodash.default.each(this.refs.input, function (input) {\n          if (_lodash.default.isUndefined(value[input.value])) {\n            value[input.value] = false;\n          }\n\n          input.checked = !!value[input.value];\n        });\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value) {\n      if (!value) {\n        return '';\n      }\n\n      return (0, _lodash.default)(this.component.values || []).filter(function (v) {\n        return value[v.value];\n      }).map('label').join(', ');\n    }\n  }, {\n    key: \"setSelectedClasses\",\n    value: function setSelectedClasses() {\n      var _this2 = this;\n\n      if (this.refs.wrapper) {\n        //add/remove selected option class\n        var value = this.dataValue;\n        var valuesKeys = Object.keys(value);\n        this.refs.wrapper.forEach(function (wrapper, index) {\n          var key = valuesKeys[index];\n          var input = _this2.refs.input[index];\n\n          if ((input === null || input === void 0 ? void 0 : input.value.toString()) !== key) {\n            key = valuesKeys.find(function (k) {\n              return (input === null || input === void 0 ? void 0 : input.value.toString()) === k;\n            });\n          }\n\n          var isChecked = value[key];\n\n          if (isChecked && key) {\n            //add class to container when selected\n            _this2.addClass(wrapper, _this2.optionSelectedClass); //change \"checked\" attribute\n\n\n            input.setAttribute('checked', 'true');\n          } else if (!isChecked && key) {\n            _this2.removeClass(wrapper, _this2.optionSelectedClass);\n\n            input.removeAttribute('checked');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"setInputsDisabled\",\n    value: function setInputsDisabled(value, onlyUnchecked) {\n      if (this.refs.input) {\n        this.refs.input.forEach(function (item) {\n          if (onlyUnchecked && !item.checked || !onlyUnchecked) {\n            item.disabled = value;\n          }\n        });\n      }\n    }\n  }, {\n    key: \"checkComponentValidity\",\n    value: function checkComponentValidity(data, dirty, rowData, options) {\n      var _this3 = this;\n\n      var minCount = this.component.validate.minSelectedCount;\n      var maxCount = this.component.validate.maxSelectedCount;\n      var isValid = this.isValid(data, dirty);\n\n      if (maxCount || minCount) {\n        var count = Object.keys(this.validationValue).reduce(function (total, key) {\n          if (_this3.validationValue[key]) {\n            total++;\n          }\n\n          return total;\n        }, 0); // Disable the rest of inputs if the max amount is already checked\n\n        if (maxCount && count >= maxCount) {\n          this.setInputsDisabled(true, true);\n        } else if (maxCount && !this.shouldDisabled) {\n          this.setInputsDisabled(false);\n        }\n\n        if (!isValid && maxCount && count > maxCount) {\n          var message = this.t(this.component.maxSelectedCountMessage || 'You can only select up to {{maxCount}} items.', {\n            maxCount: maxCount\n          });\n          this.setCustomValidity(message, dirty);\n          return false;\n        } else if (!isValid && minCount && count < minCount) {\n          this.setInputsDisabled(false);\n\n          var _message = this.t(this.component.minSelectedCountMessage || 'You must select at least {{minCount}} items.', {\n            minCount: minCount\n          });\n\n          this.setCustomValidity(_message, dirty);\n          return false;\n        }\n      }\n\n      return _get(_getPrototypeOf(SelectBoxesComponent.prototype), \"checkComponentValidity\", this).call(this, data, dirty, rowData, options);\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len2 = arguments.length, extend = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        extend[_key2] = arguments[_key2];\n      }\n\n      return _Radio.default.schema.apply(_Radio.default, [{\n        type: 'selectboxes',\n        label: 'Select Boxes',\n        key: 'selectBoxes',\n        inline: false\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Select Boxes',\n        group: 'basic',\n        icon: 'plus-square',\n        weight: 60,\n        documentation: '/userguide/#selectboxes',\n        schema: SelectBoxesComponent.schema()\n      };\n    }\n  }]);\n\n  return SelectBoxesComponent;\n}(_Radio.default);\n\nexports.default = SelectBoxesComponent;","map":null,"metadata":{},"sourceType":"script"}