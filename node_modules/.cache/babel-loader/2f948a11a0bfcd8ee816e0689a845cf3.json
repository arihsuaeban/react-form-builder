{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.splice\");\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.reflect.set\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Component = _interopRequireDefault(require(\"../_classes/component/Component\"));\n\nvar _DataGrid = _interopRequireDefault(require(\"../datagrid/DataGrid\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = _superPropBase(target, property);\n\n      var desc;\n\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        _defineProperty(receiver, property, value);\n      }\n\n      return true;\n    };\n  }\n\n  return set(target, property, value, receiver);\n}\n\nfunction _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n\n  if (!s && isStrict) {\n    throw new Error('failed to set property');\n  }\n\n  return value;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar DataMapComponent = /*#__PURE__*/function (_DataGridComponent) {\n  _inherits(DataMapComponent, _DataGridComponent);\n\n  var _super = _createSuper(DataMapComponent);\n\n  function DataMapComponent(component, options, data) {\n    var _this;\n\n    _classCallCheck(this, DataMapComponent);\n\n    _this = _super.call(this, component, options, data);\n    _this.type = 'datamap';\n    return _this;\n  }\n\n  _createClass(DataMapComponent, [{\n    key: \"schema\",\n    get: function get() {\n      var schema = _get(_getPrototypeOf(DataMapComponent.prototype), \"schema\", this);\n\n      if (this.components && this.components.length > 0) {\n        schema.valueComponent = this.components[this.components.length - 1].schema;\n      }\n\n      return _lodash.default.omit(schema, 'components');\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.components = [];\n      this.rows = [];\n      this.createRows();\n      this.visibleColumns = _defineProperty({\n        key: true\n      }, this.valueKey, true);\n      this.component.valueComponent.hideLabel = true;\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return DataMapComponent.schema();\n    }\n  }, {\n    key: \"emptyValue\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"dataValue\",\n    get: function get() {\n      if (!this.key || !this.visible && this.component.clearOnHide) {\n        return this.emptyValue;\n      }\n\n      if (!this.hasValue() && this.shouldAddDefaultValue) {\n        this.dataValue = this.emptyValue;\n      }\n\n      return _lodash.default.get(this.data, this.key);\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(DataMapComponent.prototype), \"dataValue\", value, this, true);\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var value = _get(_getPrototypeOf(DataMapComponent.prototype), \"defaultValue\", this);\n\n      if (Array.isArray(value)) {\n        return value[0];\n      }\n\n      return this.emptyValue;\n    }\n  }, {\n    key: \"keySchema\",\n    get: function get() {\n      return {\n        type: 'textfield',\n        input: true,\n        hideLabel: true,\n        label: this.component.keyLabel || 'Key',\n        key: '__key',\n        disableBuilderActions: true\n      };\n    }\n  }, {\n    key: \"valueKey\",\n    get: function get() {\n      return this.component.valueComponent.key;\n    }\n  }, {\n    key: \"getRowValues\",\n    value: function getRowValues() {\n      var dataValue = this.dataValue;\n\n      if (this.builderMode) {\n        return [dataValue];\n      }\n\n      if (_lodash.default.isEmpty(dataValue)) {\n        return [];\n      }\n\n      return Object.keys(dataValue).map(function () {\n        return dataValue;\n      });\n    }\n  }, {\n    key: \"getComponentsContainer\",\n    value: function getComponentsContainer() {\n      if (this.builderMode) {\n        return this.getComponents().map(function (comp) {\n          return comp.component;\n        });\n      }\n\n      return _get(_getPrototypeOf(DataMapComponent.prototype), \"getComponentsContainer\", this).call(this);\n    }\n  }, {\n    key: \"iteratableRows\",\n    get: function get() {\n      return this.rows.map(function (row) {\n        return Object.keys(row).map(function (key) {\n          return {\n            components: row[key],\n            data: row[key].dataValue\n          };\n        });\n      });\n    }\n  }, {\n    key: \"componentContext\",\n    value: function componentContext(component) {\n      return this.iteratableRows[component.row].find(function (comp) {\n        return comp.components.key === component.key;\n      }).data;\n    }\n  }, {\n    key: \"hasHeader\",\n    value: function hasHeader() {\n      return true;\n    }\n  }, {\n    key: \"hasRemoveButtons\",\n    value: function hasRemoveButtons() {\n      return !this.component.disableAddingRemovingRows && !this.options.readOnly && !this.disabled && this.fullMode;\n    }\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      var keySchema = Object.assign({}, this.keySchema);\n      var valueSchema = Object.assign({}, this.component.valueComponent);\n      keySchema.hideLabel = false;\n      valueSchema.hideLabel = false;\n      return this.component.keyBeforeValue ? [keySchema, valueSchema] : [valueSchema, keySchema];\n    }\n  }, {\n    key: \"getRowKey\",\n    value: function getRowKey(rowIndex) {\n      var keys = Object.keys(this.dataValue);\n\n      if (!keys[rowIndex]) {\n        keys[rowIndex] = (0, _utils.uniqueKey)(this.dataValue, this.defaultRowKey);\n      }\n\n      return keys[rowIndex];\n    }\n  }, {\n    key: \"defaultRowKey\",\n    get: function get() {\n      return 'key';\n    }\n  }, {\n    key: \"setRowComponentsData\",\n    value: function setRowComponentsData(rowIndex, rowData) {\n      _lodash.default.each(this.rows[rowIndex], function (component) {\n        if (component.key === '__key') {\n          component.data = {\n            '__key': Object.keys(rowData)[rowIndex]\n          };\n        } else {\n          component.data = rowData;\n        }\n      });\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value, options) {\n      var _this2 = this;\n\n      if (options !== null && options !== void 0 && options.email && this.visible && !this.skipInEmail && _lodash.default.isObject(value)) {\n        var result = \"\\n        <table border=\\\"1\\\" style=\\\"width:100%\\\">\\n          <tbody>\\n      \";\n        result = Object.keys(value).reduce(function (result, key) {\n          result += \"\\n          <tr>\\n            <th style=\\\"padding: 5px 10px;\\\">\".concat(key, \"</th>\\n            <td style=\\\"width:100%;padding:5px 10px;\\\">\").concat(_this2.getView(value[key], options), \"</td>\\n          </tr>\\n        \");\n          return result;\n        }, result);\n        result += \"\\n          </tbody>\\n        </table>\\n      \";\n        return result;\n      }\n\n      if (_lodash.default.isEmpty(value)) {\n        return '';\n      }\n\n      if (options !== null && options !== void 0 && options.modalPreview) {\n        delete options.modalPreview;\n        return this.getDataValueAsTable(value, options);\n      }\n\n      return _typeof(value) === 'object' ? '[Complex Data]' : value;\n    }\n  }, {\n    key: \"getDataValueAsTable\",\n    value: function getDataValueAsTable(value, options) {\n      var _this3 = this;\n\n      var result = \"\\n      <table border=\\\"1\\\" style=\\\"width:100%\\\">\\n        <tbody>\\n    \";\n\n      if (this.visible && _lodash.default.isObject(value)) {\n        Object.keys(value).forEach(function (key) {\n          result += \"\\n          <tr>\\n            <th style=\\\"padding: 5px 10px;\\\">\".concat(key, \"</th>\\n            <td style=\\\"width:100%;padding:5px 10px;\\\">\").concat(_this3.getView(value[key], options), \"</td>\\n          </tr>\\n        \");\n        });\n      }\n\n      result += \"\\n        </tbody>\\n      </table>\\n    \";\n      return result;\n    }\n  }, {\n    key: \"createRowComponents\",\n    value: function createRowComponents(row, rowIndex) {\n      var _this4 = this; // Use original value component API key in builder mode to be able to edit value component\n\n\n      var key = this.builderMode ? this.valueKey : this.getRowKey(rowIndex); // Create a new event emitter since fields are isolated.\n\n      var options = _lodash.default.clone(this.options);\n\n      options.events = new _eventemitter.default();\n      options.name += \"[\".concat(rowIndex, \"]\");\n      options.row = \"\".concat(rowIndex);\n      var components = {};\n      components['__key'] = this.createComponent(this.keySchema, options, {\n        __key: this.builderMode ? this.defaultRowKey : key\n      });\n      components['__key'].on('componentChange', function (event) {\n        var dataValue = _this4.dataValue;\n        var newKey = (0, _utils.uniqueKey)(dataValue, event.value);\n        dataValue[newKey] = dataValue[key];\n        delete dataValue[key];\n        var comp = components[_this4.valueKey];\n        comp.component.key = newKey;\n        comp.path = _this4.calculateComponentPath(comp);\n        key = newKey;\n      });\n\n      var valueComponent = _lodash.default.clone(this.component.valueComponent);\n\n      valueComponent.key = key;\n      var componentOptions = this.options;\n      componentOptions.row = options.row;\n      components[this.valueKey] = this.createComponent(valueComponent, componentOptions, this.dataValue);\n      return components;\n    }\n  }, {\n    key: \"canAddColumn\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"addChildComponent\",\n    value: function addChildComponent(component) {\n      this.component.valueComponent = component;\n    }\n  }, {\n    key: \"saveChildComponent\",\n    value: function saveChildComponent(component) {\n      // Update the Value Component, the Key Component is not allowed to edit\n      if (component.key !== this.keySchema.key) {\n        this.component.valueComponent = component;\n      }\n    }\n  }, {\n    key: \"removeChildComponent\",\n    value: function removeChildComponent() {\n      var defaultSchema = DataMapComponent.schema();\n      this.component.valueComponent = defaultSchema.valueComponent;\n    }\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var index = this.rows.length;\n      this.rows[index] = this.createRowComponents(this.dataValue, index);\n      this.redraw();\n      this.triggerChange();\n    }\n  }, {\n    key: \"removeRow\",\n    value: function removeRow(index) {\n      var keys = Object.keys(this.dataValue);\n\n      if (keys[index]) {\n        delete this.dataValue[keys[index]];\n      }\n\n      this.rows.splice(index, 1);\n      this.redraw();\n      this.triggerChange();\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var changed = this.hasChanged(value, this.dataValue);\n      this.dataValue = value;\n      this.createRows();\n      this.updateOnChange(flags, changed);\n      return changed;\n    }\n  }, {\n    key: \"checkColumns\",\n    value: function checkColumns() {\n      return {\n        rebuild: false,\n        show: true\n      };\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _Component.default.schema.apply(_Component.default, [{\n        label: 'Data Map',\n        key: 'dataMap',\n        type: 'datamap',\n        clearOnHide: true,\n        addAnother: 'Add Another',\n        disableAddingRemovingRows: false,\n        keyBeforeValue: true,\n        valueComponent: {\n          type: 'textfield',\n          key: 'value',\n          label: 'Value',\n          input: true\n        },\n        input: true,\n        validate: {\n          maxLength: 0,\n          minLength: 0\n        }\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Data Map',\n        icon: 'th-list',\n        group: 'data',\n        documentation: '/userguide/#datamap',\n        weight: 20,\n        schema: DataMapComponent.schema()\n      };\n    }\n  }]);\n\n  return DataMapComponent;\n}(_DataGrid.default);\n\nexports.default = DataMapComponent;","map":null,"metadata":{},"sourceType":"script"}