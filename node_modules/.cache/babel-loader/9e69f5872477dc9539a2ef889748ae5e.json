{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _fbemitter = require(\"fbemitter\");\n\nvar _formValidator = _interopRequireDefault(require(\"./form-validator\"));\n\nvar _formElements = _interopRequireDefault(require(\"./form-elements\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Image = _formElements[\"default\"].Image,\n    Checkboxes = _formElements[\"default\"].Checkboxes,\n    Signature = _formElements[\"default\"].Signature,\n    Download = _formElements[\"default\"].Download,\n    Camera = _formElements[\"default\"].Camera;\n\nvar ReactForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactForm, _React$Component);\n\n  var _super = _createSuper(ReactForm);\n\n  function ReactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ReactForm);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"form\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"inputs\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"answerData\", void 0);\n\n    _this.answerData = _this._convert(props.answer_data);\n    _this.emitter = new _fbemitter.EventEmitter();\n    return _this;\n  }\n\n  _createClass(ReactForm, [{\n    key: \"_convert\",\n    value: function _convert(answers) {\n      if (Array.isArray(answers)) {\n        var result = {};\n        answers.forEach(function (x) {\n          if (x.name.indexOf('tags_') > -1) {\n            result[x.name] = x.value.map(function (y) {\n              return y.value;\n            });\n          } else {\n            result[x.name] = x.value;\n          }\n        });\n        return result;\n      }\n\n      return answers;\n    }\n  }, {\n    key: \"_getDefaultValue\",\n    value: function _getDefaultValue(item) {\n      return this.answerData[item.field_name];\n    }\n  }, {\n    key: \"_optionsDefaultValue\",\n    value: function _optionsDefaultValue(item) {\n      var _this2 = this;\n\n      var defaultValue = this._getDefaultValue(item);\n\n      if (defaultValue) {\n        return defaultValue;\n      }\n\n      var defaultChecked = [];\n      item.options.forEach(function (option) {\n        if (_this2.answerData[\"option_\".concat(option.key)]) {\n          defaultChecked.push(option.key);\n        }\n      });\n      return defaultChecked;\n    }\n  }, {\n    key: \"_getItemValue\",\n    value: function _getItemValue(item, ref) {\n      var $item = {\n        element: item.element,\n        value: ''\n      };\n\n      if (item.element === 'Rating') {\n        $item.value = ref.inputField.current.state.rating;\n      } else if (item.element === 'Tags') {\n        $item.value = ref.inputField.current.state.value;\n      } else if (item.element === 'DatePicker') {\n        $item.value = ref.state.value;\n      } else if (item.element === 'Camera') {\n        $item.value = ref.state.img ? ref.state.img.replace('data:image/png;base64,', '') : '';\n      } else if (ref && ref.inputField) {\n        $item = _reactDom[\"default\"].findDOMNode(ref.inputField.current);\n\n        if (typeof $item.value === 'string') {\n          $item.value = $item.value.trim();\n        }\n      }\n\n      return $item;\n    }\n  }, {\n    key: \"_isIncorrect\",\n    value: function _isIncorrect(item) {\n      var incorrect = false;\n\n      if (item.canHaveAnswer) {\n        var ref = this.inputs[item.field_name];\n\n        if (item.element === 'Checkboxes' || item.element === 'RadioButtons') {\n          item.options.forEach(function (option) {\n            var $option = _reactDom[\"default\"].findDOMNode(ref.options[\"child_ref_\".concat(option.key)]);\n\n            if (option.hasOwnProperty('correct') && !$option.checked || !option.hasOwnProperty('correct') && $option.checked) {\n              incorrect = true;\n            }\n          });\n        } else {\n          var $item = this._getItemValue(item, ref);\n\n          if (item.element === 'Rating') {\n            if ($item.value.toString() !== item.correct) {\n              incorrect = true;\n            }\n          } else if ($item.value.toLowerCase() !== item.correct.trim().toLowerCase()) {\n            incorrect = true;\n          }\n        }\n      }\n\n      return incorrect;\n    }\n  }, {\n    key: \"_isInvalid\",\n    value: function _isInvalid(item) {\n      var invalid = false;\n\n      if (item.required === true) {\n        var ref = this.inputs[item.field_name];\n\n        if (item.element === 'Checkboxes' || item.element === 'RadioButtons') {\n          var checked_options = 0;\n          item.options.forEach(function (option) {\n            var $option = _reactDom[\"default\"].findDOMNode(ref.options[\"child_ref_\".concat(option.key)]);\n\n            if ($option.checked) {\n              checked_options += 1;\n            }\n          });\n\n          if (checked_options < 1) {\n            // errors.push(item.label + ' is required!');\n            invalid = true;\n          }\n        } else {\n          var $item = this._getItemValue(item, ref);\n\n          if (item.element === 'Rating') {\n            if ($item.value === 0) {\n              invalid = true;\n            }\n          } else if ($item.value === undefined || $item.value.length < 1) {\n            invalid = true;\n          }\n        }\n      }\n\n      return invalid;\n    }\n  }, {\n    key: \"_collect\",\n    value: function _collect(item) {\n      var itemData = {\n        name: item.field_name\n      };\n      var ref = this.inputs[item.field_name];\n\n      if (item.element === 'Checkboxes' || item.element === 'RadioButtons') {\n        var checked_options = [];\n        item.options.forEach(function (option) {\n          var $option = _reactDom[\"default\"].findDOMNode(ref.options[\"child_ref_\".concat(option.key)]);\n\n          if ($option.checked) {\n            checked_options.push(option.key);\n          }\n        });\n        itemData.value = checked_options;\n      } else {\n        if (!ref) return null;\n        itemData.value = this._getItemValue(item, ref).value;\n      }\n\n      return itemData;\n    }\n  }, {\n    key: \"_collectFormData\",\n    value: function _collectFormData(data) {\n      var _this3 = this;\n\n      var formData = [];\n      data.forEach(function (item) {\n        var item_data = _this3._collect(item);\n\n        if (item_data) {\n          formData.push(item_data);\n        }\n      });\n      return formData;\n    }\n  }, {\n    key: \"_getSignatureImg\",\n    value: function _getSignatureImg(item) {\n      var ref = this.inputs[item.field_name];\n      var $canvas_sig = ref.canvas.current;\n\n      if ($canvas_sig) {\n        var base64 = $canvas_sig.toDataURL().replace('data:image/png;base64,', '');\n        var isEmpty = $canvas_sig.isEmpty();\n\n        var $input_sig = _reactDom[\"default\"].findDOMNode(ref.inputField.current);\n\n        if (isEmpty) {\n          $input_sig.value = '';\n        } else {\n          $input_sig.value = base64;\n        }\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var errors = [];\n\n      if (!this.props.skip_validations) {\n        errors = this.validateForm(); // Publish errors, if any.\n\n        this.emitter.emit('formValidation', errors);\n      } // Only submit if there are no errors.\n\n\n      if (errors.length < 1) {\n        var onSubmit = this.props.onSubmit;\n\n        if (onSubmit) {\n          var data = this._collectFormData(this.props.data);\n\n          onSubmit(data);\n        } else {\n          var $form = _reactDom[\"default\"].findDOMNode(this.form);\n\n          $form.submit();\n        }\n      }\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this4 = this;\n\n      var errors = [];\n      var data_items = this.props.data;\n\n      if (this.props.display_short) {\n        data_items = this.props.data.filter(function (i) {\n          return i.alternateForm === true;\n        });\n      }\n\n      data_items.forEach(function (item) {\n        if (item.element === 'Signature') {\n          _this4._getSignatureImg(item);\n        }\n\n        if (_this4._isInvalid(item)) {\n          errors.push(\"\".concat(item.label, \" is required!\"));\n        }\n\n        if (_this4.props.validateForCorrectness && _this4._isIncorrect(item)) {\n          errors.push(\"\".concat(item.label, \" was answered incorrectly!\"));\n        }\n      });\n      return errors;\n    }\n  }, {\n    key: \"getInputElement\",\n    value: function getInputElement(item) {\n      var _this5 = this;\n\n      var Input = _formElements[\"default\"][item.element];\n      return /*#__PURE__*/_react[\"default\"].createElement(Input, {\n        handleChange: this.handleChange,\n        ref: function ref(c) {\n          return _this5.inputs[item.field_name] = c;\n        },\n        mutable: true,\n        key: \"form_\".concat(item.id),\n        data: item,\n        read_only: this.props.read_only,\n        defaultValue: this._getDefaultValue(item)\n      });\n    }\n  }, {\n    key: \"getSimpleElement\",\n    value: function getSimpleElement(item) {\n      var Element = _formElements[\"default\"][item.element];\n      return /*#__PURE__*/_react[\"default\"].createElement(Element, {\n        mutable: true,\n        key: \"form_\".concat(item.id),\n        data: item\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var data_items = this.props.data;\n\n      if (this.props.display_short) {\n        data_items = this.props.data.filter(function (i) {\n          return i.alternateForm === true;\n        });\n      }\n\n      data_items.forEach(function (item) {\n        if (item && item.readOnly && item.variableKey && _this6.props.variables[item.variableKey]) {\n          _this6.answerData[item.field_name] = _this6.props.variables[item.variableKey];\n        }\n      });\n      var items = data_items.map(function (item) {\n        if (!item) return null;\n\n        switch (item.element) {\n          case 'TextInput':\n          case 'NumberInput':\n          case 'TextArea':\n          case 'Dropdown':\n          case 'DatePicker':\n          case 'RadioButtons':\n          case 'Rating':\n          case 'Tags':\n          case 'Range':\n            return _this6.getInputElement(item);\n\n          case 'Signature':\n            return /*#__PURE__*/_react[\"default\"].createElement(Signature, {\n              ref: function ref(c) {\n                return _this6.inputs[item.field_name] = c;\n              },\n              read_only: _this6.props.read_only || item.readOnly,\n              mutable: true,\n              key: \"form_\".concat(item.id),\n              data: item,\n              defaultValue: _this6._getDefaultValue(item)\n            });\n\n          case 'Checkboxes':\n            return /*#__PURE__*/_react[\"default\"].createElement(Checkboxes, {\n              ref: function ref(c) {\n                return _this6.inputs[item.field_name] = c;\n              },\n              read_only: _this6.props.read_only,\n              handleChange: _this6.handleChange,\n              mutable: true,\n              key: \"form_\".concat(item.id),\n              data: item,\n              defaultValue: _this6._optionsDefaultValue(item)\n            });\n\n          case 'Image':\n            return /*#__PURE__*/_react[\"default\"].createElement(Image, {\n              ref: function ref(c) {\n                return _this6.inputs[item.field_name] = c;\n              },\n              handleChange: _this6.handleChange,\n              mutable: true,\n              key: \"form_\".concat(item.id),\n              data: item,\n              defaultValue: _this6._getDefaultValue(item)\n            });\n\n          case 'Download':\n            return /*#__PURE__*/_react[\"default\"].createElement(Download, {\n              download_path: _this6.props.download_path,\n              mutable: true,\n              key: \"form_\".concat(item.id),\n              data: item\n            });\n\n          case 'Camera':\n            return /*#__PURE__*/_react[\"default\"].createElement(Camera, {\n              ref: function ref(c) {\n                return _this6.inputs[item.field_name] = c;\n              },\n              read_only: _this6.props.read_only || item.readOnly,\n              mutable: true,\n              key: \"form_\".concat(item.id),\n              data: item,\n              defaultValue: _this6._getDefaultValue(item)\n            });\n\n          default:\n            return _this6.getSimpleElement(item);\n        }\n      });\n      var formTokenStyle = {\n        display: 'none'\n      };\n      var actionName = this.props.action_name ? this.props.action_name : 'Submit';\n      var backName = this.props.back_name ? this.props.back_name : 'Cancel';\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_formValidator[\"default\"], {\n        emitter: this.emitter\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"react-form-builder-form\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        ref: function ref(c) {\n          return _this6.form = c;\n        },\n        action: this.props.form_action,\n        onSubmit: this.handleSubmit.bind(this),\n        method: this.props.form_method\n      }, this.props.authenticity_token && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: formTokenStyle\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        name: \"utf8\",\n        type: \"hidden\",\n        value: \"\\u2713\"\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        name: \"authenticity_token\",\n        type: \"hidden\",\n        value: this.props.authenticity_token\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        name: \"task_id\",\n        type: \"hidden\",\n        value: this.props.task_id\n      })), items, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"btn-toolbar\"\n      }, !this.props.hide_actions && /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-school btn-big btn-agree\",\n        value: actionName\n      }), !this.props.hide_actions && this.props.back_action && /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n        href: this.props.back_action,\n        className: \"btn btn-default btn-cancel btn-big\"\n      }, backName)))));\n    }\n  }]);\n\n  return ReactForm;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = ReactForm;\nReactForm.defaultProps = {\n  validateForCorrectness: false\n};","map":null,"metadata":{},"sourceType":"script"}