{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _FormBuilder = require('./FormBuilder');\n\nvar _FormBuilder2 = _interopRequireDefault(_FormBuilder);\n\nvar _set2 = require('lodash/set');\n\nvar _set3 = _interopRequireDefault(_set2);\n\nvar _cloneDeep2 = require('lodash/cloneDeep');\n\nvar _cloneDeep3 = _interopRequireDefault(_cloneDeep2);\n\nvar _camelCase2 = require('lodash/camelCase');\n\nvar _camelCase3 = _interopRequireDefault(_camelCase2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar FormEdit = function (_Component) {\n  _inherits(FormEdit, _Component);\n\n  function FormEdit(props) {\n    _classCallCheck(this, FormEdit);\n\n    var _this = _possibleConstructorReturn(this, (FormEdit.__proto__ || Object.getPrototypeOf(FormEdit)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var form = props.form;\n    _this.state = {\n      form: form ? (0, _cloneDeep3.default)(form) : {\n        title: '',\n        name: '',\n        path: '',\n        display: 'form',\n        type: 'form',\n        components: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(FormEdit, [{\n    key: 'saveForm',\n    value: function saveForm() {\n      if (this.props.saveForm && typeof this.props.saveForm === 'function') {\n        this.props.saveForm(this.state.form);\n      }\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(path, event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState(function (prev) {\n        var form = (0, _cloneDeep3.default)(prev.form);\n        (0, _set3.default)(form, path, value); // If setting title, autogenerate name and path as well.\n\n        if (path === 'title' && !form._id) {\n          form.name = (0, _camelCase3.default)(value);\n          form.path = (0, _camelCase3.default)(value).toLowerCase();\n        }\n\n        return _extends({}, prev, {\n          form: form\n        });\n      });\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      // Only update if key form info has changed. The builder handles form component changes itself.\n      return this.state.form.title !== nextState.form.title || this.state.form.name !== nextState.form.name || this.state.form.path !== nextState.form.path || this.state.form.display !== nextState.form.display || this.state.form.type !== nextState.form.type;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var form = this.state.form;\n      var saveText = this.props.saveText;\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', {\n        className: 'row'\n      }, _react2.default.createElement('div', {\n        className: 'col-lg-2 col-md-4 col-sm-4'\n      }, _react2.default.createElement('div', {\n        id: 'form-group-title',\n        className: 'form-group'\n      }, _react2.default.createElement('label', {\n        htmlFor: 'title',\n        className: 'control-label field-required'\n      }, 'Title'), _react2.default.createElement('input', {\n        type: 'text',\n        className: 'form-control',\n        id: 'title',\n        placeholder: 'Enter the form title',\n        value: form.title || '',\n        onChange: function onChange(event) {\n          return _this2.handleChange('title', event);\n        }\n      }))), _react2.default.createElement('div', {\n        className: 'col-lg-2 col-md-4 col-sm-4'\n      }, _react2.default.createElement('div', {\n        id: 'form-group-name',\n        className: 'form-group'\n      }, _react2.default.createElement('label', {\n        htmlFor: 'name',\n        className: 'control-label field-required'\n      }, 'Name'), _react2.default.createElement('input', {\n        type: 'text',\n        className: 'form-control',\n        id: 'name',\n        placeholder: 'Enter the form machine name',\n        value: form.name || '',\n        onChange: function onChange(event) {\n          return _this2.handleChange('name', event);\n        }\n      }))), _react2.default.createElement('div', {\n        className: 'col-lg-2 col-md-3 col-sm-3'\n      }, _react2.default.createElement('div', {\n        id: 'form-group-display',\n        className: 'form-group'\n      }, _react2.default.createElement('label', {\n        htmlFor: 'name',\n        className: 'control-label'\n      }, 'Display as'), _react2.default.createElement('div', {\n        className: 'input-group'\n      }, _react2.default.createElement('select', {\n        className: 'form-control',\n        name: 'form-display',\n        id: 'form-display',\n        value: form.display || '',\n        onChange: function onChange(event) {\n          return _this2.handleChange('display', event);\n        }\n      }, _react2.default.createElement('option', {\n        label: 'Form',\n        value: 'form'\n      }, 'Form'), _react2.default.createElement('option', {\n        label: 'Wizard',\n        value: 'wizard'\n      }, 'Wizard'), _react2.default.createElement('option', {\n        label: 'PDF',\n        value: 'pdf'\n      }, 'PDF'))))), _react2.default.createElement('div', {\n        className: 'col-lg-2 col-md-3 col-sm-3'\n      }, _react2.default.createElement('div', {\n        id: 'form-group-type',\n        className: 'form-group'\n      }, _react2.default.createElement('label', {\n        htmlFor: 'form-type',\n        className: 'control-label'\n      }, 'Type'), _react2.default.createElement('div', {\n        className: 'input-group'\n      }, _react2.default.createElement('select', {\n        className: 'form-control',\n        name: 'form-type',\n        id: 'form-type',\n        value: this.state.form.type,\n        onChange: function onChange(event) {\n          return _this2.handleChange('type', event);\n        }\n      }, _react2.default.createElement('option', {\n        label: 'Form',\n        value: 'form'\n      }, 'Form'), _react2.default.createElement('option', {\n        label: 'Resource',\n        value: 'resource'\n      }, 'Resource'))))), _react2.default.createElement('div', {\n        className: 'col-lg-2 col-md-4 col-sm-4'\n      }, _react2.default.createElement('div', {\n        id: 'form-group-path',\n        className: 'form-group'\n      }, _react2.default.createElement('label', {\n        htmlFor: 'path',\n        className: 'control-label field-required'\n      }, 'Path'), _react2.default.createElement('div', {\n        className: 'input-group'\n      }, _react2.default.createElement('input', {\n        type: 'text',\n        className: 'form-control',\n        id: 'path',\n        placeholder: 'example',\n        style: {\n          'textTransform': 'lowercase',\n          width: '120px'\n        },\n        value: form.path || '',\n        onChange: function onChange(event) {\n          return _this2.handleChange('path', event);\n        }\n      })))), _react2.default.createElement('div', {\n        id: 'save-buttons',\n        className: 'col-lg-2 col-md-5 col-sm-5 save-buttons pull-right'\n      }, _react2.default.createElement('div', {\n        className: 'form-group pull-right'\n      }, _react2.default.createElement('span', {\n        className: 'btn btn-primary',\n        onClick: function onClick() {\n          return _this2.saveForm();\n        }\n      }, saveText)))), _react2.default.createElement(_FormBuilder2.default, {\n        key: form._id,\n        form: form,\n        options: this.props.options,\n        builder: this.props.builder,\n        onChange: this.formChange\n      }));\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.form && (prevState.form._id !== nextProps.form._id || prevState.form.modified !== nextProps.form.modified)) {\n        return {\n          form: (0, _cloneDeep3.default)(nextProps.form)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return FormEdit;\n}(_react.Component);\n\nFormEdit.propTypes = {\n  form: _propTypes2.default.object.isRequired,\n  options: _propTypes2.default.object,\n  builder: _propTypes2.default.any,\n  onSave: _propTypes2.default.func\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.formChange = function (form) {\n    _this3.setState({\n      form: _extends({}, _this3.state.form, form)\n    });\n  };\n};\n\nexports.default = FormEdit;","map":null,"metadata":{},"sourceType":"script"}