{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nvar _utils = require(\"../../utils/utils\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _fetchPonyfill2 = _interopRequireDefault(require(\"fetch-ponyfill\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _fetchPonyfill = (0, _fetchPonyfill2.default)({\n  Promise: _nativePromiseOnly.default\n}),\n    fetch = _fetchPonyfill.fetch,\n    Headers = _fetchPonyfill.Headers,\n    Request = _fetchPonyfill.Request;\n\nvar Rule = require('./Rule');\n\nmodule.exports = /*#__PURE__*/function (_Rule) {\n  _inherits(Select, _Rule);\n\n  var _super = _createSuper(Select);\n\n  function Select() {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultMessage\", '{{field}} contains an invalid selection');\n\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"check\",\n    value: function check(value, data, row, async) {\n      // Skip if value is empty\n      if (!value || _lodash.default.isEmpty(value)) {\n        return true;\n      } // Skip if we're not async-capable\n\n\n      if (!async) {\n        return true;\n      }\n\n      var schema = this.component.component; // Initialize the request options\n\n      var requestOptions = {\n        url: this.settings.url,\n        method: 'GET',\n        qs: {},\n        json: true,\n        headers: {}\n      }; // If the url is a boolean value\n\n      if (_lodash.default.isBoolean(requestOptions.url)) {\n        requestOptions.url = !!requestOptions.url;\n\n        if (!requestOptions.url || schema.dataSrc !== 'url' || !schema.data.url || !schema.searchField) {\n          return true;\n        } // Get the validation url\n\n\n        requestOptions.url = schema.data.url; // Add the search field\n\n        requestOptions.qs[schema.searchField] = value; // Add the filters\n\n        if (schema.filter) {\n          requestOptions.url += (!requestOptions.url.includes('?') ? '?' : '&') + schema.filter;\n        } // If they only wish to return certain fields.\n\n\n        if (schema.selectFields) {\n          requestOptions.qs.select = schema.selectFields;\n        }\n      }\n\n      if (!requestOptions.url) {\n        return true;\n      } // Make sure to interpolate.\n\n\n      requestOptions.url = (0, _utils.interpolate)(requestOptions.url, {\n        data: this.component.data\n      }); // Add query string to URL\n\n      requestOptions.url += (requestOptions.url.includes('?') ? '&' : '?') + _lodash.default.chain(requestOptions.qs).map(function (val, key) {\n        return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(val));\n      }).join('&').value(); // Set custom headers.\n\n      if (schema.data && schema.data.headers) {\n        _lodash.default.each(schema.data.headers, function (header) {\n          if (header.key) {\n            requestOptions.headers[header.key] = header.value;\n          }\n        });\n      } // Set form.io authentication.\n\n\n      if (schema.authenticate && this.config.token) {\n        requestOptions.headers['x-jwt-token'] = this.config.token;\n      }\n\n      return fetch(new Request(requestOptions.url, {\n        headers: new Headers(requestOptions.headers)\n      })).then(function (response) {\n        if (!response.ok) {\n          return false;\n        }\n\n        return response.json();\n      }).then(function (results) {\n        return results && results.length;\n      }).catch(function () {\n        return false;\n      });\n    }\n  }]);\n\n  return Select;\n}(Rule);","map":null,"metadata":{},"sourceType":"script"}