{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.repeat\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _vanillaTextMask = require(\"@formio/vanilla-text-mask\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _textMaskAddons = require(\"text-mask-addons\");\n\nvar _Input2 = _interopRequireDefault(require(\"../_classes/input/Input\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar NumberComponent = /*#__PURE__*/function (_Input) {\n  _inherits(NumberComponent, _Input);\n\n  var _super = _createSuper(NumberComponent);\n\n  function NumberComponent() {\n    var _this$options$propert;\n\n    var _this;\n\n    _classCallCheck(this, NumberComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.validators = _this.validators.concat(['min', 'max']);\n    var separators = (0, _utils.getNumberSeparators)(_this.options.language || navigator.language);\n    _this.decimalSeparator = _this.options.decimalSeparator = _this.options.decimalSeparator || ((_this$options$propert = _this.options.properties) === null || _this$options$propert === void 0 ? void 0 : _this$options$propert.decimalSeparator) || separators.decimalSeparator;\n\n    if (_this.component.delimiter) {\n      var _this$options$propert2;\n\n      if (_this.options.hasOwnProperty('thousandsSeparator')) {\n        console.warn(\"Property 'thousandsSeparator' is deprecated. Please use i18n to specify delimiter.\");\n      }\n\n      _this.delimiter = ((_this$options$propert2 = _this.options.properties) === null || _this$options$propert2 === void 0 ? void 0 : _this$options$propert2.thousandsSeparator) || _this.options.thousandsSeparator || separators.delimiter;\n    } else {\n      _this.delimiter = '';\n    }\n\n    var requireDecimal = _lodash.default.get(_this.component, 'requireDecimal', false);\n\n    _this.decimalLimit = (0, _utils.getNumberDecimalLimit)(_this.component, requireDecimal ? 2 : 20); // Currencies to override BrowserLanguage Config. Object key {}\n\n    if (_lodash.default.has(_this.options, \"languageOverride.\".concat(_this.options.language))) {\n      var override = _lodash.default.get(_this.options, \"languageOverride.\".concat(_this.options.language));\n\n      _this.decimalSeparator = override.decimalSeparator;\n      _this.delimiter = override.delimiter;\n    }\n\n    _this.numberMask = _this.createNumberMask();\n    return _this;\n  }\n  /**\n   * Creates the number mask for normal numbers.\n   *\n   * @return {*}\n   */\n\n\n  _createClass(NumberComponent, [{\n    key: \"createNumberMask\",\n    value: function createNumberMask() {\n      return (0, _textMaskAddons.createNumberMask)({\n        prefix: '',\n        suffix: '',\n        requireDecimal: _lodash.default.get(this.component, 'requireDecimal', false),\n        thousandsSeparatorSymbol: _lodash.default.get(this.component, 'thousandsSeparator', this.delimiter),\n        decimalSymbol: _lodash.default.get(this.component, 'decimalSymbol', this.decimalSeparator),\n        decimalLimit: _lodash.default.get(this.component, 'decimalLimit', this.decimalLimit),\n        allowNegative: _lodash.default.get(this.component, 'allowNegative', true),\n        allowDecimal: this.isDecimalAllowed()\n      });\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return NumberComponent.schema();\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var defaultValue = _get(_getPrototypeOf(NumberComponent.prototype), \"defaultValue\", this);\n\n      if (!defaultValue && this.component.defaultValue === 0) {\n        defaultValue = this.component.defaultValue;\n      }\n\n      if (!this.component.multiple && _lodash.default.isArray(defaultValue)) {\n        defaultValue = !defaultValue[0] && defaultValue[0] !== 0 ? null : defaultValue[0];\n      }\n\n      return defaultValue;\n    }\n  }, {\n    key: \"isDecimalAllowed\",\n    value: function isDecimalAllowed() {\n      return _lodash.default.get(this.component, 'allowDecimal', !(this.component.validate && this.component.validate.integer));\n    }\n  }, {\n    key: \"parseNumber\",\n    value: function parseNumber(value) {\n      // Remove delimiters and convert decimal separator to dot.\n      value = value.split(this.delimiter).join('').replace(this.decimalSeparator, '.');\n\n      if (this.component.validate && this.component.validate.integer) {\n        return parseInt(value, 10);\n      } else {\n        return parseFloat(value);\n      }\n    }\n  }, {\n    key: \"setInputMask\",\n    value: function setInputMask(input) {\n      var numberPattern = '[0-9';\n      numberPattern += this.decimalSeparator || '';\n      numberPattern += this.delimiter || '';\n      numberPattern += ']*';\n      input.setAttribute('pattern', numberPattern);\n      input.mask = (0, _vanillaTextMask.maskInput)({\n        inputElement: input,\n        mask: this.numberMask,\n        shadowRoot: this.root ? this.root.shadowRoot : null\n      });\n    }\n  }, {\n    key: \"inputInfo\",\n    get: function get() {\n      var info = _get(_getPrototypeOf(NumberComponent.prototype), \"inputInfo\", this);\n\n      if (this.component.mask) {\n        info.attr.type = 'password';\n      } else {\n        info.attr.type = 'text';\n      }\n\n      info.attr.inputmode = this.isDecimalAllowed() ? 'decimal' : 'numeric';\n      info.changeEvent = 'input';\n      return info;\n    }\n  }, {\n    key: \"getValueAt\",\n    value: function getValueAt(index) {\n      if (!this.refs.input.length || !this.refs.input[index]) {\n        return null;\n      }\n\n      var val = this.refs.input[index].value;\n      return val && val !== '-_' ? this.parseNumber(val) : null;\n    }\n  }, {\n    key: \"setValueAt\",\n    value: function setValueAt(index, value) {\n      var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _get(_getPrototypeOf(NumberComponent.prototype), \"setValueAt\", this).call(this, index, this.formatValue(this.parseValue(value)), flags);\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(input) {\n      if (typeof input === 'string') {\n        input = input.split(this.delimiter).join('').replace(this.decimalSeparator, '.');\n      }\n\n      var value = parseFloat(input);\n\n      if (!_lodash.default.isNaN(value)) {\n        value = String(value).replace('.', this.decimalSeparator);\n      } else {\n        value = null;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value) {\n      if (this.component.requireDecimal && value && !value.includes(this.decimalSeparator)) {\n        return \"\".concat(value).concat(this.decimalSeparator).concat(_lodash.default.repeat('0', this.decimalLimit));\n      } else if (this.component.requireDecimal && value && value.includes(this.decimalSeparator)) {\n        return \"\".concat(value).concat(_lodash.default.repeat('0', this.decimalLimit - value.split(this.decimalSeparator)[1].length));\n      }\n\n      return value;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var input = this.refs.input[0];\n\n      if (input) {\n        _get(_getPrototypeOf(NumberComponent.prototype), \"focus\", this).call(this);\n\n        input.setSelectionRange(0, input.value.length);\n      }\n    }\n  }, {\n    key: \"getMaskedValue\",\n    value: function getMaskedValue(value) {\n      value = value === null ? '0' : value.toString();\n\n      if (value.includes('.') && '.' !== this.decimalSeparator) {\n        value = value.replace('.', this.decimalSeparator);\n      }\n\n      return (0, _vanillaTextMask.conformToMask)(this.formatValue(value), this.numberMask).conformedValue;\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value, options) {\n      if (!value && value !== 0) {\n        return '';\n      }\n\n      value = this.getWidgetValueAsString(value, options);\n\n      if (Array.isArray(value)) {\n        return value.map(this.getMaskedValue).join(', ');\n      }\n\n      return this.getMaskedValue(value);\n    }\n  }, {\n    key: \"addFocusBlurEvents\",\n    value: function addFocusBlurEvents(element) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(NumberComponent.prototype), \"addFocusBlurEvents\", this).call(this, element);\n\n      this.addEventListener(element, 'blur', function () {\n        element.value = _this2.getValueAsString(_this2.formatValue(_this2.parseValue(element.value)));\n      });\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len2 = arguments.length, extend = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        extend[_key2] = arguments[_key2];\n      }\n\n      return _Input2.default.schema.apply(_Input2.default, [{\n        type: 'number',\n        label: 'Number',\n        key: 'number',\n        validate: {\n          min: '',\n          max: '',\n          step: 'any',\n          integer: ''\n        }\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Number',\n        icon: 'hashtag',\n        group: 'basic',\n        documentation: '/userguide/#number',\n        weight: 30,\n        schema: NumberComponent.schema()\n      };\n    }\n  }]);\n\n  return NumberComponent;\n}(_Input2.default);\n\nexports.default = NumberComponent;","map":null,"metadata":{},"sourceType":"script"}