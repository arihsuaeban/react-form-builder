{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.trim\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleAddressProvider = void 0;\n\nvar _Formio = require(\"../../Formio\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _AddressProvider2 = require(\"./AddressProvider\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar GoogleAddressProvider = /*#__PURE__*/function (_AddressProvider) {\n  _inherits(GoogleAddressProvider, _AddressProvider);\n\n  var _super = _createSuper(GoogleAddressProvider);\n\n  function GoogleAddressProvider() {\n    var _options$params;\n\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, GoogleAddressProvider);\n\n    _this = _super.call(this, options);\n\n    _this.setAutocompleteOptions();\n\n    var src = 'https://maps.googleapis.com/maps/api/js?v=quarterly&libraries=places&callback=googleMapsCallback';\n\n    if ((_options$params = options.params) !== null && _options$params !== void 0 && _options$params.key) {\n      src += \"&key=\".concat(options.params.key);\n    }\n\n    _Formio.GlobalFormio.requireLibrary(_this.getLibraryName(), 'google.maps.places', src);\n\n    return _this;\n  }\n\n  _createClass(GoogleAddressProvider, [{\n    key: \"displayValueProperty\",\n    get: function get() {\n      return 'formattedPlace';\n    }\n  }, {\n    key: \"alternativeDisplayValueProperty\",\n    get: function get() {\n      return 'formatted_address';\n    }\n  }, {\n    key: \"autocompleteOptions\",\n    get: function get() {\n      return this._autocompleteOptions;\n    },\n    set: function set(options) {\n      this._autocompleteOptions = options;\n    }\n  }, {\n    key: \"setAutocompleteOptions\",\n    value: function setAutocompleteOptions() {\n      var options = _lodash.default.get(this.options, 'params.autocompleteOptions', {});\n\n      if (!_lodash.default.isObject(options)) {\n        options = {};\n      }\n\n      this.addRequiredProviderOptions(options);\n      this.autocompleteOptions = options;\n    }\n  }, {\n    key: \"beforeMergeOptions\",\n    value: function beforeMergeOptions(options) {\n      // providing support of old Google Provider option\n      this.convertRegionToAutocompleteOption(options);\n    }\n  }, {\n    key: \"getLibraryName\",\n    value: function getLibraryName() {\n      return 'googleMaps';\n    }\n  }, {\n    key: \"convertRegionToAutocompleteOption\",\n    value: function convertRegionToAutocompleteOption(options) {\n      var providerOptions = options;\n\n      var region = _lodash.default.get(providerOptions, 'params.region', '');\n\n      if (region && !_lodash.default.has(options, 'params.autocompleteOptions')) {\n        region = region.toUpperCase().trim(); // providing compatibility with ISO 3166-1 Alpha-2 county codes (for checking compatibility https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)\n\n        var countryCodes = {\n          'UK': 'GB'\n        };\n\n        if (countryCodes[region]) {\n          region = countryCodes[region];\n        }\n\n        _lodash.default.set(providerOptions, 'params.autocompleteOptions.componentRestrictions.country', [region]);\n      }\n    }\n  }, {\n    key: \"getRequiredAddressProperties\",\n    value: function getRequiredAddressProperties() {\n      return ['address_components', 'formatted_address', 'geometry', 'place_id', 'plus_code', 'types'];\n    }\n  }, {\n    key: \"addRequiredProviderOptions\",\n    value: function addRequiredProviderOptions(options) {\n      var addressProperties = this.getRequiredAddressProperties();\n\n      if (_lodash.default.isArray(options.fields) && options.fields.length > 0) {\n        options.fields.forEach(function (optionalField) {\n          if (!addressProperties.some(function (addressProp) {\n            return optionalField === addressProp;\n          })) {\n            addressProperties.push(optionalField);\n          }\n        });\n      }\n\n      options.fields = addressProperties;\n    }\n  }, {\n    key: \"filterPlace\",\n    value: function filterPlace(place) {\n      place = place || {};\n      var filteredPlace = {};\n\n      if (this.autocompleteOptions) {\n        this.autocompleteOptions.fields.forEach(function (field) {\n          if (place[field]) {\n            filteredPlace[field] = place[field];\n          }\n        });\n      }\n\n      return filteredPlace;\n    }\n  }, {\n    key: \"attachAutocomplete\",\n    value: function attachAutocomplete(elem, index, onSelectAddress) {\n      var _this2 = this;\n\n      _Formio.GlobalFormio.libraryReady(this.getLibraryName()).then(function () {\n        var autocomplete = new google.maps.places.Autocomplete(elem, _this2.autocompleteOptions);\n        autocomplete.addListener('place_changed', function () {\n          var place = _this2.filterPlace(autocomplete.getPlace());\n\n          place.formattedPlace = _lodash.default.get(autocomplete, 'gm_accessors_.place.se.formattedPrediction', place[_this2.alternativeDisplayValueProperty]);\n          onSelectAddress(place, elem, index);\n        });\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      return _nativePromiseOnly.default.resolve();\n    }\n  }, {\n    key: \"makeRequest\",\n    value: function makeRequest() {\n      return _nativePromiseOnly.default.resolve();\n    }\n  }, {\n    key: \"getDisplayValue\",\n    value: function getDisplayValue(address) {\n      var displayedProperty = _lodash.default.has(address, this.displayValueProperty) ? this.displayValueProperty : this.alternativeDisplayValueProperty;\n      return _lodash.default.get(address, displayedProperty, '');\n    }\n  }], [{\n    key: \"name\",\n    get: function get() {\n      return 'google';\n    }\n  }, {\n    key: \"displayName\",\n    get: function get() {\n      return 'Google Maps';\n    }\n  }]);\n\n  return GoogleAddressProvider;\n}(_AddressProvider2.AddressProvider);\n\nexports.GoogleAddressProvider = GoogleAddressProvider;","map":null,"metadata":{},"sourceType":"script"}