{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _isObject2 = require('lodash/isObject');\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _constants = require('../constants');\n\nvar _types = require('../types');\n\nvar _Pagination = require('./Pagination');\n\nvar _Pagination2 = _interopRequireDefault(_Pagination);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction normalizePageSize(pageSize) {\n  if ((0, _isObject3.default)(pageSize)) {\n    return pageSize;\n  }\n\n  if (pageSize === _types.AllItemsPerPage) {\n    return {\n      label: 'All',\n      value: 999999\n    };\n  }\n\n  return {\n    label: pageSize,\n    value: pageSize\n  };\n}\n\nvar renderPagination = function renderPagination(_ref) {\n  var pages = _ref.pages,\n      onPage = _ref.onPage;\n  return pages && onPage;\n};\n\nvar renderPageSizeSelector = function renderPageSizeSelector(_ref2) {\n  var pageSize = _ref2.pageSize,\n      pageSizes = _ref2.pageSizes,\n      onPageSizeChanged = _ref2.onPageSizeChanged;\n  return pageSize && pageSizes && pageSizes.length && onPageSizeChanged;\n};\n\nvar renderItemCounter = function renderItemCounter(_ref3) {\n  var firstItem = _ref3.firstItem,\n      lastItem = _ref3.lastItem,\n      total = _ref3.total;\n  return firstItem && lastItem && total;\n};\n\nvar renderFooter = function renderFooter(props) {\n  return renderPagination(props) || renderItemCounter(props);\n};\n\nfunction Grid(props) {\n  var Cell = props.Cell,\n      activePage = props.activePage,\n      columns = props.columns,\n      emptyText = props.emptyText,\n      firstItem = props.firstItem,\n      items = props.items,\n      lastItem = props.lastItem,\n      onAction = props.onAction,\n      onPage = props.onPage,\n      onPageSizeChanged = props.onPageSizeChanged,\n      onSort = props.onSort,\n      pageNeighbours = props.pageNeighbours,\n      pageSize = props.pageSize,\n      pageSizes = props.pageSizes,\n      pages = props.pages,\n      sortOrder = props.sortOrder,\n      total = props.total;\n  var normalizedPageSizes = pageSizes.map(normalizePageSize);\n  return _react2.default.createElement('div', null, items.length ? _react2.default.createElement('ul', {\n    className: 'list-group list-group-striped'\n  }, _react2.default.createElement('li', {\n    className: 'list-group-item list-group-header hidden-xs hidden-md'\n  }, _react2.default.createElement('div', {\n    className: 'row'\n  }, columns.map(function (column) {\n    var key = column.key,\n        _column$sort = column.sort,\n        sort = _column$sort === undefined ? false : _column$sort,\n        _column$title = column.title,\n        title = _column$title === undefined ? '' : _column$title,\n        width = column.width;\n    var className = 'col col-md-' + width;\n    var columnProps = {\n      key: key,\n      className: className\n    };\n\n    if (!title) {\n      return _react2.default.createElement('div', columnProps);\n    }\n\n    if (!sort) {\n      return _react2.default.createElement('div', columnProps, _react2.default.createElement('strong', null, title));\n    }\n\n    var sortKey = (0, _isString3.default)(sort) ? sort : key;\n    var ascSort = sortKey;\n    var descSort = '-' + sortKey;\n    var sortClass = '';\n\n    if (sortOrder === ascSort) {\n      sortClass = 'glyphicon glyphicon-triangle-top fa fa-caret-up';\n    } else if (sortOrder === descSort) {\n      sortClass = 'glyphicon glyphicon-triangle-bottom fa fa-caret-down';\n    }\n\n    return _react2.default.createElement('div', columnProps, _react2.default.createElement('span', {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        return onSort(column);\n      }\n    }, _react2.default.createElement('strong', null, title, ' ', _react2.default.createElement('span', {\n      className: sortClass\n    }))));\n  }))), items.map(function (item) {\n    return _react2.default.createElement('li', {\n      className: 'list-group-item',\n      key: item._id\n    }, _react2.default.createElement('div', {\n      className: 'row',\n      onClick: function onClick() {\n        return onAction(item, 'row');\n      }\n    }, columns.map(function (column) {\n      return _react2.default.createElement('div', {\n        key: column.key,\n        className: 'col col-md-' + column.width\n      }, _react2.default.createElement(Cell, {\n        row: item,\n        column: column\n      }));\n    })));\n  }), renderFooter(props) ? _react2.default.createElement('li', {\n    className: 'list-group-item'\n  }, _react2.default.createElement('div', {\n    className: 'row align-items-center'\n  }, renderPagination(props) ? _react2.default.createElement('div', {\n    className: 'col-auto'\n  }, _react2.default.createElement('div', {\n    className: 'row align-items-center'\n  }, _react2.default.createElement('div', {\n    className: 'col-auto'\n  }, _react2.default.createElement(_Pagination2.default, {\n    pages: pages,\n    activePage: activePage,\n    pageNeighbours: pageNeighbours,\n    prev: 'Previous',\n    next: 'Next',\n    onSelect: onPage\n  })), renderPageSizeSelector(props) ? _react2.default.createElement('div', {\n    className: 'col-auto'\n  }, _react2.default.createElement('div', {\n    className: 'row align-items-center'\n  }, _react2.default.createElement('div', {\n    className: 'col-auto'\n  }, _react2.default.createElement('select', {\n    className: 'form-control',\n    value: pageSize,\n    onChange: function onChange(event) {\n      return onPageSizeChanged(event.target.value);\n    }\n  }, normalizedPageSizes.map(function (_ref4) {\n    var label = _ref4.label,\n        value = _ref4.value;\n    return _react2.default.createElement('option', {\n      key: value,\n      value: value\n    }, label);\n  }))), _react2.default.createElement('span', {\n    className: 'col-auto'\n  }, 'items per page'))) : null)) : null, renderItemCounter(props) ? _react2.default.createElement('div', {\n    className: 'col-auto ml-auto'\n  }, _react2.default.createElement('span', {\n    className: 'item-counter pull-right'\n  }, _react2.default.createElement('span', {\n    className: 'page-num'\n  }, firstItem, ' - ', lastItem), ' / ', total, ' total')) : null)) : null) : _react2.default.createElement('div', null, emptyText));\n}\n\nGrid.propTypes = {\n  Cell: _propTypes2.default.func,\n  activePage: _propTypes2.default.number,\n  columns: _propTypes2.default.array.isRequired,\n  emptyText: _propTypes2.default.string,\n  firstItem: _propTypes2.default.number,\n  items: _propTypes2.default.array.isRequired,\n  lastItem: _propTypes2.default.number,\n  onAction: _propTypes2.default.func,\n  onPage: _propTypes2.default.func,\n  onPageSizeChanged: _propTypes2.default.func,\n  onSort: _propTypes2.default.func,\n  pageNeighbours: _propTypes2.default.number,\n  pageSize: _propTypes2.default.number,\n  pageSizes: _types.PageSizes,\n  pages: _propTypes2.default.number,\n  sortOrder: _propTypes2.default.string,\n  total: _propTypes2.default.number\n};\nGrid.defaultProps = {\n  Cell: function Cell(_ref5) {\n    var column = _ref5.column,\n        row = _ref5.row;\n    return _react2.default.createElement('span', null, (0, _get3.default)(row, column.key, ''));\n  },\n  activePage: 1,\n  emptyText: 'No data found',\n  firstItem: 0,\n  lastItem: 0,\n  onAction: function onAction() {},\n  onPage: function onPage() {},\n  onPageSizeChanged: function onPageSizeChanged() {},\n  onSort: function onSort() {},\n  pageNeighbours: 1,\n  pageSize: 0,\n  pageSizes: _constants.defaultPageSizes,\n  pages: 0,\n  sortOrder: '',\n  total: 0\n};\nexports.default = Grid;","map":null,"metadata":{},"sourceType":"script"}