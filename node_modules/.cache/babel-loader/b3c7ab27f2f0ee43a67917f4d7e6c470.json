{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _components = require('formiojs/components');\n\nvar _components2 = _interopRequireDefault(_components);\n\nvar _Components = require('formiojs/components/Components');\n\nvar _Components2 = _interopRequireDefault(_Components);\n\nvar _FormBuilder = require('formiojs/FormBuilder');\n\nvar _FormBuilder2 = _interopRequireDefault(_FormBuilder);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n_Components2.default.setComponents(_components2.default);\n\nvar FormBuilder = function (_Component) {\n  _inherits(FormBuilder, _Component);\n\n  function FormBuilder() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FormBuilder);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FormBuilder.__proto__ || Object.getPrototypeOf(FormBuilder)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return FormBuilder;\n}(_react.Component);\n\nFormBuilder.defaultProps = {\n  options: {},\n  Builder: _FormBuilder2.default\n};\nFormBuilder.propTypes = {\n  form: _propTypes2.default.object,\n  options: _propTypes2.default.object,\n  onSaveComponent: _propTypes2.default.func,\n  onUpdateComponent: _propTypes2.default.func,\n  onDeleteComponent: _propTypes2.default.func,\n  onCancelComponent: _propTypes2.default.func,\n  onEditComponent: _propTypes2.default.func,\n  Builder: _propTypes2.default.any\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.componentDidMount = function () {\n    _this2.initializeBuilder(_this2.props);\n  };\n\n  this.componentWillUnmount = function () {\n    if (_this2.builder !== undefined) {\n      _this2.builder.instance.destroy(true);\n    }\n  };\n\n  this.initializeBuilder = function (props) {\n    var options = Object.assign({}, props.options);\n    var form = Object.assign({}, props.form);\n    var Builder = props.Builder;\n\n    if (_this2.builder !== undefined) {\n      _this2.builder.instance.destroy(true);\n    }\n\n    _this2.builder = new Builder(_this2.element.firstChild, form, options);\n    _this2.builderReady = _this2.builder.ready;\n\n    _this2.builderReady.then(function () {\n      _this2.onChange();\n\n      _this2.builder.instance.on('saveComponent', _this2.emit('onSaveComponent'));\n\n      _this2.builder.instance.on('updateComponent', _this2.emit('onUpdateComponent'));\n\n      _this2.builder.instance.on('removeComponent', _this2.emit('onDeleteComponent'));\n\n      _this2.builder.instance.on('cancelComponent', _this2.emit('onCancelComponent'));\n\n      _this2.builder.instance.on('editComponent', _this2.emit('onEditComponent'));\n\n      _this2.builder.instance.on('addComponent', _this2.onChange);\n\n      _this2.builder.instance.on('saveComponent', _this2.onChange);\n\n      _this2.builder.instance.on('updateComponent', _this2.onChange);\n\n      _this2.builder.instance.on('removeComponent', _this2.onChange);\n\n      _this2.builder.instance.on('deleteComponent', _this2.onChange);\n\n      _this2.builder.instance.on('pdfUploaded', _this2.onChange);\n    });\n  };\n\n  this.componentWillReceiveProps = function (nextProps) {\n    var _props = _this2.props,\n        options = _props.options,\n        form = _props.form;\n\n    if (form.display !== nextProps.form.display || options !== nextProps.options || form.components !== nextProps.form.components) {\n      _this2.initializeBuilder(nextProps);\n    }\n  };\n\n  this.render = function () {\n    return _react2.default.createElement('div', {\n      ref: function ref(element) {\n        return _this2.element = element;\n      }\n    }, _react2.default.createElement('div', null));\n  };\n\n  this.onChange = function () {\n    if (_this2.props.hasOwnProperty('onChange') && typeof _this2.props.onChange === 'function') {\n      _this2.props.onChange(_this2.builder.instance.form);\n    }\n  };\n\n  this.emit = function (funcName) {\n    return function () {\n      if (_this2.props.hasOwnProperty(funcName) && typeof _this2.props[funcName] === 'function') {\n        var _props2;\n\n        (_props2 = _this2.props)[funcName].apply(_props2, arguments);\n      }\n    };\n  };\n};\n\nexports.default = FormBuilder;","map":null,"metadata":{},"sourceType":"script"}