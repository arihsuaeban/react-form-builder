{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _Element2 = _interopRequireDefault(require(\"../Element\"));\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar InputWidget = /*#__PURE__*/function (_Element) {\n  _inherits(InputWidget, _Element);\n\n  var _super = _createSuper(InputWidget);\n\n  function InputWidget(settings, component, instance, index) {\n    var _this;\n\n    _classCallCheck(this, InputWidget);\n\n    _this = _super.call(this, settings);\n    _this.valueIndex = index || 0;\n    _this.componentInstance = instance;\n    _this.namespace = 'formio.widget';\n    _this.component = component || {};\n    _this.settings = _lodash.default.merge({}, _this.defaultSettings, settings || {});\n    return _this;\n  }\n\n  _createClass(InputWidget, [{\n    key: \"attach\",\n    value: function attach(input) {\n      this._input = input;\n      return _nativePromiseOnly.default.resolve();\n    }\n  }, {\n    key: \"defaultSettings\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"disabled\",\n    set: function set(disabled) {\n      if (disabled) {\n        this._input.setAttribute('disabled', 'disabled');\n      } else {\n        this._input.removeAttribute('disabled');\n      }\n    }\n  }, {\n    key: \"input\",\n    get: function get() {\n      return this._input;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this._input.value;\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value) {\n      return value;\n    }\n  }, {\n    key: \"validationValue\",\n    value: function validationValue(value) {\n      return value;\n    }\n  }, {\n    key: \"addPrefix\",\n    value: function addPrefix() {\n      return null;\n    }\n  }, {\n    key: \"addSuffix\",\n    value: function addSuffix() {\n      return null;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this._input.value = value;\n    }\n  }], [{\n    key: \"defaultSettings\",\n    get: function get() {\n      return {\n        type: 'input'\n      };\n    }\n  }]);\n\n  return InputWidget;\n}(_Element2.default);\n\nexports.default = InputWidget;","map":null,"metadata":{},"sourceType":"script"}