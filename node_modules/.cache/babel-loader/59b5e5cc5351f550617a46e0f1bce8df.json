{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactTextareaAutosize = _interopRequireDefault(require(\"react-textarea-autosize\"));\n\nvar _draftJs = require(\"draft-js\");\n\nvar _draftjsToHtml = _interopRequireDefault(require(\"draftjs-to-html\"));\n\nvar _reactDraftWysiwyg = require(\"react-draft-wysiwyg\");\n\nvar _dynamicOptionList = _interopRequireDefault(require(\"./dynamic-option-list\"));\n\nvar _requests = require(\"./stores/requests\");\n\nvar _UUID = _interopRequireDefault(require(\"./UUID\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar toolbar = {\n  options: ['inline', 'list', 'textAlign', 'fontSize', 'link', 'history'],\n  inline: {\n    inDropdown: false,\n    className: undefined,\n    options: ['bold', 'italic', 'underline', 'superscript', 'subscript']\n  }\n};\n\nvar FormElementsEdit = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormElementsEdit, _React$Component);\n\n  var _super = _createSuper(FormElementsEdit);\n\n  function FormElementsEdit(props) {\n    var _this;\n\n    _classCallCheck(this, FormElementsEdit);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      element: _this.props.element,\n      data: _this.props.data,\n      dirty: false\n    };\n    return _this;\n  }\n\n  _createClass(FormElementsEdit, [{\n    key: \"toggleRequired\",\n    value: function toggleRequired() {// const this_element = this.state.element;\n    }\n  }, {\n    key: \"editElementProp\",\n    value: function editElementProp(elemProperty, targProperty, e) {\n      var _this2 = this; // elemProperty could be content or label\n      // targProperty could be value or checked\n\n\n      var this_element = this.state.element;\n      this_element[elemProperty] = e.target[targProperty];\n      this.setState({\n        element: this_element,\n        dirty: true\n      }, function () {\n        if (targProperty === 'checked') {\n          _this2.updateElement();\n        }\n      });\n    }\n  }, {\n    key: \"onEditorStateChange\",\n    value: function onEditorStateChange(index, property, editorContent) {\n      // const html = draftToHtml(convertToRaw(editorContent.getCurrentContent())).replace(/<p>/g, '<div>').replace(/<\\/p>/g, '</div>');\n      var html = (0, _draftjsToHtml[\"default\"])((0, _draftJs.convertToRaw)(editorContent.getCurrentContent())).replace(/<p>/g, '').replace(/<\\/p>/g, '').replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n      var this_element = this.state.element;\n      this_element[property] = html;\n      this.setState({\n        element: this_element,\n        dirty: true\n      });\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement() {\n      var this_element = this.state.element; // to prevent ajax calls with no change\n\n      if (this.state.dirty) {\n        this.props.updateElement.call(this.props.preview, this_element);\n        this.setState({\n          dirty: false\n        });\n      }\n    }\n  }, {\n    key: \"convertFromHTML\",\n    value: function convertFromHTML(content) {\n      var newContent = (0, _draftJs.convertFromHTML)(content);\n\n      if (!newContent.contentBlocks || !newContent.contentBlocks.length) {\n        // to prevent crash when no contents in editor\n        return _draftJs.EditorState.createEmpty();\n      }\n\n      var contentState = _draftJs.ContentState.createFromBlockArray(newContent);\n\n      return _draftJs.EditorState.createWithContent(contentState);\n    }\n  }, {\n    key: \"addOptions\",\n    value: function addOptions() {\n      var _this3 = this;\n\n      var optionsApiUrl = document.getElementById('optionsApiUrl').value;\n\n      if (optionsApiUrl) {\n        (0, _requests.get)(optionsApiUrl).then(function (data) {\n          _this3.props.element.options = [];\n          var options = _this3.props.element.options;\n          data.forEach(function (x) {\n            // eslint-disable-next-line no-param-reassign\n            x.key = _UUID[\"default\"].uuid();\n            options.push(x);\n          });\n          var this_element = _this3.state.element;\n\n          _this3.setState({\n            element: this_element,\n            dirty: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.dirty) {\n        this.props.element.dirty = true;\n      }\n\n      var this_checked = this.props.element.hasOwnProperty('required') ? this.props.element.required : false;\n      var this_read_only = this.props.element.hasOwnProperty('readOnly') ? this.props.element.readOnly : false;\n      var this_default_today = this.props.element.hasOwnProperty('defaultToday') ? this.props.element.defaultToday : false;\n      var this_show_time_select = this.props.element.hasOwnProperty('showTimeSelect') ? this.props.element.showTimeSelect : false;\n      var this_show_time_select_only = this.props.element.hasOwnProperty('showTimeSelectOnly') ? this.props.element.showTimeSelectOnly : false;\n      var this_checked_inline = this.props.element.hasOwnProperty('inline') ? this.props.element.inline : false;\n      var this_checked_bold = this.props.element.hasOwnProperty('bold') ? this.props.element.bold : false;\n      var this_checked_italic = this.props.element.hasOwnProperty('italic') ? this.props.element.italic : false;\n      var this_checked_center = this.props.element.hasOwnProperty('center') ? this.props.element.center : false;\n      var this_checked_page_break = this.props.element.hasOwnProperty('pageBreakBefore') ? this.props.element.pageBreakBefore : false;\n      var this_checked_alternate_form = this.props.element.hasOwnProperty('alternateForm') ? this.props.element.alternateForm : false;\n      var _this$props$element = this.props.element,\n          canHavePageBreakBefore = _this$props$element.canHavePageBreakBefore,\n          canHaveAlternateForm = _this$props$element.canHaveAlternateForm,\n          canHaveDisplayHorizontal = _this$props$element.canHaveDisplayHorizontal,\n          canHaveOptionCorrect = _this$props$element.canHaveOptionCorrect,\n          canHaveOptionValue = _this$props$element.canHaveOptionValue;\n      var this_files = this.props.files.length ? this.props.files : [];\n\n      if (this_files.length < 1 || this_files.length > 0 && this_files[0].id !== '') {\n        this_files.unshift({\n          id: '',\n          file_name: ''\n        });\n      }\n\n      var editorState;\n\n      if (this.props.element.hasOwnProperty('content')) {\n        editorState = this.convertFromHTML(this.props.element.content);\n      }\n\n      if (this.props.element.hasOwnProperty('label')) {\n        editorState = this.convertFromHTML(this.props.element.label);\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"clearfix\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"h4\", {\n        className: \"float-left\"\n      }, this.props.element.text), /*#__PURE__*/_react[\"default\"].createElement(\"i\", {\n        className: \"float-right fas fa-times dismiss-edit\",\n        onClick: this.props.manualEditModeOff\n      })), this.props.element.hasOwnProperty('content') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\"\n      }, \"Text to display:\"), /*#__PURE__*/_react[\"default\"].createElement(_reactDraftWysiwyg.Editor, {\n        toolbar: toolbar,\n        defaultEditorState: editorState,\n        onBlur: this.updateElement.bind(this),\n        onEditorStateChange: this.onEditorStateChange.bind(this, 0, 'content'),\n        stripPastedStyles: true\n      })), this.props.element.hasOwnProperty('file_path') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"fileSelect\"\n      }, \"Choose file:\"), /*#__PURE__*/_react[\"default\"].createElement(\"select\", {\n        id: \"fileSelect\",\n        className: \"form-control\",\n        defaultValue: this.props.element.file_path,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'file_path', 'value')\n      }, this_files.map(function (file) {\n        var this_key = \"file_\".concat(file.id);\n        return /*#__PURE__*/_react[\"default\"].createElement(\"option\", {\n          value: file.id,\n          key: this_key\n        }, file.file_name);\n      }))), this.props.element.hasOwnProperty('href') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(_reactTextareaAutosize[\"default\"], {\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.href,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'href', 'value')\n      })), this.props.element.hasOwnProperty('src') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"srcInput\"\n      }, \"Link to:\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"srcInput\",\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.src,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'src', 'value')\n      })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"do-center\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked_center,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'center', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"do-center\"\n      }, \"Center?\"))), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"row\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-sm-3\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"elementWidth\"\n      }, \"Width:\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"elementWidth\",\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.width,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'width', 'value')\n      })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-sm-3\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"elementHeight\"\n      }, \"Height:\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"elementHeight\",\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.height,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'height', 'value')\n      })))), this.props.element.hasOwnProperty('label') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", null, \"Display Label\"), /*#__PURE__*/_react[\"default\"].createElement(_reactDraftWysiwyg.Editor, {\n        toolbar: toolbar,\n        defaultEditorState: editorState,\n        onBlur: this.updateElement.bind(this),\n        onEditorStateChange: this.onEditorStateChange.bind(this, 0, 'label'),\n        stripPastedStyles: true\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"is-required\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'required', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"is-required\"\n      }, \"Required\")), this.props.element.hasOwnProperty('readOnly') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"is-read-only\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_read_only,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'readOnly', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"is-read-only\"\n      }, \"Read only\")), this.props.element.hasOwnProperty('defaultToday') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"is-default-to-today\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_default_today,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'defaultToday', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"is-default-to-today\"\n      }, \"Default to Today?\")), this.props.element.hasOwnProperty('showTimeSelect') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"show-time-select\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_show_time_select,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'showTimeSelect', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"show-time-select\"\n      }, \"Show Time Select?\")), this_show_time_select && this.props.element.hasOwnProperty('showTimeSelectOnly') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"show-time-select-only\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_show_time_select_only,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'showTimeSelectOnly', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"show-time-select-only\"\n      }, \"Show Time Select Only?\")), (this.state.element.element === 'RadioButtons' || this.state.element.element === 'Checkboxes') && canHaveDisplayHorizontal && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"display-horizontal\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked_inline,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'inline', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"display-horizontal\"\n      }, \"Display horizonal\"))), this.state.element.element === 'Signature' && this.props.element.readOnly ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"variableKey\"\n      }, \"Variable Key:\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"variableKey\",\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.variableKey,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'variableKey', 'value')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        className: \"help-block\"\n      }, \"This will give the element a key that can be used to replace the content with a runtime value.\")) : /*#__PURE__*/_react[\"default\"].createElement(\"div\", null), canHavePageBreakBefore && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\"\n      }, \"Print Options\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"page-break-before-element\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked_page_break,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'pageBreakBefore', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"page-break-before-element\"\n      }, \"Page Break Before Element?\"))), canHaveAlternateForm && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\"\n      }, \"Alternate/Signature Page\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"display-on-alternate\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked_alternate_form,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'alternateForm', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"display-on-alternate\"\n      }, \"Display on alternate/signature Page?\"))), this.props.element.hasOwnProperty('step') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group-range\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"rangeStep\"\n      }, \"Step\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"rangeStep\",\n        type: \"number\",\n        className: \"form-control\",\n        defaultValue: this.props.element.step,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'step', 'value')\n      }))), this.props.element.hasOwnProperty('min_value') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group-range\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"rangeMin\"\n      }, \"Min\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"rangeMin\",\n        type: \"number\",\n        className: \"form-control\",\n        defaultValue: this.props.element.min_value,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'min_value', 'value')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.min_label,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'min_label', 'value')\n      }))), this.props.element.hasOwnProperty('max_value') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group-range\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"rangeMax\"\n      }, \"Max\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"rangeMax\",\n        type: \"number\",\n        className: \"form-control\",\n        defaultValue: this.props.element.max_value,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'max_value', 'value')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.max_label,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'max_label', 'value')\n      }))), this.props.element.hasOwnProperty('default_value') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group-range\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"defaultSelected\"\n      }, \"Default Selected\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"defaultSelected\",\n        type: \"number\",\n        className: \"form-control\",\n        defaultValue: this.props.element.default_value,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'default_value', 'value')\n      }))), this.props.element.hasOwnProperty('static') && this.props.element[\"static\"] && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\"\n      }, \"Text Style\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"do-bold\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked_bold,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'bold', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"do-bold\"\n      }, \"Bold\")), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"custom-control custom-checkbox\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"do-italic\",\n        className: \"custom-control-input\",\n        type: \"checkbox\",\n        checked: this_checked_italic,\n        value: true,\n        onChange: this.editElementProp.bind(this, 'italic', 'checked')\n      }), /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"do-italic\"\n      }, \"Italic\"))), this.props.showCorrectColumn && this.props.element.canHaveAnswer && !this.props.element.hasOwnProperty('options') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"correctAnswer\"\n      }, \"Correct Answer\"), /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        id: \"correctAnswer\",\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: this.props.element.correct,\n        onBlur: this.updateElement.bind(this),\n        onChange: this.editElementProp.bind(this, 'correct', 'value')\n      })), this.props.element.canPopulateFromApi && this.props.element.hasOwnProperty('options') && /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"form-group\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"optionsApiUrl\"\n      }, \"Populate Options from API\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"row\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n        className: \"form-control\",\n        style: {\n          width: '100%'\n        },\n        type: \"text\",\n        id: \"optionsApiUrl\",\n        placeholder: \"http://localhost:8080/api/optionsdata\"\n      })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n        onClick: this.addOptions.bind(this),\n        className: \"btn btn-success\"\n      }, \"Populate\")))), this.props.element.hasOwnProperty('options') && /*#__PURE__*/_react[\"default\"].createElement(_dynamicOptionList[\"default\"], {\n        showCorrectColumn: this.props.showCorrectColumn,\n        canHaveOptionCorrect: canHaveOptionCorrect,\n        canHaveOptionValue: canHaveOptionValue,\n        data: this.props.preview.state.data,\n        updateElement: this.props.updateElement,\n        preview: this.props.preview,\n        element: this.props.element,\n        key: this.props.element.options.length\n      }));\n    }\n  }]);\n\n  return FormElementsEdit;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = FormElementsEdit;\nFormElementsEdit.defaultProps = {\n  className: 'edit-element-fields'\n};","map":null,"metadata":{},"sourceType":"script"}