{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar Templates = /*#__PURE__*/function () {\n  function Templates() {\n    _classCallCheck(this, Templates);\n  }\n\n  _createClass(Templates, null, [{\n    key: \"templates\",\n    get: function get() {\n      if (!Templates._templates) {\n        Templates._templates = _index.default;\n      }\n\n      return Templates._templates;\n    }\n  }, {\n    key: \"addTemplate\",\n    value: function addTemplate(name, template) {\n      Templates.templates[name] = template;\n    }\n  }, {\n    key: \"extendTemplate\",\n    value: function extendTemplate(name, template) {\n      Templates.templates[name] = _lodash.default.merge({}, Templates.templates[name], template);\n    }\n  }, {\n    key: \"setTemplate\",\n    value: function setTemplate(name, template) {\n      Templates.addTemplate(name, template);\n    }\n  }, {\n    key: \"current\",\n    get: function get() {\n      if (Templates._current) {\n        return Templates._current;\n      }\n\n      return Templates.defaultTemplates;\n    },\n    set: function set(templates) {\n      var defaultTemplates = Templates.current;\n      Templates._current = _lodash.default.merge({}, defaultTemplates, templates);\n    }\n  }, {\n    key: \"defaultTemplates\",\n    get: function get() {\n      return Templates.templates.bootstrap;\n    }\n  }, {\n    key: \"framework\",\n    get: function get() {\n      return Templates._framework;\n    },\n    set: function set(framework) {\n      if (Templates.templates.hasOwnProperty(framework)) {\n        Templates._framework = framework;\n        Templates._current = Templates.templates[framework];\n      }\n    }\n  }]);\n\n  return Templates;\n}();\n\nexports.default = Templates;","map":null,"metadata":{},"sourceType":"script"}