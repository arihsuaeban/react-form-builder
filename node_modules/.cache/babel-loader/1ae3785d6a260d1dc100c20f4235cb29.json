{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.reflect.get\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _TextField = _interopRequireDefault(require(\"../textfield/TextField\"));\n\nvar _utils = require(\"../../utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar defaultDataFormat = 'HH:mm:ss';\n\nvar TimeComponent = /*#__PURE__*/function (_TextFieldComponent) {\n  _inherits(TimeComponent, _TextFieldComponent);\n\n  var _super = _createSuper(TimeComponent);\n\n  function TimeComponent(component, options, data) {\n    var _this;\n\n    _classCallCheck(this, TimeComponent);\n\n    _this = _super.call(this, component, options, data);\n\n    var _getBrowserInfo = (0, _utils.getBrowserInfo)(),\n        isEdgeBrowser = _getBrowserInfo.edge,\n        edgeVersion = _getBrowserInfo.version;\n\n    _this.component.inputMask = _this.getInputMaskFromFormat(_this.component.format);\n    _this.component.inputType = isEdgeBrowser && edgeVersion <= 18 ? 'text' : _this.component.inputType || 'time';\n    _this.rawData = _this.component.multiple ? [] : _this.emptyValue;\n    return _this;\n  }\n\n  _createClass(TimeComponent, [{\n    key: \"init\",\n    value: function init() {\n      _get(_getPrototypeOf(TimeComponent.prototype), \"init\", this).call(this);\n\n      if (this.component.inputType === 'text') {\n        this.validators.push('time');\n      }\n    }\n  }, {\n    key: \"dataFormat\",\n    get: function get() {\n      return this.component.dataFormat || defaultDataFormat;\n    }\n  }, {\n    key: \"defaultSchema\",\n    get: function get() {\n      return TimeComponent.schema();\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      var _this2 = this;\n\n      var value = _get(_getPrototypeOf(TimeComponent.prototype), \"defaultValue\", this);\n\n      if (this.component.multiple && Array.isArray(value)) {\n        value = value.map(function (item) {\n          return item ? _this2.getStringAsValue(item) : item;\n        });\n      } else {\n        if (value) {\n          value = this.getStringAsValue(value);\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"validationValue\",\n    get: function get() {\n      if (Array.isArray(this.rawData) && !this.rawData.length || !this.rawData) {\n        return this.dataValue;\n      }\n\n      return this.rawData;\n    }\n  }, {\n    key: \"inputInfo\",\n    get: function get() {\n      var info = _get(_getPrototypeOf(TimeComponent.prototype), \"inputInfo\", this);\n\n      info.attr.type = this.component.inputType;\n      return info;\n    }\n  }, {\n    key: \"skipMaskValidation\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isNotCompleteInput\",\n    value: function isNotCompleteInput(value) {\n      return value.includes('_');\n    }\n  }, {\n    key: \"removeValue\",\n    value: function removeValue(index) {\n      this.rawData = Array.isArray(this.rawData) ? [].concat(_toConsumableArray(this.rawData.slice(0, index)), _toConsumableArray(this.rawData.slice(index + 1))) : this.emptyValue;\n\n      _get(_getPrototypeOf(TimeComponent.prototype), \"removeValue\", this).call(this, index);\n    }\n  }, {\n    key: \"resetRawData\",\n    value: function resetRawData(index) {\n      if (index) {\n        this.setRawValue(this.emptyValue, index);\n      } else {\n        this.rawData = [];\n      }\n    }\n  }, {\n    key: \"setRawValue\",\n    value: function setRawValue(value, index) {\n      if (Array.isArray(this.rawData)) {\n        this.rawData[index] = value;\n      } else {\n        this.rawData = value;\n      }\n    }\n  }, {\n    key: \"getRawValue\",\n    value: function getRawValue(index) {\n      if (index && Array.isArray(this.rawData)) {\n        return this.rawData[index] || this.emptyValue;\n      } else {\n        return this.rawData;\n      }\n    }\n  }, {\n    key: \"getValueAt\",\n    value: function getValueAt(index) {\n      if (!this.refs.input.length || !this.refs.input[index]) {\n        return this.emptyValue;\n      }\n\n      var value = this.refs.input[index].value;\n\n      if (!value) {\n        this.resetRawData(index);\n        return this.emptyValue;\n      }\n\n      this.setRawValue(value, index);\n      return this.getStringAsValue(value);\n    }\n  }, {\n    key: \"setValueAt\",\n    value: function setValueAt(index, value) {\n      this.setRawValue(value ? this.getValueAsString(value) : value, index);\n      this.refs.input[index].value = this.getRawValue(index);\n    }\n  }, {\n    key: \"getStringAsValue\",\n    value: function getStringAsValue(view) {\n      return view ? (0, _moment.default)(view, this.component.format).format(this.component.dataFormat) : view;\n    }\n  }, {\n    key: \"getValueAsString\",\n    value: function getValueAsString(value) {\n      return (value ? (0, _moment.default)(value, this.component.dataFormat).format(this.component.format) : value) || '';\n    }\n  }, {\n    key: \"getInputMaskFromFormat\",\n    value: function getInputMaskFromFormat(format) {\n      if (format === 'LT') {\n        return '99:99 AA';\n      }\n\n      if (format === 'LTS') {\n        return '99:99:99 AA';\n      }\n\n      return format.replace(/[hHmMsSk]/g, '9').replace(/[aA]/, 'AA');\n    }\n  }, {\n    key: \"addFocusBlurEvents\",\n    value: function addFocusBlurEvents(element) {\n      var _this3 = this;\n\n      _get(_getPrototypeOf(TimeComponent.prototype), \"addFocusBlurEvents\", this).call(this, element);\n\n      this.addEventListener(element, 'blur', function () {\n        element.value = _this3.getValueAsString(element.value);\n      });\n    }\n  }], [{\n    key: \"schema\",\n    value: function schema() {\n      for (var _len = arguments.length, extend = new Array(_len), _key = 0; _key < _len; _key++) {\n        extend[_key] = arguments[_key];\n      }\n\n      return _TextField.default.schema.apply(_TextField.default, [{\n        type: 'time',\n        label: 'Time',\n        key: 'time',\n        inputType: 'time',\n        format: 'HH:mm',\n        dataFormat: defaultDataFormat\n      }].concat(extend));\n    }\n  }, {\n    key: \"builderInfo\",\n    get: function get() {\n      return {\n        title: 'Time',\n        icon: 'clock-o',\n        group: 'advanced',\n        documentation: '/userguide/#time',\n        weight: 55,\n        schema: TimeComponent.schema()\n      };\n    }\n  }]);\n\n  return TimeComponent;\n}(_TextField.default);\n\nexports.default = TimeComponent;","map":null,"metadata":{},"sourceType":"script"}