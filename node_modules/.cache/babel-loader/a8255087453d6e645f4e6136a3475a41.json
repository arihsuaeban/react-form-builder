{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ctx) {\n  var __t,\n      __p = '',\n      __j = Array.prototype.join;\n\n  function print() {\n    __p += __j.call(arguments, '');\n  }\n\n  if (ctx.mode.autocomplete) {\n    ;\n    __p += '\\n  <div class=\"address-autocomplete-container\">\\n    <input\\n      ref=\"' + ((__t = ctx.ref.searchInput) == null ? '' : __t) + '\"\\n      ';\n\n    for (var attr in ctx.inputAttributes) {\n      ;\n      __p += '\\n        ' + ((__t = attr) == null ? '' : __t) + '=\"' + ((__t = ctx.inputAttributes[attr]) == null ? '' : __t) + '\"\\n      ';\n    }\n\n    ;\n    __p += '\\n      value=\"' + ((__t = ctx.displayValue) == null ? '' : __t) + '\"\\n      autocomplete=\"off\"\\n      aria-label=\"' + ((__t = ctx.t('autocomplete')) == null ? '' : __t) + '\"\\n    >\\n    ';\n\n    if (!ctx.component.disableClearIcon) {\n      ;\n      __p += '\\n      <i\\n        class=\"address-autocomplete-remove-value-icon fa fa-times\"\\n        tabindex=\"' + ((__t = ctx.inputAttributes.tabindex) == null ? '' : __t) + '\"\\n        ref=\"' + ((__t = ctx.ref.removeValueIcon) == null ? '' : __t) + '\"\\n      ></i>\\n    ';\n    }\n\n    ;\n    __p += '\\n  </div>\\n';\n  }\n\n  ;\n  __p += '\\n';\n\n  if (ctx.self.manualModeEnabled) {\n    ;\n    __p += '\\n  <div class=\"form-check checkbox\">\\n    <label class=\"form-check-label\">\\n      <input\\n        ref=\"' + ((__t = ctx.ref.modeSwitcher) == null ? '' : __t) + '\"\\n        type=\"checkbox\"\\n        class=\"form-check-input\"\\n        tabindex=\"' + ((__t = ctx.inputAttributes.tabindex) == null ? '' : __t) + '\"\\n        ';\n\n    if (ctx.mode.manual) {\n      ;\n      __p += 'checked=true';\n    }\n\n    ;\n    __p += '\\n        ';\n\n    if (ctx.disabled) {\n      ;\n      __p += 'disabled=true';\n    }\n\n    ;\n    __p += '\\n      >\\n      <span>' + ((__t = ctx.component.switchToManualModeLabel) == null ? '' : __t) + '</span>\\n    </label>\\n  </div>\\n';\n  }\n\n  ;\n  __p += '\\n';\n\n  if (ctx.self.manualMode) {\n    ;\n    __p += '\\n  <div ref=\"' + ((__t = ctx.nestedKey) == null ? '' : __t) + '\">\\n    ' + ((__t = ctx.children) == null ? '' : __t) + '\\n  </div>\\n';\n  }\n\n  ;\n  __p += '\\n';\n  return __p;\n};","map":null,"metadata":{},"sourceType":"script"}