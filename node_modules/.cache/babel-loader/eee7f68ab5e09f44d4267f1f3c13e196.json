{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable max-len */\n\n\nvar _default = [{\n  weight: 0,\n  type: 'checkbox',\n  label: 'Multiple Values',\n  tooltip: 'Allows multiple values to be entered for this field.',\n  key: 'multiple',\n  input: true\n}, {\n  type: 'textfield',\n  label: 'Default Value',\n  key: 'defaultValue',\n  weight: 5,\n  placeholder: 'Default Value',\n  tooltip: 'The will be the value for this field, before user interaction. Having a default value will override the placeholder text.',\n  input: true\n}, {\n  weight: 30,\n  type: 'radio',\n  label: 'Persistent',\n  tooltip: 'A persistent field will be stored in database when the form is submitted.',\n  key: 'persistent',\n  input: true,\n  inline: true,\n  defaultValue: true,\n  values: [{\n    label: 'None',\n    value: false\n  }, {\n    label: 'Server',\n    value: true\n  }, {\n    label: 'Client',\n    value: 'client-only'\n  }]\n}, {\n  weight: 150,\n  type: 'checkbox',\n  label: 'Protected',\n  tooltip: 'A protected field will not be returned when queried via API.',\n  key: 'protected',\n  input: true\n}, {\n  type: 'checkbox',\n  input: true,\n  weight: 200,\n  key: 'dbIndex',\n  label: 'Database Index',\n  tooltip: 'Set this field as an index within the database. Increases performance for submission queries.'\n}, {\n  weight: 400,\n  type: 'checkbox',\n  label: 'Encrypted (Enterprise Only)',\n  tooltip: 'Encrypt this field on the server. This is two way encryption which is not suitable for passwords.',\n  key: 'encrypted',\n  input: true,\n  logic: [{\n    name: 'disabled',\n    trigger: {\n      type: 'javascript',\n      javascript: 'result = !instance.root.options.sac;'\n    },\n    actions: [{\n      name: 'disabled',\n      type: 'property',\n      property: {\n        label: 'Disabled',\n        value: 'disabled',\n        type: 'boolean'\n      },\n      state: true\n    }]\n  }, {\n    name: 'disabledToolTip',\n    trigger: {\n      type: 'javascript',\n      javascript: 'result = !instance.root.options.sac;'\n    },\n    actions: [{\n      name: 'addDisabledTooltip',\n      type: 'property',\n      property: {\n        label: 'Tooltip',\n        value: 'tooltip',\n        type: 'string'\n      },\n      text: 'Encryption is not available with your current plan. Please contact sales@form.io.'\n    }]\n  }]\n}, {\n  type: 'select',\n  input: true,\n  key: 'redrawOn',\n  label: 'Redraw On',\n  weight: 600,\n  tooltip: 'Redraw this component if another component changes. This is useful if interpolating parts of the component like the label.',\n  dataSrc: 'custom',\n  valueProperty: 'value',\n  data: {\n    custom: function custom(context) {\n      var values = [];\n      values.push({\n        label: 'Any Change',\n        value: 'data'\n      });\n      context.utils.eachComponent(context.instance.options.editForm.components, function (component, path) {\n        if (component.key !== context.data.key) {\n          values.push({\n            label: component.label || component.key,\n            value: path\n          });\n        }\n      });\n      return values;\n    }\n  },\n  conditional: {\n    json: {\n      '!': [{\n        var: 'data.dataSrc'\n      }]\n    }\n  }\n}, {\n  weight: 700,\n  type: 'checkbox',\n  label: 'Clear Value When Hidden',\n  key: 'clearOnHide',\n  defaultValue: true,\n  tooltip: 'When a field is hidden, clear the value.',\n  input: true,\n  clearOnHide: false,\n  calculateValue: 'value = data.hidden ? false : value',\n  conditional: {\n    json: {\n      '!': [{\n        var: 'data.hidden'\n      }]\n    }\n  }\n}, _utils.default.javaScriptValue('Custom Default Value', 'customDefaultValue', 'customDefaultValue', 1000, '<p><h4>Example:</h4><pre>value = data.firstName + \" \" + data.lastName;</pre></p>', '<p><h4>Example:</h4><pre>{\"cat\": [{\"var\": \"data.firstName\"}, \" \", {\"var\": \"data.lastName\"}]}</pre>'), _utils.default.javaScriptValue('Calculated Value', 'calculateValue', 'calculateValue', 1100, '<p><h4>Example:</h4><pre>value = data.a + data.b + data.c;</pre></p>', '<p><h4>Example:</h4><pre>{\"+\": [{\"var\": \"data.a\"}, {\"var\": \"data.b\"}, {\"var\": \"data.c\"}]}</pre><p><a target=\"_blank\" href=\"http://formio.github.io/formio.js/app/examples/calculated.html\">Click here for an example</a></p>', '<tr><th>token</th><td>The decoded JWT token for the authenticated user.</td></tr>'), {\n  type: 'checkbox',\n  input: true,\n  weight: 1100,\n  key: 'calculateServer',\n  label: 'Calculate Value on server',\n  tooltip: 'Checking this will run the calculation on the server. This is useful if you wish to override the values submitted with the calculations performed on the server.'\n}, {\n  type: 'checkbox',\n  input: true,\n  weight: 1200,\n  key: 'allowCalculateOverride',\n  label: 'Allow Manual Override of Calculated Value',\n  tooltip: 'When checked, this will allow the user to manually override the calculated value.'\n}];\n/* eslint-enable max-len */\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}