{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _address = _interopRequireDefault(require(\"./address\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth\"));\n\nvar _storage = _interopRequireDefault(require(\"./storage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Providers = /*#__PURE__*/function () {\n  function Providers() {\n    _classCallCheck(this, Providers);\n  }\n\n  _createClass(Providers, null, [{\n    key: \"addProvider\",\n    value: function addProvider(type, name, provider) {\n      Providers.providers[type] = Providers.providers[type] || {};\n      Providers.providers[type][name] = provider;\n    }\n  }, {\n    key: \"addProviders\",\n    value: function addProviders(type, providers) {\n      Providers.providers[type] = _lodash.default.merge(Providers.providers[type], providers);\n    }\n  }, {\n    key: \"getProvider\",\n    value: function getProvider(type, name) {\n      if (Providers.providers[type] && Providers.providers[type][name]) {\n        return Providers.providers[type][name];\n      }\n    }\n  }, {\n    key: \"getProviders\",\n    value: function getProviders(type) {\n      if (Providers.providers[type]) {\n        return Providers.providers[type];\n      }\n    }\n  }]);\n\n  return Providers;\n}();\n\nexports.default = Providers;\n\n_defineProperty(Providers, \"providers\", {\n  address: _address.default,\n  auth: _auth.default,\n  storage: _storage.default\n});","map":null,"metadata":{},"sourceType":"script"}