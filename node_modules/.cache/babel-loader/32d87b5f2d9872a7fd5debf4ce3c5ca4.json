{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.forms = forms;\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _constants = require('./constants');\n\nvar types = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction forms(_ref) {\n  var name = _ref.name,\n      _ref$limit = _ref.limit,\n      limit = _ref$limit === undefined ? 10 : _ref$limit,\n      _ref$query = _ref.query,\n      query = _ref$query === undefined ? {} : _ref$query,\n      _ref$select = _ref.select,\n      select = _ref$select === undefined ? '' : _ref$select,\n      _ref$sort = _ref.sort,\n      sort = _ref$sort === undefined ? '' : _ref$sort;\n  var initialState = {\n    error: '',\n    forms: [],\n    isActive: false,\n    limit: limit,\n    pagination: {\n      numPages: 0,\n      page: 1,\n      total: 0\n    },\n    query: query,\n    select: select,\n    sort: sort\n  };\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1]; // Only proceed for this forms.\n\n    if (action.name !== name) {\n      return state;\n    }\n\n    switch (action.type) {\n      case types.FORMS_RESET:\n        return initialState;\n\n      case types.FORMS_REQUEST:\n        return _extends({}, state, (0, _pick3.default)(action.params, ['limit', 'query', 'select', 'sort']), {\n          error: '',\n          forms: [],\n          isActive: true,\n          pagination: _extends({}, state.pagination, {\n            page: action.page\n          })\n        });\n\n      case types.FORMS_SUCCESS:\n        {\n          var total = action.forms.serverCount;\n          return _extends({}, state, {\n            forms: action.forms,\n            isActive: false,\n            pagination: _extends({}, state.pagination, {\n              numPages: Math.ceil(total / state.limit),\n              total: total\n            })\n          });\n        }\n\n      case types.FORMS_FAILURE:\n        return _extends({}, state, {\n          error: action.error,\n          isActive: false\n        });\n\n      default:\n        return state;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}