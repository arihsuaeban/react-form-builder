{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _omit2 = _interopRequireDefault(require(\"lodash/omit\"));\n\nvar _difference2 = _interopRequireDefault(require(\"lodash/difference\"));\n\nvar _keys2 = _interopRequireDefault(require(\"lodash/keys\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = [{\n  key: 'labelPosition',\n  ignore: true\n}, {\n  key: 'placeholder',\n  ignore: true\n}, {\n  key: 'description',\n  ignore: true\n}, {\n  key: 'autofocus',\n  ignore: true\n}, {\n  key: 'tableView',\n  ignore: true\n}, {\n  key: 'label',\n  hidden: true,\n  calculateValue: function calculateValue(context) {\n    return context.data.title;\n  }\n}, {\n  key: 'tabindex',\n  hidden: true\n}, {\n  weight: 1,\n  type: 'textfield',\n  input: true,\n  placeholder: 'Panel Title',\n  label: 'Title',\n  key: 'title',\n  tooltip: 'The title text that appears in the header of this panel.'\n}, {\n  weight: 20,\n  type: 'textarea',\n  input: true,\n  key: 'tooltip',\n  label: 'Tooltip',\n  placeholder: 'To add a tooltip to this field, enter text here.',\n  tooltip: 'Adds a tooltip to the side of this field.'\n}, {\n  weight: 30,\n  type: 'select',\n  input: true,\n  label: 'Theme',\n  key: 'theme',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'Default',\n      value: 'default'\n    }, {\n      label: 'Primary',\n      value: 'primary'\n    }, {\n      label: 'Info',\n      value: 'info'\n    }, {\n      label: 'Success',\n      value: 'success'\n    }, {\n      label: 'Danger',\n      value: 'danger'\n    }, {\n      label: 'Warning',\n      value: 'warning'\n    }]\n  }\n}, {\n  weight: 40,\n  type: 'fieldset',\n  input: false,\n  components: [{\n    type: 'select',\n    input: true,\n    label: 'Breadcrumb Type',\n    key: 'breadcrumb',\n    dataSrc: 'values',\n    data: {\n      values: [{\n        label: 'Default',\n        value: 'default'\n      }, {\n        label: 'Condensed',\n        value: 'condensed'\n      }, {\n        label: 'Hidden',\n        value: 'none'\n      }]\n    }\n  }, {\n    input: true,\n    type: 'checkbox',\n    label: 'Allow click on Breadcrumb',\n    key: 'breadcrumbClickable',\n    defaultValue: true,\n    conditional: {\n      json: {\n        '!==': [{\n          var: 'data.breadcrumb'\n        }, 'none']\n      }\n    }\n  }, {\n    input: true,\n    type: 'checkbox',\n    label: 'Allow Previous',\n    key: 'allowPrevious',\n    defaultValue: false,\n    tooltip: 'Determines if the breadcrumb bar is clickable or not for visited tabs.',\n    conditional: {\n      json: {\n        '===': [{\n          var: 'data.breadcrumbClickable'\n        }, false]\n      }\n    }\n  }, {\n    weight: 50,\n    label: 'Panel Navigation Buttons',\n    optionsLabelPosition: 'right',\n    values: [{\n      label: 'Previous',\n      value: 'previous'\n    }, {\n      label: 'Cancel',\n      value: 'cancel'\n    }, {\n      label: 'Next',\n      value: 'next'\n    }],\n    inline: true,\n    type: 'selectboxes',\n    key: 'buttonSettings',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: {\n      previous: true,\n      cancel: true,\n      next: true\n    }\n  }, {\n    weight: 55,\n    label: 'Navigate Wizard on Enter',\n    type: 'checkbox',\n    key: 'navigateOnEnter',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: false,\n    tooltip: 'Use the Enter key to go forward through pages.'\n  }, {\n    weight: 56,\n    label: 'Save on Enter',\n    type: 'checkbox',\n    key: 'saveOnEnter',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: false,\n    tooltip: 'Use the Enter key to submit form on last page.'\n  }, {\n    weight: 60,\n    label: 'Scroll up on page opening',\n    type: 'checkbox',\n    key: 'scrollToTop',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: false,\n    tooltip: 'Scroll to the top of the wizard page when user navigates to it'\n  }],\n  customConditional: function customConditional(context) {\n    var isWizardPanel = false;\n\n    if (context.instance.options.editForm.display === 'wizard') {\n      var components = context.instance.options.editForm.components;\n      var component = context.instance.options.editComponent;\n\n      if (components && component) {\n        isWizardPanel = components.some(function (comp) {\n          var diff = (0, _difference2.default)((0, _keys2.default)(comp), (0, _keys2.default)(component)) || [];\n          diff.push('components');\n          return (0, _isEqual2.default)((0, _omit2.default)(comp, diff), (0, _omit2.default)(component, diff));\n        });\n      }\n    }\n\n    return isWizardPanel;\n  }\n}, {\n  weight: 650,\n  type: 'checkbox',\n  label: 'Collapsible',\n  tooltip: 'If checked, this will turn this Panel into a collapsible panel.',\n  key: 'collapsible',\n  input: true\n}, {\n  weight: 651,\n  type: 'checkbox',\n  label: 'Initially Collapsed',\n  tooltip: 'Determines the initial collapsed state of this Panel.',\n  key: 'collapsed',\n  input: true,\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.collapsible'\n      }, true]\n    }\n  }\n}];\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}