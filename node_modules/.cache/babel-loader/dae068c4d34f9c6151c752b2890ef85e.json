{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Builders\", {\n  enumerable: true,\n  get: function get() {\n    return _Builders.default;\n  }\n});\nObject.defineProperty(exports, \"Components\", {\n  enumerable: true,\n  get: function get() {\n    return _Components.default;\n  }\n});\nObject.defineProperty(exports, \"Conjunctions\", {\n  enumerable: true,\n  get: function get() {\n    return _conjunctions.default;\n  }\n});\nObject.defineProperty(exports, \"Displays\", {\n  enumerable: true,\n  get: function get() {\n    return _Displays.default;\n  }\n});\nObject.defineProperty(exports, \"Form\", {\n  enumerable: true,\n  get: function get() {\n    return _Form.default;\n  }\n});\nObject.defineProperty(exports, \"Formio\", {\n  enumerable: true,\n  get: function get() {\n    return _Formio.default;\n  }\n});\nObject.defineProperty(exports, \"Operators\", {\n  enumerable: true,\n  get: function get() {\n    return _operators.default;\n  }\n});\nObject.defineProperty(exports, \"Providers\", {\n  enumerable: true,\n  get: function get() {\n    return _providers.default;\n  }\n});\nObject.defineProperty(exports, \"QuickRules\", {\n  enumerable: true,\n  get: function get() {\n    return _quickRules.default;\n  }\n});\nObject.defineProperty(exports, \"Rules\", {\n  enumerable: true,\n  get: function get() {\n    return _Rules.default;\n  }\n});\nObject.defineProperty(exports, \"Templates\", {\n  enumerable: true,\n  get: function get() {\n    return _Templates.default;\n  }\n});\nObject.defineProperty(exports, \"Transformers\", {\n  enumerable: true,\n  get: function get() {\n    return _transformers.default;\n  }\n});\nObject.defineProperty(exports, \"Utils\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.default;\n  }\n});\nObject.defineProperty(exports, \"ValueSources\", {\n  enumerable: true,\n  get: function get() {\n    return _valueSources.default;\n  }\n});\nObject.defineProperty(exports, \"Widgets\", {\n  enumerable: true,\n  get: function get() {\n    return _widgets.default;\n  }\n});\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _Formio = _interopRequireDefault(require(\"./Formio\"));\n\nvar _components = _interopRequireDefault(require(\"./components\"));\n\nvar _Builders = _interopRequireDefault(require(\"./builders/Builders\"));\n\nvar _Components = _interopRequireDefault(require(\"./components/Components\"));\n\nvar _Displays = _interopRequireDefault(require(\"./displays/Displays\"));\n\nvar _Templates = _interopRequireDefault(require(\"./templates/Templates\"));\n\nvar _providers = _interopRequireDefault(require(\"./providers\"));\n\nvar _Rules = _interopRequireDefault(require(\"./validator/Rules\"));\n\nvar _conjunctions = _interopRequireDefault(require(\"./validator/conjunctions\"));\n\nvar _operators = _interopRequireDefault(require(\"./validator/operators\"));\n\nvar _quickRules = _interopRequireDefault(require(\"./validator/quickRules\"));\n\nvar _transformers = _interopRequireDefault(require(\"./validator/transformers\"));\n\nvar _valueSources = _interopRequireDefault(require(\"./validator/valueSources\"));\n\nvar _widgets = _interopRequireDefault(require(\"./widgets\"));\n\nvar _Form = _interopRequireDefault(require(\"./Form\"));\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _Evaluator = _interopRequireDefault(require(\"./utils/Evaluator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\n_Formio.default.loadModules = function () {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\".concat(_Formio.default.getApiUrl(), \"/externalModules.js\");\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'externalModules';\n\n  _Formio.default.requireLibrary(name, name, path, true).then(function (modules) {\n    _Formio.default.use(modules);\n  });\n}; // This is needed to maintain correct imports using the \"dist\" file.\n\n\n_Formio.default.Components = _Components.default;\n_Formio.default.Templates = _Templates.default;\n_Formio.default.Builders = _Builders.default;\n_Formio.default.Utils = _utils.default;\n_Formio.default.Form = _Form.default;\n_Formio.default.Displays = _Displays.default;\n_Formio.default.Providers = _providers.default;\n_Formio.default.Rules = _Rules.default;\n_Formio.default.Widgets = _widgets.default;\n_Formio.default.Evaluator = _Evaluator.default;\n_Formio.default.Conjunctions = _conjunctions.default;\n_Formio.default.Operators = _operators.default;\n_Formio.default.QuickRules = _quickRules.default;\n_Formio.default.Transformers = _transformers.default;\n_Formio.default.ValueSources = _valueSources.default;\n_Formio.default.AllComponents = _components.default; // This is strange, but is needed for \"premium\" components to import correctly.\n\n_Formio.default.Formio = _Formio.default;\n\n_Formio.default.Components.setComponents(_components.default);\n\nvar registerPlugin = function registerPlugin(plugin) {\n  // Sanity check.\n  if (_typeof(plugin) !== 'object') {\n    return;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(plugin); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var current = plugin.framework || _Formio.default.Templates.framework || 'bootstrap';\n\n    switch (key) {\n      case 'options':\n        _Formio.default.options = _lodash.default.merge(_Formio.default.options, plugin.options);\n        break;\n\n      case 'templates':\n        for (var _i2 = 0, _Object$keys2 = Object.keys(plugin.templates); _i2 < _Object$keys2.length; _i2++) {\n          var framework = _Object$keys2[_i2];\n\n          _Formio.default.Templates.extendTemplate(framework, plugin.templates[framework]);\n        }\n\n        if (plugin.templates[current]) {\n          _Formio.default.Templates.current = plugin.templates[current];\n        }\n\n        break;\n\n      case 'components':\n        _Formio.default.Components.setComponents(plugin.components);\n\n        break;\n\n      case 'framework':\n        _Formio.default.Templates.framework = plugin.framework;\n        break;\n\n      case 'fetch':\n        for (var _i3 = 0, _Object$keys3 = Object.keys(plugin.fetch); _i3 < _Object$keys3.length; _i3++) {\n          var name = _Object$keys3[_i3];\n\n          _Formio.default.registerPlugin(plugin.fetch[name], name);\n        }\n\n        break;\n\n      case 'providers':\n        for (var _i4 = 0, _Object$keys4 = Object.keys(plugin.providers); _i4 < _Object$keys4.length; _i4++) {\n          var type = _Object$keys4[_i4];\n\n          _Formio.default.Providers.addProviders(type, plugin.providers[type]);\n        }\n\n        break;\n\n      case 'displays':\n        _Formio.default.Displays.addDisplays(plugin.displays);\n\n        break;\n\n      case 'builders':\n        _Formio.default.Builders.addBuilders(plugin.builders);\n\n        break;\n\n      case 'rules':\n        _Formio.default.Rules.addRules(plugin.rules);\n\n        break;\n\n      case 'evaluator':\n        _Formio.default.Evaluator.registerEvaluator(plugin.evaluator);\n\n        break;\n\n      case 'conjunctions':\n        _Formio.default.Conjunctions.addConjunctions(plugin.conjunctions);\n\n        break;\n\n      case 'operators':\n        _Formio.default.Operators.addOperators(plugin.operators);\n\n        break;\n\n      case 'quickRules':\n        _Formio.default.QuickRules.addQuickRules(plugin.quickRules);\n\n        break;\n\n      case 'transformers':\n        _Formio.default.Transformers.addTransformers(plugin.transformers);\n\n        break;\n\n      case 'valueSources':\n        _Formio.default.ValueSources.addValueSources(plugin.valueSources);\n\n        break;\n\n      default:\n        console.log('Unknown plugin option', key);\n    }\n  }\n};\n/**\n * Allows passing in plugins as multiple arguments or an array of plugins.\n *\n * Formio.plugins(plugin1, plugin2, etc);\n * Formio.plugins([plugin1, plugin2, etc]);\n */\n\n\n_Formio.default.use = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  plugins.forEach(function (plugin) {\n    if (Array.isArray(plugin)) {\n      plugin.forEach(function (p) {\n        return registerPlugin(p);\n      });\n    } else {\n      registerPlugin(plugin);\n    }\n  });\n}; // Export the components.","map":null,"metadata":{},"sourceType":"script"}